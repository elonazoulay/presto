carbon	prism	operations	20180306_071418_57922_22hm2	unidash:156106921774832:argus:507138	WITH jobs_master AS (\n    SELECT\n        b.job_id,\n        b.event,\n        b.event_time,\n        b.actor_name,\n        CASE\n            WHEN event IN ('job_decision_success', 'job_move_success') THEN (\n                COALESCE(review_time_ms, 0) + COALESCE(research_time_ms, 0) + COALESCE(inactive_time_ms, 0)\n            ) /(1000 * 60)\n        END AS "Time_Spent_Working (in Min)"\n    FROM\tsingle_review_tool_main b\n    WHERE\n        1 = 1\n        AND CAST(FROM_UNIXTIME(event_time) AS DATE) >= DATE_ADD('month', -2, DATE_TRUNC('month', CAST(current_date AS DATE)))\n        AND vertical_id = 1547999522185001\n        AND event IN ('job_decision_success', 'job_move_success')\n        AND b.job_type = 750\n    GROUP BY\n        b.job_id,\n        b.event,\n        b.event_time,\n        b.actor_name,\n        CASE\n            WHEN event IN ('job_decision_success', 'job_move_success') THEN (COALESCE(review_time_ms, 0) + COALESCE(research_time_ms, 0) + COALESCE(inactive_time_ms, 0)) /(1000 * 60)\n        END\n),\njob_data AS (\n    SELECT\n        create_month,\n        COUNT(\n            CASE\n                WHEN job_creation_source = 'SRT' THEN job_id\n            END\n        ) AS num_SRT_jobs,\n        COUNT(\n            CASE\n                WHEN job_creation_source = 'Direct Support' THEN job_id\n            END\n        ) AS num_DS_jobs,\n        COUNT(job_id) AS total_jobs,\n        COUNT(\n            CASE\n                WHEN job_creation_source = 'SRT'\n                AND total_score IS NOT NULL THEN job_id\n            END\n        ) AS num_SRT_jobs_QA,\n        ROUND(\n            AVG(\n                CASE\n                    WHEN job_creation_source = 'SRT' THEN num_correspondences_sent\n                END\n            ),\n            2\n        ) AS num_SRT_correspondences_sent\n    FROM\n        work_operations_job_data\n    WHERE\n        ds = '2018-03-04'\n    GROUP BY\n        create_month\n),\nqa_data AS (\n    SELECT\n        "Review Month",\n        COUNT(DISTINCT quality_job_id) AS QAd_Jobs,\n        AVG(QA_score) AS Avg_QA_Score\n    FROM (\n            SELECT\n                CAST(DATE_TRUNC('month', from_unixtime(event_time)) AS DATE) "Review Month",\n                quality_job_id,\n                 (COALESCE(CAST(clarifying_questions AS DOUBLE), 0) \n               + COALESCE(CAST(root_cause_identification AS DOUBLE), 0) \n               + COALESCE(CAST(next_steps_work_arnd AS DOUBLE), 0) \n               + COALESCE(CAST(tkt_close_aftr_issue_resolve AS DOUBLE), 0) \n               + COALESCE(CAST(correct_classification AS DOUBLE), 0) \n               + COALESCE(CAST(all_right_questions_asked AS DOUBLE),0) \n               + COALESCE(CAST(tone_friendliness AS DOUBLE), 0) \n               + COALESCE(CAST(grammer_n_spell AS DOUBLE), 0) \n               + COALESCE(CAST(above_n_beyond AS DOUBLE), 0) \n               + COALESCE(CAST(task_filled_as_per_template AS DOUBLE), 0) \n               + COALESCE(CAST(task_correct_priority_score AS DOUBLE), 0) \n               + COALESCE(CAST(task_follow_up_done_ontime AS DOUBLE), 0) \n               + COALESCE(CAST(task_all_fields_filled AS DOUBLE), 0))\n                 / COALESCE(CAST(total_score AS DOUBLE), 0) QA_Score\n            FROM (\n                    SELECT\n                        CAST(\n                            JSON_EXTRACT(\n                                JSON_PARSE(regexp_replace(decision_data, '[\\s\\?\\/]', '_')),\n                                '$.questionAnswerLogs.Clarifying_questions_asked_.score'\n                            ) AS BIGINT\n                        ) AS clarifying_questions,\n                        CAST(\n                            JSON_EXTRACT(\n                                JSON_PARSE(regexp_replace(decision_data, '[\\s\\?]', '_')),\n                                '$.questionAnswerLogs.Root_cause_identification.score'\n                            ) AS BIGINT\n                        ) AS root_cause_identification,\n                        CAST(\n                            JSON_EXTRACT(\n                                JSON_PARSE(regexp_replace(decision_data, '[\\s\\?\\/]', '_')),\n                                '$.questionAnswerLogs.Provide_clear_next_steps_workarounds.score'\n                            ) AS BIGINT\n                        ) AS next_steps_work_arnd,\n                        CAST(\n                            JSON_EXTRACT(\n                                JSON_PARSE(regexp_replace(decision_data, '[\\s\\?]', '_')),\n                                '$.questionAnswerLogs.Was_the_ticket_closed_only_after_the_issue_was_resolved_.score'\n                            ) AS BIGINT\n                        ) AS tkt_close_aftr_issue_resolve,\n                        CAST(\n                            JSON_EXTRACT(\n                                JSON_PARSE(regexp_replace(regexp_replace(decision_data, '[\\s\\?]', '_'), ',_', '_')),\n                                '$.questionAnswerLogs.Correct_Issue_Type_Category_Subcategory.score'\n                            ) AS BIGINT\n                        ) AS correct_classification,\n                        CAST(\n                            JSON_EXTRACT(\n                                JSON_PARSE(regexp_replace(decision_data, '[\\s\\?]', '_')),\n                                '$.questionAnswerLogs.Includes_asking_all_the_right_questions_in_the_same_message.score'\n                            ) AS BIGINT\n                        ) AS all_right_questions_asked,\n                        CAST(\n                            JSON_EXTRACT(\n                                JSON_PARSE(regexp_replace(decision_data, '[\\s\\?\\/]', '_')),\n                                '$.questionAnswerLogs.Tone_friendliness.score'\n                            ) AS BIGINT\n                        ) AS tone_friendliness,\n                        CAST(\n                            JSON_EXTRACT(\n                                JSON_PARSE(regexp_replace(decision_data, '[\\s\\?]', '_')),\n                                '$.questionAnswerLogs.Proper_grammar_and_spelling.score'\n                            ) AS BIGINT\n                        ) AS grammer_n_spell,\n                        CAST(\n                            JSON_EXTRACT(\n                                JSON_PARSE(regexp_replace(decision_data, '[\\s\\?]', '_')),\n                                '$.questionAnswerLogs.Do_you_go_above_and_beyond_.score'\n                            ) AS BIGINT\n                        ) AS above_n_beyond,\n                        CAST(\n                            JSON_EXTRACT(\n                                JSON_PARSE(regexp_replace(decision_data, '[\\s\\?]', '_')),\n                                '$.questionAnswerLogs.Filled_out_correctly_per_template_.score'\n                            ) AS BIGINT\n                        ) AS task_filled_as_per_template,\n                        CAST(\n                            JSON_EXTRACT(\n                                JSON_PARSE(regexp_replace(decision_data, '[\\s\\?]', '_')),\n                                '$.questionAnswerLogs.Correct_priority_.score'\n                            ) AS BIGINT\n                        ) AS task_correct_priority_score,\n                        CAST(\n                            JSON_EXTRACT(\n                                JSON_PARSE(regexp_replace(decision_data, '[\\s\\?]', '_')),\n                                '$.questionAnswerLogs.Is_follow_up_done_on_time_in_case_of_follow_up_questions_.score'\n                            ) AS BIGINT\n                        ) AS task_follow_up_done_ontime,\n                        CAST(\n                            JSON_EXTRACT(\n                                JSON_PARSE(regexp_replace(decision_data, '[\\s\\?]', '_')),\n                                '$.questionAnswerLogs.All_required_fields_are_filled.score'\n                            ) AS BIGINT\n                        ) AS task_all_fields_filled,\n                        CAST(JSON_EXTRACT(JSON_PARSE(decision_data), '$.totalScore') AS BIGINT) AS total_score,\n                        j.event_time,\n                        j.queue_id AS quality_queue_id,\n                        j.queue_name AS quality_queue_name,\n                        j.job_id AS quality_job_id,\n                        j.quality_source_job_id AS source_job_id\n                    FROM\n                        single_review_tool_main j\n                    WHERE\n                        j.event = 'job_decision_success'\n                        AND CAST(FROM_UNIXTIME(event_time) AS DATE) >= DATE_ADD('month', -2, DATE_TRUNC('month', CAST(current_date AS DATE)))\n                        AND j.job_type = 15025\n                )\n        ) x\n    WHERE\n        1 = 1\n    GROUP BY\n        "Review Month"\n),\ncsat_data AS (\nSELECT\n    DATE_TRUNC('month',survey_date) as survey_month,\n    CASE\n        WHEN (CAST(COUNT(DISTINCT TB) AS DOUBLE) + CAST(COUNT(DISTINCT BB) AS DOUBLE)) = 0 THEN 0\n        ELSE CAST(COUNT(DISTINCT TB) AS DOUBLE) /(CAST(COUNT(DISTINCT TB) AS DOUBLE) + CAST(COUNT(DISTINCT BB) AS DOUBLE)) * 100\n    END AS "CSAT%"\nFROM(\n        SELECT\n            CAST(time_started as date) AS survey_date,\n            job_id,\n                CASE\n                    WHEN atwork_support_sat_numeric IN (4, 5) THEN response_id\n                END\n             AS TB,\n                CASE\n                    WHEN atwork_support_sat_numeric IN (1, 2, 3) THEN response_id\n                END\n             AS BB\n        FROM\n            work_operations_job_csat_data\n        WHERE\n            CAST(time_started AS DATE) >= DATE_ADD('month', -2, DATE_TRUNC('month', CAST(current_date AS DATE)))\n    )\nGROUP BY\n    DATE_TRUNC('month',survey_date)\n),\ncorrespondence_received AS (\n    SELECT\n        b.job_id,\n        from_unixtime(b.event_time) AS event_time,\n        b.actor_name,\n        row_number() over(\n            PARTITION by job_id\n            ORDER BY\n                event_time\n        ) rn\n    FROM\n        single_review_tool_main b\n    WHERE\n        1 = 1\n        AND CAST(FROM_UNIXTIME(event_time) AS DATE) >= DATE_ADD('month', -2, DATE_TRUNC('month', CAST(current_date AS DATE)))\n        AND vertical_id = 1547999522185001\n        AND event IN ('correspondence_received')\n        AND b.job_type = 750\n),\ncorrespondence_sent AS (\n    SELECT\n        b.job_id,\n        from_unixtime(b.event_time) AS event_time,\n        b.actor_name,\n        row_number() over(\n            PARTITION by job_id\n            ORDER BY\n                event_time\n        ) rn\n    FROM\n        single_review_tool_main b\n    WHERE\n        1 = 1\n        AND CAST(FROM_UNIXTIME(event_time) AS DATE) >= DATE_ADD('month', -2, DATE_TRUNC('month', CAST(current_date AS DATE)))\n        AND vertical_id = 1547999522185001\n        AND event IN ('correspondence_sent')\n        AND review_system = 'reviewer'\n        AND LOWER(actor_name) <> 'srt automation'\n        AND b.job_type = 750\n),\nsubrequest_responses\nAS\n(\nSELECT\n    event_month,\n    ROUND(AVG("Time Between Response Received and  Reply(In Min.)"),2) AS "Time Between Response Received and  Reply(In Min.)"\nFROM (\n        SELECT\n            DATE_TRUNC('month', CAST(event_time AS DATE)) AS event_month,\n            job_id,\n            AVG("Time Between Response Received and  Reply(In Min.)") AS "Time Between Response Received and  Reply(In Min.)"\n        FROM(\n                SELECT\n                    a.job_id,\n                    a.event_time,\n                    --b.event_time,\n                    DATE_DIFF('minute', a.event_time, b.event_time) AS "Time Between Response Received and  Reply(In Min.)"\n                FROM\n                    correspondence_received a\n                    INNER JOIN correspondence_sent b\n                    ON (\n                        a.job_id = b.job_id\n                        AND a.rn = b.rn\n                    )\n                WHERE\n                    b.event_time > a.event_time\n                    AND a.rn > 1\n                    --(4 Days In Mins.) Condition added to eliminate cases where there are multiple receives before a reply and vice versa.\n                    AND DATE_DIFF('minute', a.event_time, b.event_time) <= 5760 \n            )\n        GROUP BY\n            DATE_TRUNC('month', CAST(event_time AS DATE)),\n            job_id\n    )\nGROUP BY\n    event_month)    \nSELECT\n    CAST(DATE_TRUNC('month', from_unixtime(event_time)) AS DATE) "Review Month",\n    y.total_jobs AS "Total Number Of Jobs Received",\n    ROUND(v."CSAT%",2) AS "CSAT%",\n    y.num_DS_jobs AS "Total Number Of Direct Support Jobs Received",\n    y.num_SRT_jobs AS "Total Number Of SRT Jobs Received",\n    COUNT(\n        DISTINCT CASE\n            WHEN "Time_Spent_Working (in Min)" > 0 THEN x.job_id\n        END\n    ) AS "No. Of Jobs With Review Time (SRT Only)",\n    ROUND(((z.QAd_Jobs) * 1.0 / y.num_SRT_jobs) * 100, 2) AS "%Jobs QA'd From SRT",\n    ROUND(z.Avg_QA_Score*100,2) AS "Avg. QA Score",\n    ROUND(AVG("Time_Spent_Working (in Min)"), 2) AS "Avg. Time Spent Per Correspondence (In Min. SRT Only)",\n    num_SRT_correspondences_sent AS "Avg. Number Of Correspondences (SRT Only)",\n    ROUND(ROUND(AVG("Time_Spent_Working (in Min)"), 2) * num_SRT_correspondences_sent, 2) AS "Avg. Time Spent Per Job (SRT Only)",\n    u."Time Between Response Received and  Reply(In Min.)" AS "Subsequent Response Times (In Min.)"\nFROM\n    jobs_master x\n    LEFT JOIN job_data y\n    ON (CAST(DATE_TRUNC('month', from_unixtime(x.event_time)) AS DATE) = CAST(y.create_month AS date))\n    INNER JOIN qa_data z\n    ON (CAST(DATE_TRUNC('month', from_unixtime(x.event_time)) AS DATE) = CAST(z."Review Month" AS date))\n    LEFT JOIN csat_data v\n    ON (CAST(DATE_TRUNC('month', from_unixtime(x.event_time)) AS DATE) = survey_month)\n    INNER JOIN subrequest_responses u\n    ON (CAST(DATE_TRUNC('month', from_unixtime(x.event_time)) AS DATE) = event_month)\nWHERE\n    actor_name IS NOT NULL\nGROUP BY\n    CAST(DATE_TRUNC('month', from_unixtime(event_time)) AS DATE),\n    y.total_jobs,\n    y.num_DS_jobs,\n    y.num_SRT_jobs,\n    ROUND(((z.QAd_Jobs) * 1.0 / y.num_SRT_jobs) * 100, 2),\n    num_SRT_correspondences_sent,\n    z.Avg_QA_Score,\n    v."CSAT%",\n    u."Time Between Response Received and  Reply(In Min.)"\nORDER BY\n    CAST(DATE_TRUNC('month', from_unixtime(event_time)) AS DATE) DESC
carbon	prism	operations	20180306_072633_59775_22hm2	unidash:513069372411518:argus:488204	WITH top_fn_queues AS (SELECT --error_category, \nqueue_name, -- error_category, week_end_date, work_type_tenure, review_actor_vendor, --audit_job_id, \nCOUNT() as Incorrect_FN_REP_count\n\nFROM\n    rc_audits\nWHERE \n    ds='2018-03-04' \n    \n    AND week_end_date > '2018-02-18' AND week_end_date < '2018-02-25'  \n    AND person_type = 'Rep'\n    AND co_false_negative_ind\n    AND creation_source = 'reactive'\n    AND market_reporting IN ('VIETNAMESE', 'THAI', 'FILIPINO', 'INDONESIAN', 'BURMESE','MALAY') \n\nGROUP BY 1--,2,3,4,5\nORDER BY Incorrect_FN_REP_count DESC\nLIMIT 10\n)\nSELECT -- error_category, \nqueue_name, error_category,-- review_actor_vendor, --audit_job_id, \nCOUNT() as Incorrect_FN_REP_count\n\nFROM\n    rc_audits\nWHERE \n    ds='2018-03-04' \n    \n    AND week_end_date > '2018-02-18' AND week_end_date < '2018-02-25'  \n    AND person_type = 'Rep'\n    AND co_false_negative_ind\n    AND creation_source = 'reactive'\n    AND market_reporting IN ('VIETNAMESE', 'THAI', 'FILIPINO', 'INDONESIAN', 'BURMESE','MALAY')\n    AND queue_name in (SELECT DISTINCT queue_name from top_fn_queues)\n\nGROUP BY 1,2\nORDER BY Incorrect_FN_REP_count DESC\nlimit 30
carbon	prism	videos	20180306_073609_61094_22hm2	argus:argus:342824	SELECT\n  a.broadcast_id,\n  a.broadcaster_country country,\n  a.broadcaster_language,\n  a.broadcaster_name as page_name,\n  a.concurrent_viewers as peak_concurrent_viewers,\n  (b.watch_time_live_s_from_3s_viewers / b.live_3s_viewers) as average_watchtime,\n  a.broadcaster_super_page_category,\n/*  FROM_UNIXTIME(broadcast_start_time + (3600 * 16)) as time, */\n/*  CONCAT('https://www.facebook.com/', CAST(broadcast_id AS VARCHAR)) \n    broadcast_url, */\n  (a.broadcast_duration_s / 60) as video_length_min,\n  a.broadcaster_audience_size,\n  a.entry_point\nFROM fct_live_broadcast:videos a\nJOIN fct_live_broadcaster_funnel:videos b\nON a.broadcast_id=b.video_id\nWHERE a.ds>='2018-02-18'\n/* AND a.broadcaster_language IN ('en_US', 'ja', 'ko', NULL) */\n/* AND a.broadcaster_country IN ('US', NULL) */\nAND b.live_3s_viewers > 0\nAND a.broadcast_privacy IN ('public', NULL)\nAND a.broadcaster_type IN ('PAGE', NULL)\nAND a. broadcaster_is_verified = 1\nORDER BY a.concurrent_viewers DESC\nLIMIT 30
ftw2_adhoc2	prism	ad_metrics	20180306_073500_15444_3g9mm	unidash:491098211268649:argus:470184	with base as(\nSELECT \n    ad.ds,\n    ad.ad_id,\n    CASE\n        WHEN human_confidence_level = 1 THEN 'confidence'\n        WHEN human_confidence_level = 0 THEN 'not_confidence'\n        ELSE 'incomplete'\n    END AS status,\n    CASE\n        WHEN country = 'US' THEN 'US'\n        WHEN country = 'GB' THEN 'UK'\n        ELSE 'RoW'\n    END AS country,\n    IF(test_type = 'rv_test', 'Rewarded Video', 'Native') AS test_type,\n    UPPER(human.category) AS human_category,\n    UPPER(machine.category) AS machine_category,\n    UPPER(result.human_category_name) AS review_category,\n    blocked_parent_categories,\n    COALESCE(\n        IF(result.human_category=78, 0, NULL\n        ), IF(CONTAINS(blocked_parent_categories, result.human_category), 1, 0)\n    ) AS if_bad,\n    impressions\nFROM (\n    SELECT \n        ds,\n        ad_id,\n        country,\n        test_type,\n        ad_category_machine,\n        ad_category_human,\n        blocked_parent_categories,\n        impressions\n    FROM ads_cat_king_sample_v2\n    WHERE ds >= '2018-02-02'\n) ad\nLEFT JOIN (\n    SELECT\n        DISTINCT id,\n  \t\t\tparent_category,\n        category\n    FROM video_categorization_enum\n) machine\nON ad.ad_category_machine = machine.id\nLEFT JOIN (\n    SELECT\n        DISTINCT id,\n  \t\t\tparent_category,\n        category\n    FROM\n        video_categorization_enum\n) human\nON ad.ad_category_human = human.id\nLEFT JOIN (\n    SELECT \n        ad_id,\n        human_category_name,\n        human_category,\n        human_parent_category_name,\n        human_parent_category,\n        human_confidence_level\n    FROM ads_cat_dashboards \n    WHERE ds = '2018-03-04'\n)result\nON ad.ad_id = result.ad_id\n)\n\nSELECT\n    ds,\n    country,\n    test_type as "Test Type",\n    avg(BDR) over (\n        partition by country,\n        test_type\n        ORDER BY\n            ds rows between 2 preceding\n            AND current row\n    ) as BDR\nFROM\n    (\n        SELECT\n            ds,\n            country,\n            test_type,\n            --1.0*sum(if(status='confidence',impressions,0))/sum(impressions),\n            1.0 * sum(\n                if(\n                    if_bad = 1\n                    AND status = 'confidence'\n                    AND review_category != 'OTHER',\n                    impressions,\n                    0\n                )\n            ) / sum(if(status = 'confidence' AND review_category != 'OTHER', impressions, 0)) as BDR,\n            1.0*sum(if(status != 'incomplete', impressions, 0))/sum(impressions) as complete\n        FROM\n            base\n        WHERE\n            ds >= '2018-02-02'\n        GROUP BY\n            1,\n            2,\n            3\n    )\nWHERE complete >= 0.80
de4ftw2	raptor	de	20180306_070454_05855_z5zx8	unidash:1268991999862258:argus:395688	SELECT\nreport_ds AS ds,\n\nAVG(broadcast_media_per_dap) OVER (ORDER BY report_ds ASC ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS "overall broadcast_actual",\n.80 AS "overall broadcast_endgoal"\n\n\n/*\ndap ,\nwap ,\nmap ,\nus_teens_dap,\nAVG(ts_per_dap) OVER (ORDER BY report_ds ASC ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS ts_per_dap,\nAVG(feed_media_per_dap) OVER (ORDER BY report_ds ASC ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS feed_media_per_dap,\nAVG(stories_media_per_dap) OVER (ORDER BY report_ds ASC ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS stories_media_per_dap,\nAVG(broadcast_media_per_dap) OVER (ORDER BY report_ds ASC ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS broadcast_media_per_dap,\nAVG(private_media_per_dap) OVER (ORDER BY report_ds ASC ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS private_media_per_dap,\nAVG(live_broadcasts_1d) OVER (ORDER BY report_ds ASC ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS live_broadcasts_1d,\nrevenue_7day,\nH1_actual_total_rev,\nAVG(monthly_active_businesses) OVER (ORDER BY report_ds ASC ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS monthly_active_businesses,\nAVG(monthly_active_advertisers) OVER (ORDER BY report_ds ASC ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS monthly_active_advertisers,\nAVG(live_producer_daily_PR) OVER (ORDER BY report_ds ASC ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS live_producer_daily_PR,\nAVG(feed_producer_daily_PR) OVER (ORDER BY report_ds ASC ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS feed_producer_daily_PR,\nAVG(story_producer_daily_PR) OVER (ORDER BY report_ds ASC ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS story_producer_daily_PR,\nAVG(private_producer_daily_PR) OVER (ORDER BY report_ds ASC ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS private_producer_daily_PR\n*/\nFROM ig_company_dash_metrics\nWHERE ds IN (SELECT MAX(ds) FROM ig_company_dash_metrics)\nAND cast(report_ds as date) <= cast(ds as date)\nAND report_ds >= '2015-01-01'
de4ftw2	raptor	de	20180306_072241_06278_z5zx8	metrik_service:argus:448188	SELECT\n    ds,\n    \n     '_'  \n    \n    AS dim,     \n\n    SUM(play_start_n) AS weight,\n\n    \n        \n        \n          SUM(play_start_n) * 1.0 / SUM(request_start) / 1 \n        \n           \n      AS  metric_daily \n    \nFROM instagram_video_playback_agg\nWHERE ds BETWEEN CAST('2017-08-01' AS DATE) AND CAST('2018-03-04' AS DATE)\n\t\t\n    \n    \n    AND play_start_n >= 0\n    \n    AND request_start >= 0\n    \n    \n    \n\n     \n    \n       \n    \n         \n  \n     \n    \n     \n    \n     \n\n     \n\n     \n    \n             \n    \n      \n    \nGROUP BY \n    ds,\n     '_'  \n      \nORDER BY \n    3 DESC
ftw2_adhoc2	prism	ad_metrics	20180306_073843_15598_3g9mm	unidash:366781907130014:argus:507906	SELECT distinct a.publisher_id, a.publisher_name, a.claimed_url, b.domain_violation, a.ds  \nFROM\n\tinstant_article_domain_review a\nJOIN ia_domain_violations b\nON CAST(a.review_result as VARCHAR)=b.code\nWHERE\n    a.event IN ('ia_domain_review_reviewed')\n\tand a.ds > '2018-01-01'\n    and a.publisher_id = (102741310369588)\nORDER BY 5 DESC
ftw2_adhoc2	prism	ad_metrics	20180306_073607_15491_3g9mm	unidash:235957273604077:argus:423393	with base as (SELECT\n  \tds,\n\n    1.0*count(distinct if(is_category_threshold_used,host_video_id,null))/count(distinct if(num_blocked_categories>0,host_video_id,null)) AS optimization\n\nFROM instream_ads_impression_with_category_info\nWHERE ds >= '2018-02-02'\nGROUP BY 1)\n\nselect ds, optimization, avg(optimization) over (order by ds, ds rows between 6 preceding and current row) as optimization_7d from base
de4ftw2	raptor	de	20180306_070928_05885_z5zx8	unidash:390427884703309:argus:481807	with cte as (    -- to ensure the latest date for search and post search charts/grids are same take min of the max dates\nselect min(max_ds) as max_ds from\n    (\n    select max(ds) as max_ds from result_page_cube where ds > DATE '2018-02-22'\n    UNION ALL\n    select max(ds) as max_ds from daily_search_stats_cube where ds > DATE '2018-02-22'\n    ) x\n)\nSELECT\n    \n    \n    \n    \n    \n    \n       -- append a preix to differentiate between post search & all search   \n\t\t\tCOALESCE(a.ds,c.ds) as ds,\n    \tCOALESCE(a.entry_point_category,c.entry_point_category) as entry_point_category,\n    \n       AVG(a.searches) OVER (PARTITION BY COALESCE(a.entry_point_category,c.entry_point_category)\n      ORDER BY COALESCE(a.ds,c.ds) ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as ps_vol\n      ,AVG(b.day1active) OVER (PARTITION BY COALESCE(a.entry_point_category,c.entry_point_category)\n      ORDER BY COALESCE(a.ds,c.ds) ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as ps_dap\n      ,AVG(b.day7active) OVER (PARTITION BY COALESCE(a.entry_point_category,c.entry_point_category)\n      ORDER BY COALESCE(a.ds,c.ds) ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as ps_wap\n      ,AVG(b.day28active) OVER (PARTITION BY COALESCE(a.entry_point_category,c.entry_point_category)\n      ORDER BY COALESCE(a.ds,c.ds) ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as ps_map\n       ,AVG(IF(e.day1active>0,a.searches * 1.0 / e.day1active)) OVER (PARTITION BY COALESCE(a.entry_point_category,c.entry_point_category)\n      ORDER BY COALESCE(a.ds,c.ds) ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as "ps_s/dap"\n       ,AVG(IF(e.day1active>0,a.searchers * 1.0 / e.day1active)) OVER (PARTITION BY COALESCE(a.entry_point_category,c.entry_point_category)\n      ORDER BY COALESCE(a.ds,c.ds) ROWS BETWEEN 6 PRECEDING AND CURRENT ROW)  as ps_participation_rate\n       ,AVG(IF(a.searchers>0,a.searches * 1.0 / a.searchers)) OVER (PARTITION BY COALESCE(a.entry_point_category,c.entry_point_category)\n      ORDER BY COALESCE(a.ds,c.ds) ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as ps_sps\n      ,AVG(IF(k.wow_active > 0, k.wow_retained * 1.0 / k.wow_active)) OVER (PARTITION BY COALESCE(a.entry_point_category,c.entry_point_category)\n      ORDER BY COALESCE(a.ds,c.ds) ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as ps_wow_retained\n       ,AVG(c.searches) OVER (PARTITION BY COALESCE(a.entry_point_category,c.entry_point_category)\n      ORDER BY COALESCE(a.ds,c.ds) ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as all_vol\n        ,AVG(d.day1active) OVER (PARTITION BY COALESCE(a.entry_point_category,c.entry_point_category)\n      ORDER BY COALESCE(a.ds,c.ds) ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as all_dap\n         ,AVG(IF(f.day1active>0,c.searches * 1.0 / f.day1active)) OVER (PARTITION BY COALESCE(a.entry_point_category,c.entry_point_category)\n      ORDER BY COALESCE(a.ds,c.ds) ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as "all_s/dap"\n      ,AVG(IF(f.day1active>0,c.searchers * 1.0 / f.day1active)) OVER (PARTITION BY COALESCE(a.entry_point_category,c.entry_point_category)\n      ORDER BY COALESCE(a.ds,c.ds) ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as all_participation_rate\n      ,AVG(IF(c.searchers>0,c.searches * 1.0 / c.searchers)) OVER (PARTITION BY COALESCE(a.entry_point_category,c.entry_point_category)\n      ORDER BY COALESCE(a.ds,c.ds) ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as all_sps\n    \n\nFROM\n\n\n    (\n        \n     SELECT ds,\n            entry_point_category,\n            max(searches) as searches,\n            max(searchers) as searchers\n            -- max(scr_from_rp) as scr_from_rp\n    FROM        \n     ( \n      SELECT\n            ds,\n             \n            COALESCE(entry_point_category, 'overall') AS entry_point_category,    \n            \n            aggregate_type,\n            CAST(SUM(sessions) AS DECIMAL (18, 0)) AS searches,\n            CAST(SUM(searchers) AS DECIMAL (18, 0)) AS searchers\n       --   CAST(SUM(sessions_with_clicks) * 1.0/SUM(sessions) as DECIMAL(18,4)) AS scr_from_rp\n        FROM\n            result_page_cube\n        WHERE\n            ds > date '2017-02-17'\n             AND aggregate_type IN (\n             CAST(\n               2048 -- is_classifier_post_search is bound by default\n             + IF('overall'='overall', 0, 1)\n             + IF('overall'='overall', 0, 4)\n             + IF('overall'='overall', 0, 32)\n             + IF('overall'='overall', 0, 64)\n             + IF('overall'='overall', 0, 4096)  \n             AS VARCHAR),\n            CAST(\n               2048 -- is_classifier_post_search is bound by default\n             + 32 -- country is MECE per user. We have more aggs which have country cut in it\n             + IF('overall'='overall', 0, 1)\n             + IF('overall'='overall', 0, 4)\n             + IF('overall'='overall', 0, 64)\n             + IF('overall'='overall', 0, 4096)  \n             AS VARCHAR),\n             CAST(\n               2048 -- is_classifier_post_search is bound by default\n             + IF('overall'='overall' and 'entry_point_category'!='interface', 0, 1)\n             + IF('overall'='overall' and 'entry_point_category'!='entry_point_category', 0, 4)\n             + IF('overall'='overall' and 'entry_point_category'!='country', 0, 32)\n             + IF('overall'='overall' and 'entry_point_category'!='locale', 0, 64)\n             + IF('overall'='overall' and 'entry_point_category'!='search_type', 0, 4096)  \n             AS VARCHAR),             \n             CAST(\n               2048 -- is_classifier_post_search is bound by default\n             + 32\n             + IF('overall'='overall' and 'entry_point_category'!='interface', 0, 1)\n             + IF('overall'='overall' and 'entry_point_category'!='entry_point_category', 0, 4)\n             + IF('overall'='overall' and 'entry_point_category'!='locale', 0, 64)\n             + IF('overall'='overall' and 'entry_point_category'!='search_type', 0, 4096)  \n             AS VARCHAR))  \n            AND is_classifier_post_search = 1\n            \n      \n            \n      \n      \n            \n      \n            \n            \n            \n      \n            \n      \n              \n       \n\t\t\t\t\t\t  \n      \n \n        GROUP BY \n            1,2,3\n    \n      ) x\n    GROUP BY\n          1,2\n    )a\n    \n    \n    LEFT OUTER JOIN (\n     SELECT ds,\n            entry_point_category, \n            max(day1active) as day1active,\n            max(day7active) as day7active,\n            max(day28active) as day28active\n     FROM \n      (\n      SELECT\n            ds,\n            \n            COALESCE(entry_point_category, 'overall') AS entry_point_category,    \n             \n            aggregate_type,\n            CAST(SUM(l1active) AS DECIMAL (18, 0)) AS day1active,\n            CAST(SUM(l7active) AS DECIMAL (18, 0)) AS day7active,\n            CAST(SUM(l28active) AS DECIMAL (18, 0)) AS day28active\n \n        FROM\n            result_page_intent_ga_agg\n        WHERE\n            ds > date '2017-01-16' -- data starting Jan 17 only\n            AND aggregate_type IN (\n             CAST( \n               1\n             + IF('overall'='overall', 0, 0)\n             + IF('overall'='overall', 0, 4)\n             + IF('overall'='overall', 0, 8)\n             + IF('overall'='overall', 0, 16)  \n             + IF('overall'='overall', 0, 32)\n             AS VARCHAR),\n             CAST(\n               1\n             + IF('overall'='overall', 0, 0)\n             + IF('overall'='overall' and 'entry_point_category'!='interface', 0, 4)\n             + IF('overall'='overall' and 'entry_point_category'!='locale', 0, 8)\n             + IF('overall'='overall' and 'entry_point_category'!='search_type', 0, 16)  \n             + IF('overall'='overall' and 'entry_point_category'!='entry_point_category', 0, 32) \n             AS VARCHAR))\n            \n            \n      \n            \n      \n      \n            \n      \n            \n            \n            \n      \n            \n      \n              \n    \n        GROUP BY\n            1,2,3\n   \n        ) y\n      \n      GROUP BY \n          1,2\n      ) b\n    ON a.ds = b.ds\n    AND a.entry_point_category = b.entry_point_category \n    \n    LEFT OUTER JOIN (\n      \n    SELECT \n          ds,\n          entry_point_category,\n          max(day1active) as day1active\n    FROM      \n      \n     ( \n     SELECT\n            ds,\n             \n            'overall' AS entry_point_category,\n            \n            aggregate_type,\n            \n            CAST(SUM(dap) AS DECIMAL (18, 0)) AS day1active\n             \n      \n        FROM\n            search_rolled_out_dap\n        WHERE\n            ds > date '2017-02-17'\n      \n            AND aggregate_type IN (\n             CAST( \n               \n               IF('overall'='overall', 0, 4)\n             + IF('overall'='overall', 0, 1)\n             + IF('overall'='overall', 0, 2)\n             AS VARCHAR),\n             CAST(\n               4\n             + IF('overall'='overall' and 'entry_point_category'!='interface', 0, 1)\n             + IF('overall'='overall' and 'entry_point_category'!='locale', 0,2 )\n             AS VARCHAR))\n      \n            \n            \n            \n            \n            \n      \n            \n\n      \n              \n       \n             \n    \n        GROUP BY\n            1,2,3\n\n      ) z\n     \n     GROUP BY 1,2\n    ) e\n      \n      \n    ON a.ds = e.ds\n    AND a.entry_point_category =  e.entry_point_category\n  \n    \n    LEFT OUTER JOIN (\n      \n    SELECT \n          ds,\n          entry_point_category,\n          max(wow_retained) as wow_retained,\n          max(wow_active) as wow_active\n      \n    FROM      \n      \n     ( \n     SELECT\n            ds,\n            \n            COALESCE(entry_point_category, 'overall') AS entry_point_category,   \n            \n            aggregate_type,\n            CAST(SUM(wk2_14d_retained) AS DECIMAL (18, 0)) AS wow_retained,\n            CAST(SUM(wk1_14d_active) AS DECIMAL (18, 0)) AS wow_active\n      \n        FROM\n            result_page_intent_retention_wow\n        WHERE\n            ds > date '2017-01-23' -- data available starting Jan 24th\n      \n             AND aggregate_type IN (\n             CAST(\n               1 -- userID\n             + IF('overall'='overall', 0, 0)\n             + IF('overall'='overall', 0, 4)\n             + IF('overall'='overall', 0, 8)\n             + IF('overall'='overall', 0, 16)  \n             + IF('overall'='overall', 0, 32)\n             AS VARCHAR),\n             CAST(\n               1 -- userID\n             + IF('overall'='overall' and 'entry_point_category'!='country', 0, 0)\n             + IF('overall'='overall' and 'entry_point_category'!='interface', 0, 4)\n             + IF('overall'='overall' and 'entry_point_category'!='locale', 0, 8)\n             + IF('overall'='overall' and 'entry_point_category'!='search_type', 0, 16)  \n             + IF('overall'='overall' and 'entry_point_category'!='entry_point_category', 0, 32)\n             AS VARCHAR)\n             )\n       \n            \n            \n            \n            \n            \n      \n            \n\n      \n              \n       \n             \n            \n             \n     \n             GROUP BY\n              1,2,3\n\n      ) z\n     \n     GROUP BY 1,2\n    ) k\n      \n      \n    ON a.ds = k.ds\n    AND a.entry_point_category =  k.entry_point_category\n    \n   \n   \n\n\n\nFULL OUTER JOIN\n \n\n\n\n      --get search metrics for all the grids and search charts only \n    (\n\t\t\t\t\n      SELECT \n      \tds,\n      \tentry_point_category,\n      \tmax(searches) as searches,\n      \tmax(searchers) as searchers\n      \n      FROM\n      \n        (\n          SELECT\n            ds,\n             \n            'overall' AS entry_point_category,\n            \n      \t\t\taggregate_type,\n            CAST(SUM(volume) AS DECIMAL (18, 0)) AS searches,\n            CAST(SUM(num_users) AS DECIMAL (18, 0)) AS searchers\n        FROM\n            daily_search_stats_cube\n        WHERE\n            ds > date '2017-02-17'\n      \n            AND aggregate_type IN (\n             CAST(\n               3 -- country,locale\n             + IF('overall'='overall' and 'entry_point_category'!='interface', 0, 128)\n             + IF('overall'='overall' and 'entry_point_category'!='search_type', 0, 64)   \n             + IF('overall'='overall' and 'entry_point_category'!='selected_type', 0, 16252) \n             AS VARCHAR),\n              CAST(\n               3 -- country,locale\n             + IF('overall'='overall' and 'entry_point_category'!='interface', 0, 128)\n             + IF('overall'='overall' and 'entry_point_category'!='search_type', 0, 64)   \n             + IF('overall'='overall' and 'entry_point_category'!='selected_type', 0, 16380) \n             AS VARCHAR))\n \n            \n            \n      \n            \n      \n      \t\t\t\n      \n            \n      \n            \n            \n      \t\t\t\n      \n            \n      \n            \n      \n              \n\n      GROUP BY \n          1,2,3\n      ) z\n      \n      GROUP BY \n      \t1,2\n      \n      \n      UNION ALL\n      \n        SELECT\n            ds,\n            'overall' as entry_point_category,\n            CAST(SUM(volume) AS DECIMAL (18, 0)) AS searches,\n            CAST(SUM(num_users) AS DECIMAL (18, 0)) AS searchers\n        FROM\n            daily_search_stats_cube\n        WHERE\n            ds > date '2017-02-17'\n      \n            AND aggregate_type IN \n      \t\t\t(CAST(\n               3 -- country,locale\n             + IF('overall'='overall', 0, 128)\n             + IF('overall'='overall', 0, 64)   \n             AS VARCHAR))\n            \n            \n      \n            \n      \n            \n      \t\t\t\n      \n            \n      \n      \n      GROUP BY \n          1,2\n    \n    ) c\n    \n    \n    ON a.ds = c.ds\n    AND a.entry_point_category = c.entry_point_category\n     \n\n    \n    \n    \n    LEFT OUTER JOIN\n        (          \n        \n          \n          SELECT\n            ds,\n             \n            'overall' AS entry_point_category,\n             \n            CAST(SUM(active1day) AS DECIMAL (18, 0)) AS day1active,\n            CAST(SUM(active7day) AS DECIMAL (18, 0)) AS day7active,\n            CAST(SUM(active28day) AS DECIMAL (18, 0)) AS day28active\n        FROM\n            fct_search_ga_agg\n        WHERE\n            ds > date '2017-02-17'\n            \n                \n          \n          \t\n          \n          \t\n      \n            \n          \n          \t\n            \n              \n          \n             \n            AND aggregation ='overall'\n             \n            \n\n            \n        GROUP BY\n            1,2\n           \n          UNION ALL\n          \n           \n          SELECT\n            ds,\n            'overall' AS entry_point_category,\n            CAST(SUM(active1day) AS DECIMAL (18, 0)) AS day1active,\n            CAST(SUM(active7day) AS DECIMAL (18, 0)) AS day7active,\n            CAST(SUM(active28day) AS DECIMAL (18, 0)) AS day28active\n        FROM\n            fct_search_ga_agg\n        WHERE\n            ds > date '2017-02-17'\n            \n            \n      \n            \n          \n\n\n            AND aggregation ='overall'\n        \n           \n\n            \n        GROUP BY\n            1,2\n           \n          \n         ) d\n    ON c.ds = d.ds\n    AND c.entry_point_category = d.entry_point_category\n    \n    \n    LEFT OUTER JOIN \n    (\n    select ds,\n    \n     'Unknown' AS entry_point_category,\n        \n      sum(dap)  AS day1active\n\n    from fb_interface_dap\n    where ds > date '2017-02-17'\n          \n            \n            \n        GROUP BY\n            1,2\n           \n    ) f\n    ON c.ds = f.ds\n    AND c.entry_point_category = f.entry_point_category\n    \n\n     \n\nwhere \n\t\t\n     \n    \t\tCOALESCE(a.entry_point_category,c.entry_point_category) is not NULL\n        AND COALESCE(a.entry_point_category,c.entry_point_category) <> 'overall' \n        AND COALESCE(a.ds,c.ds) <=  (select max_ds from cte)\n        AND COALESCE(a.ds,c.ds)  > date '2017-03-04'\n        \n        \n        \n     \n    \n    \nORDER BY 1,3 DESC
ftw2_adhoc2	prism	ad_metrics	20180306_072835_15236_3g9mm	unidash:1348329421962773:argus:473529	SELECT a.ds\n, 'dim' as dim\n, daily_revenue as metric_value\n, avg(daily_revenue) over (order by a.ds asc\n          rows between 6 preceding and current row) as metric_value_7d_avg\n, daily_revenue_goal as goal\n\nFROM oco_beta_daily_progress a\n\n--LEFT OUTER JOIN\n--(SELECT ds, COUNT(study_id) AS total_lift_studies, SUM(has_stat_sig) AS total_statsig_lift_studies,\n--    SUM(has_stat_sig) * 100.0 / COUNT(study_id) AS pct_lift_studies_statsig\n--    FROM(\n--        SELECT ds, study_id\n--        , MAX(conversions_isstatsig) AS has_stat_sig\n--        FROM oco_beta_lift_tests \n--        WHERE optimization_goal_str = 'AD_OPTIMIZATION_GOAL_OFFLINE_CONVERSIONS'\n--        GROUP BY 1, 2)\n--    GROUP BY 1) b\n--ON a.ds = b.ds\n\n\n--ORDER BY a.ds DESC
de4ftw2	raptor	de	20180306_073935_06495_z5zx8	unidash:818327124988077:argus:430773	--------------------------------------------------------------------------------\n--  aggregate_type for result_page_cube:\n--  interface                       =    1\n--  vertical                        =    2\n--  entry_point_category            =    4\n--  result_page_type                =    8\n--  is_post_search                  =   16\n--  country                         =   32\n--  locale                          =   64\n--  entry_point_category_group      =  128\n--  has_user_intent                 =  256\n--  typeahead_selected_module       =  512\n--  typeahead_selected_keyword_type = 1024\n--  is_classifier_post_search       = 2048\n--  search_subtype                  = 4096\n--\n--  aggregate_type for search_sessions_retention_wow:\n--  user_id              =   1\n--  interface            =   2\n--  request_locale       =   4\n--  country              =   8\n--  last_state           =  16\n--  search_subtype       =  32\n--  search_target_type   =  64\n--  is_non_person_search = 128\n--\n--  aggregate_type for search_rolled_out_dap:\n--  interface  = 1\n--  app_locale = 2\n--  country    = 4\n--------------------------------------------------------------------------------\n\nSELECT\n  qry1.ds\n  , qry1.volume_rank\n  , qry1.locale\n\n  \n    , CAST(     qry1.searches                                                                                                                            AS DECIMAL(18,0) ) AS searches\n    , CAST( AVG(qry1.searches                          ) OVER (PARTITION BY qry1.locale ORDER BY qry1.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS DECIMAL(18,0) ) AS searches_7d_avg\n    , CAST(     qry1.searches  *   1.0 / qry1.searchers                                                                                                  AS DECIMAL(10,2) ) AS searches_per_searcher\n    , CAST( AVG(qry1.searches  *   1.0 / qry1.searchers) OVER (PARTITION BY qry1.locale ORDER BY qry1.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS DECIMAL(10,2) ) AS searches_per_searcher_7d_avg\n    , CAST(     qry1.searchers * 100.0 / qry1.dap                                                                                                        AS DECIMAL(10,2) ) AS searcher_per_dap\n    , CAST( AVG(qry1.searchers * 100.0 / qry1.dap      ) OVER (PARTITION BY qry1.locale ORDER BY qry1.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS DECIMAL(10,2) ) AS searcher_per_dap_7d_avg\n    , CAST(     qry1.searchers * 100.0 / qry1.s19n_dap                                                                                                   AS DECIMAL(10,2) ) AS searcher_per_s19n_dap\n    , CAST( AVG(qry1.searchers * 100.0 / qry1.s19n_dap ) OVER (PARTITION BY qry1.locale ORDER BY qry1.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS DECIMAL(10,2) ) AS searcher_per_s19n_dap_7d_avg\n  \n\n  \n    , CAST(                                 qry1.serp_sessions_with_clicks      * 100.0 / qry1.serp_sessions                                                                                                           AS DECIMAL(10,2) ) AS serp_click_rate\n    , CAST( AVG(                            qry1.serp_sessions_with_clicks      * 100.0 / qry1.serp_sessions         ) OVER (PARTITION BY qry1.locale ORDER BY qry1.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS DECIMAL(10,2) ) AS serp_click_rate_7d_avg\n    , CAST(                                 qry1.serp_sessions_with_good_clicks * 100.0 / qry1.serp_sessions                                                                                                           AS DECIMAL(10,2) ) AS serp_good_click_rate\n    , CAST( AVG(                            qry1.serp_sessions_with_good_clicks * 100.0 / qry1.serp_sessions         ) OVER (PARTITION BY qry1.locale ORDER BY qry1.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS DECIMAL(10,2) ) AS serp_good_click_rate_7d_avg\n    , CAST(                                 qry1.serp_sessions_with_good_clicks * 100.0 / qry1.serp_sessions                                                                                                           AS DECIMAL(10,2) ) AS serp_good_click_rate\n    , CAST( AVG(                            qry1.serp_sessions_with_good_clicks * 100.0 / qry1.serp_sessions         ) OVER (PARTITION BY qry1.locale ORDER BY qry1.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS DECIMAL(10,2) ) AS serp_good_click_rate_7d_avg\n    , CAST(     IF(qry1.wk1_14d_active > 0, qry1.wk2_14d_retained               * 100.0 / qry1.wk1_14d_active, NULL)                                                                                                   AS DECIMAL(10,2) ) AS retention_wow_14d_rate\n    , CAST( AVG(IF(qry1.wk1_14d_active > 0, qry1.wk2_14d_retained               * 100.0 / qry1.wk1_14d_active, NULL) ) OVER (PARTITION BY qry1.locale ORDER BY qry1.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS DECIMAL(10,2) ) AS retention_wow_14d_rate_7d_avg\n  \n\nFROM\n  (\n    SELECT\n      rpc.ds\n\n      \n        , rpc.locale\n      \n\n      , SUM(rpc.searches ) AS searches\n      , SUM(rpc.searchers) AS searchers\n\n      \n        , SUM(rpce.serp_sessions                              ) AS serp_sessions\n        , SUM(rpce.serp_sessions_with_clicks                  ) AS serp_sessions_with_clicks\n        , SUM(rpce.serp_sessions_with_good_clicks             ) AS serp_sessions_with_good_clicks\n        , SUM(ret.wk1_14d_active                              ) AS wk1_14d_active\n        , SUM(ret.wk2_14d_retained                            ) AS wk2_14d_retained\n      \n\n      , SUM(dap.dap     )                   AS dap\n      , SUM(dap.s19n_dap)                   AS s19n_dap\n      , COALESCE(MIN(dap.volume_rank), 999) AS volume_rank\n\n    FROM\n      (\n        SELECT\n          ds\n\n          \n            , locale\n          \n\n          , SUM(sessions)   AS searches\n          , SUM(searchers)  AS searchers\n\n        FROM result_page_cube\n\n        \n          WHERE ds BETWEEN (DATE '2018-03-04' - INTERVAL '40' DAY) AND DATE '2018-03-04'\n        \n          AND is_classifier_post_search = 1\n          AND search_subtype = 'search_simplification'\n          AND aggregate_type IN\n              (\n                CAST(\n                      32 -- country is MECE per user. We have more aggs which have country cut in it\n                  + 2048 -- is_classifier_post_search is bound by default\n                  + 4096 -- search_subtype is bound by default\n                  + IF('locale' <> 'interface' AND 'Overall'   = 'Overall', 0,  1)\n                  + IF(                                  'typed' = 'Overall', 0,  4)\n                  + IF('locale' <> 'locale'    AND 'Overall'      = 'Overall', 0, 64)\n                  AS VARCHAR)\n              )\n          AND IF('locale' = 'interface' OR 'Overall'   = 'Overall', TRUE, 'Overall'   = interface           )\n          AND IF(                                'typed' = 'Overall', TRUE, 'typed' = entry_point_category)\n          AND IF('locale' = 'locale'    OR 'Overall'      = 'Overall', TRUE, 'Overall'      = locale              )\n          AND IF('locale' = 'country'   OR 'Overall'     = 'Overall', TRUE, 'Overall'     = country             )\n\n        GROUP BY 1, 2\n      ) rpc\n\n      \n        LEFT OUTER JOIN\n        (\n          SELECT\n            ds\n\n            \n              , request_locale AS locale\n            \n\n            \n              , SUM(sessions                                                                 ) AS serp_sessions\n              , SUM(sessions_with_clicks                                                     ) AS serp_sessions_with_clicks\n              , SUM(sessions_with_serp_good_clicks                                           ) AS serp_sessions_with_good_clicks\n            \n\n          FROM result_page_cube_extended_v2\n\n          \n            WHERE ds BETWEEN (DATE '2018-03-04' - INTERVAL '40' DAY) AND DATE '2018-03-04'\n          \n            AND is_classifier_post_search = 1\n            AND search_subtype = 'search_simplification'\n            AND NOT COALESCE(interface = 'www' AND vertical = 'scoped', FALSE) -- remove scoped search on www\n            AND IF('locale' = 'interface' OR 'Overall'   = 'Overall', TRUE, 'Overall'   = interface           )\n            AND IF('locale' = 'country'   OR 'Overall'     = 'Overall', TRUE, 'Overall'     = country             )\n            AND IF('locale' = 'locale'    OR 'Overall'      = 'Overall', TRUE, 'Overall'      = request_locale      )\n            AND IF(                                'typed' = 'Overall', TRUE, 'typed' = entry_point_category)\n\n          GROUP BY 1, 2\n        ) rpce\n        ON\n        (\n              rpce.ds = rpc.ds\n          AND rpce.locale = rpc.locale\n        )\n      \n\n      \n        LEFT OUTER JOIN\n        (\n          SELECT\n            ds\n\n            \n              , request_locale AS locale\n            \n\n            , SUM(wk1_14d_active  ) AS wk1_14d_active\n            , SUM(wk2_14d_retained) AS wk2_14d_retained\n\n          FROM search_sessions_retention_wow\n\n          \n            WHERE ds BETWEEN (DATE '2018-03-04' - INTERVAL '40' DAY) AND DATE '2018-03-04'\n          \n            AND search_subtype = 'search_simplification'\n            AND search_target_type = IF(1 = 1, 'post', 'other')\n            AND is_non_person_search = 1\n            AND aggregate_type IN\n                (\n                  CAST(\n                        1 -- user_id is bound by default\n                    +   8 -- country is MECE per user. We have more aggs which have country cut in it\n                    +  32 -- search_subtype is bound by default\n                    +  64 -- search_target_type is bound by default\n                    + 128 -- is_non_person_search is bound by default\n                    + IF('locale' <> 'interface' AND 'Overall'   = 'Overall', 0,  2)\n                    + IF('locale' <> 'locale'    AND 'Overall'      = 'Overall', 0,  4)\n                    + IF(                                  'typed' = 'Overall', 0, 16)\n                    AS VARCHAR)\n                )\n            AND IF('locale' = 'interface' OR 'Overall'   = 'Overall', TRUE, 'Overall'   = interface     )\n            AND IF('locale' = 'locale'    OR 'Overall'      = 'Overall', TRUE, 'Overall'      = request_locale)\n            AND IF('locale' = 'country'   OR 'Overall'     = 'Overall', TRUE, 'Overall'     = country       )\n            AND IF(                                'typed' = 'Overall', TRUE, 'typed' = last_state    )\n\n          GROUP BY 1, 2\n        ) ret\n        ON\n        (\n              ret.ds = rpc.ds\n          AND ret.locale = rpc.locale\n        )\n      \n\n      LEFT OUTER JOIN\n      (\n        SELECT\n          search_dap.ds\n          , search_dap.locale\n          , search_dap.dap\n          , search_dap.s19n_dap\n          , svol.volume_rank\n\n        FROM\n          (\n            SELECT\n              ds\n\n              \n                , app_locale AS locale\n              \n\n              , dap\n              , s19n_dap\n\n            FROM search_rolled_out_dap\n\n            \n              WHERE ds BETWEEN (DATE '2018-03-04' - INTERVAL '40' DAY) AND DATE '2018-03-04'\n            \n              AND aggregate_type IN\n                  (\n                    CAST(\n                        IF('locale' <> 'interface' AND 'Overall' = 'Overall', 0, 1)\n                      + IF('locale' <> 'locale'    AND 'Overall'    = 'Overall', 0, 2)\n                      + IF('locale' <> 'country'   AND 'Overall'   = 'Overall', 0, 4)\n                      AS VARCHAR)\n                  )\n              AND IF('locale' = 'interface' OR 'Overall' = 'Overall', TRUE, 'Overall' = interface )\n              AND IF('locale' = 'locale'    OR 'Overall'    = 'Overall', TRUE, 'Overall'    = app_locale)\n              AND IF('locale' = 'country'   OR 'Overall'   = 'Overall', TRUE, 'Overall'   = country   )\n          ) search_dap\n\n          INNER JOIN\n          (\n            SELECT\n              locale\n              , ROW_NUMBER() OVER (ORDER BY svol_rpc.volume DESC, svol_rpc.locale) AS volume_rank\n\n            FROM\n              (\n                SELECT\n                  \n                      locale\n                  \n\n                  , SUM(sessions) AS volume\n\n                FROM result_page_cube\n\n                WHERE ds BETWEEN (DATE '2018-03-04' - INTERVAL '6' DAY) AND DATE '2018-03-04'\n                  AND is_classifier_post_search = 1\n                  AND search_subtype = 'search_simplification'\n                  AND aggregate_type IN\n                      (\n                        CAST(\n                              32 -- country is MECE per user. We have more aggs which have country cut in it\n                          + 2048 -- is_classifier_post_search is bound by default\n                          + 4096 -- search_subtype is bound by default\n                          + IF('locale' = 'interface',  1, 0)\n                          + IF('locale' = 'locale'   , 64, 0)\n                          AS VARCHAR)\n                      )\n\n                GROUP BY 1\n              ) svol_rpc\n          ) svol\n          ON\n          (\n            svol.locale = search_dap.locale\n          )\n     ) dap\n      ON\n      (\n            dap.ds = rpc.ds\n        AND dap.locale = rpc.locale\n      )\n\n    \n\n    GROUP BY 1, 2\n  ) qry1\n\n\n\nORDER BY 1 DESC, 2, 3\n
ftw2_adhoc2	prism	ad_metrics	20180306_072841_15247_3g9mm	unidash:1348329421962773:argus:477200	SELECT\n  ds,\n  'dim' as dim,\n  COUNT(DISTINCT\n  CASE \n    WHEN partner_identifier = 859073854207350 THEN 'Square Marketing'\n    WHEN partner_identifier = 1664362757123276 THEN 'Affinitiv'\n    WHEN partner_identifier IN (10154426595430711, 1590860407864182) THEN 'Digital Air Strike'\n    WHEN partner_identifier = 10152351843569482 THEN 'Lennar'\n    WHEN partner_identifier IN (905045769605930, 516950958429941) THEN 'Invoca'\n    WHEN partner_identifier = 705664196188477 THEN 'Acxiom'\n    WHEN partner_identifier IN (1816907485187660, 1480829408843427) THEN 'Marketo'\n    WHEN partner_identifier = 1116250028449068 THEN 'Marchex Inc'\n    WHEN partner_identifier = 154270517987707 THEN 'Popimedia ZAR'\n    WHEN partner_identifier = 555695091243249 THEN 'Tiger Pistol'\n    WHEN partner_identifier = 721048487943992 THEN 'Merkle Data Partner'\n    WHEN partner_identifier = 663346247028205 THEN 'Adaptly'\n    WHEN partner_identifier IN (278451862534354, 1134523756607181) THEN 'FlexReceipts Inc.'\n    WHEN partner_identifier = 882519021764421 THEN 'adQuadrant'\n    WHEN partner_identifier IN (1096571153724411, 268191376907829) THEN 'Ecrebo'\n    WHEN partner_identifier IN (353402124853418, 294775143974774) THEN 'ROI Hunter'\n    WHEN partner_identifier = 939660826071336 THEN 'Leadsbridge'\n    WHEN partner_identifier = 235433113488490 THEN 'Segment'\n    WHEN partner_identifier = 350925731910614 THEN 'Salesforce'\n    WHEN partner_identifier = 1417961534929013 THEN 'Zapier'\n    WHEN partner_identifier IN (10151570957322930, 213476522140811, 243863395812506) THEN 'AdParlor'\n    WHEN partner_identifier IN (268465136508399, 961032370577274) THEN 'Bionic'\n    WHEN partner_identifier = 361340110899935 THEN 'Swirl'\n    WHEN partner_identifier IN (717067558311976,219452601758299) THEN 'SocialCode'\n    WHEN partner_identifier = 1648843325379907 THEN 'Index'\n    WHEN partner_identifier = 370304896470298 THEN 'Oracle Data Cloud'\n    WHEN partner_identifier = 1568899369847162 THEN 'Twilio'\n    WHEN partner_identifier IN (638625946236073, 554356074614087) THEN 'StitcherAds'\n    WHEN partner_identifier IN (1008781409191750) THEN 'Nosto'\n    WHEN partner_identifier IN (643908782480970, 189932484870395) THEN 'yReceipt'\n    WHEN partner_identifier IN (664100523675401, 203728502978113) THEN 'adMixt'\n    WHEN partner_identifier IN (1525338554380812) THEN 'Wicked Reports'\n    WHEN partner_identifier IN (783136208405189, 145160672360963, 1404517376432285) THEN 'SocialGear'\n    WHEN partner_identifier IN (809110292582194) THEN 'Shopify'\n    WHEN partner_identifier IN (622689794546189, 690901867754787) THEN 'LinkFire'\n    WHEN partner_identifier IN (245165872660838, 1616860215307523) THEN 'Social Fulcrum'\n    ELSE 'Other'\n  END \n  ) AS partners,\n  \n  AVG(  COUNT(DISTINCT\n  CASE \n    WHEN partner_identifier = 859073854207350 THEN 'Square Marketing'\n    WHEN partner_identifier = 1664362757123276 THEN 'Affinitiv'\n    WHEN partner_identifier IN (10154426595430711, 1590860407864182) THEN 'Digital Air Strike'\n    WHEN partner_identifier = 10152351843569482 THEN 'Lennar'\n    WHEN partner_identifier IN (905045769605930, 516950958429941) THEN 'Invoca'\n    WHEN partner_identifier = 705664196188477 THEN 'Acxiom'\n    WHEN partner_identifier IN (1816907485187660, 1480829408843427) THEN 'Marketo'\n    WHEN partner_identifier = 1116250028449068 THEN 'Marchex Inc'\n    WHEN partner_identifier = 154270517987707 THEN 'Popimedia ZAR'\n    WHEN partner_identifier = 555695091243249 THEN 'Tiger Pistol'\n    WHEN partner_identifier = 721048487943992 THEN 'Merkle Data Partner'\n    WHEN partner_identifier = 663346247028205 THEN 'Adaptly'\n    WHEN partner_identifier IN (278451862534354, 1134523756607181) THEN 'FlexReceipts Inc.'\n    WHEN partner_identifier = 882519021764421 THEN 'adQuadrant'\n    WHEN partner_identifier IN (1096571153724411, 268191376907829) THEN 'Ecrebo'\n    WHEN partner_identifier IN (353402124853418, 294775143974774) THEN 'ROI Hunter'\n    WHEN partner_identifier = 939660826071336 THEN 'Leadsbridge'\n    WHEN partner_identifier = 235433113488490 THEN 'Segment'\n    WHEN partner_identifier = 350925731910614 THEN 'Salesforce'\n    WHEN partner_identifier = 1417961534929013 THEN 'Zapier'\n    WHEN partner_identifier IN (10151570957322930, 213476522140811, 243863395812506) THEN 'AdParlor'\n    WHEN partner_identifier IN (268465136508399, 961032370577274) THEN 'Bionic'\n    WHEN partner_identifier = 361340110899935 THEN 'Swirl'\n    WHEN partner_identifier IN (717067558311976,219452601758299) THEN 'SocialCode'\n    WHEN partner_identifier = 1648843325379907 THEN 'Index'\n    WHEN partner_identifier = 370304896470298 THEN 'Oracle Data Cloud'\n    WHEN partner_identifier = 1568899369847162 THEN 'Twilio'\n    WHEN partner_identifier IN (638625946236073, 554356074614087) THEN 'StitcherAds'\n    WHEN partner_identifier IN (1008781409191750) THEN 'Nosto'\n    WHEN partner_identifier IN (643908782480970, 189932484870395) THEN 'yReceipt'\n    WHEN partner_identifier IN (664100523675401, 203728502978113) THEN 'adMixt'\n    WHEN partner_identifier IN (1525338554380812) THEN 'Wicked Reports'\n    WHEN partner_identifier IN (783136208405189, 145160672360963, 1404517376432285) THEN 'SocialGear'\n    WHEN partner_identifier IN (809110292582194) THEN 'Shopify'\n    WHEN partner_identifier IN (622689794546189, 690901867754787) THEN 'LinkFire'\n    WHEN partner_identifier IN (245165872660838, 1616860215307523) THEN 'Social Fulcrum'\n    ELSE 'Other'\n  END \n  ) ) OVER (ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS partners_7d_avg\nFROM\n  shiliyang_oc_partner_view\nWHERE\n  ds BETWEEN '2017-10-01' AND '2018-03-04'\nGROUP BY\n  1\nHAVING\n  SUM(maa) > 0
ftw2_adhoc2	prism	ad_metrics	20180306_073608_15492_3g9mm	unidash:235957273604077:argus:419968	with base as(\n  SELECT ds, 1.0*count(distinct if(num_blocked_categories > 0, host_video_owner_id, null))/count(distinct host_video_owner_id) as usage\nFROM\n\tinstream_ads_impression_with_category_info\nWHERE\n\tds >= '2018-02-02'\t-- LATEST_DS Partition\ngroup by 1)\n\nselect ds, usage, avg(usage) over (order by ds, ds rows between 6 preceding and current row) as usage_7d from base
de4ftw2	raptor	de	20180306_072928_06389_z5zx8	unidash:1835928376618700:argus:339757	WITH meme_dap_adjustment_pct AS (\n  SELECT\n    dateid,\n    0.15 + LEAST(\n      (0.30-0.15),\n      ((0.30-0.15) /\n        DATE_DIFF('day',CAST('2016-12-31' AS DATE),CAST('2016-07-01' AS DATE))) *\n          DATE_DIFF('day',dateid,CAST('2016-07-01' AS DATE))) AS adjustment_pct\n  FROM\n    dim_date\n  WHERE\n    dateid BETWEEN CAST('2016-07-01' AS DATE) AND CAST('2017-01-31' AS DATE))\t\nSELECT\n  ds,\n  privacy_rollup,\n  (1.0 - COALESCE(adjustment_pct, 0)) * \n  AVG(num_dap) OVER (\n      PARTITION BY privacy_rollup\n      ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS num_users\nFROM\n  events_growth_accounting_cube\nLEFT OUTER JOIN (\n  SELECT * FROM meme_dap_adjustment_pct)\nON\n  dateid = ds\nWHERE\n  ds >= CAST('2015-07-01' AS DATE) AND\n  breakdown = 'fast-privacy_rollup' AND\n  ds >= CAST('2015-07-01' AS DATE) AND\n  ds <= CAST('2019-12-31' AS DATE)
de4ftw2	raptor	de	20180306_072928_06388_z5zx8	unidash:1835928376618700:argus:383711	WITH meme_dap_adjustment_pct AS (\n  SELECT\n    dateid,\n    0.15 + LEAST(\n      (0.30-0.15),\n      ((0.30-0.15) /\n        DATE_DIFF('day',CAST('2016-12-31' AS DATE),CAST('2016-07-01' AS DATE))) *\n          DATE_DIFF('day',dateid,CAST('2016-07-01' AS DATE))) AS adjustment_pct\n  FROM\n    dim_date\n  WHERE\n    dateid BETWEEN CAST('2016-07-01' AS DATE) AND CAST('2017-01-31' AS DATE))\n\nSELECT\n    ds,\n    num_dap,\n    num_dap_7d_avg,\n    goal_value\nFROM (\n    SELECT\n        COALESCE(e.ds,g.dateid) AS ds,\n        e.num_dap,\n        e.num_dap_7d_avg,\n        g.goal_value\n    FROM (\n        SELECT\n            ds,\n            num_dap,\n--            num_dap_7d_avg\n\n            (1.0 - COALESCE(adjustment_pct, 0)) * num_dap_7d_avg\n                AS num_dap_7d_avg\n\n        FROM (\n            SELECT\n                ds,\n                num_dap,\n                num_dap_7d_avg\n            FROM (\n                SELECT\n                    ds,\n                    num_dap,\n                    AVG(num_dap) OVER (ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS num_dap_7d_avg\n                FROM\n                    events_growth_accounting_cube\n                WHERE\n                    breakdown = 'fast-ALL' AND\n                    ds >= CAST('2015-12-25' AS DATE))\n            WHERE\n                ds >= CAST('2016-01-01' AS DATE)\n            UNION ALL\n            SELECT\n                DATE_ADD('year', -2, ds) AS ds,\n                NULL AS num_dap,\n                overall_dap_2014 AS num_dap_7d_avg\n            FROM\n                events_2016_goals\n            WHERE\n                ds <> CAST('2016-02-29' AS DATE)\n            UNION ALL\n            SELECT\n                DATE_ADD('year', -1, ds) AS ds,\n                NULL AS num_dap,\n                overall_dap_2015 AS num_dap_7d_avg\n            FROM\n                events_2016_goals\n            WHERE\n                ds <> CAST('2016-02-29' AS DATE))\n\n        LEFT OUTER JOIN (\n            SELECT * FROM meme_dap_adjustment_pct)\n        ON\n            dateid = ds\n\n        WHERE\n            ds BETWEEN CAST('2015-07-01' AS DATE) AND CAST('2019-12-31' AS DATE) AND\n            EXTRACT(month FROM ds) BETWEEN 1 AND 12) e\n    FULL OUTER JOIN (\n        SELECT\n            CAST(dateid AS DATE) AS dateid,\n            goal_value\n        FROM\n            events_goals_all\n        WHERE\n            ds = (SELECT MAX(ds) FROM events_goals_all) AND\n            dateid BETWEEN '2015-07-01' AND '2019-12-31' AND\n            EXTRACT(year FROM CAST(dateid AS DATE)) = EXTRACT(year FROM CAST('2018-03-04' AS DATE)) AND\n            EXTRACT(month FROM CAST(dateid AS DATE)) BETWEEN 1 AND 12 AND\n            goal_type = 'dap') g\n    ON\n        e.ds = g.dateid)\nWHERE\n  CASE 'N'\n    WHEN 'Y'\n    THEN\n        ds BETWEEN\n        CAST(CONCAT('2018', IF(3 < 7, '-01-01', '-07-01')) AS DATE) AND\n        CAST(CONCAT('2018', IF(3 < 7, '-06-30', '-12-31')) AS DATE)\n    WHEN 'N' THEN num_dap_7d_avg IS NOT NULL\n  END
ftw2_adhoc3	prism	ad_metrics	20180306_070215_14670_58zw2	unidash:1857098507844978:argus:450931	WITH base AS (\n    SELECT\n        IF(sample_type='page_jobs_vil_sampling', 'Global', metadata['region']) as region,\n        CASE\n            WHEN violation = 'Joke Posts' THEN 'Low Risk'\n            ELSE 'High/Medium Risk'\n        END AS risk_type,\n        violation,\n        SUM(CAST(metadata['views'] AS bigint)) AS views\n    FROM (\n            SELECT\n                fbid,\n                final_tag,\n                sample_type,\n                metadata,\n                CASE\n                    WHEN regexp_like(final_tag, 'adultcontent') THEN 'Adult Content'\n                    WHEN regexp_like(final_tag, 'animalsale') THEN 'Animal Sale'\n                    WHEN regexp_like(final_tag, 'discrimination') THEN 'Discrimination'\n                    WHEN regexp_like(final_tag, 'scamlowrisk') THEN 'Scam, Fraud and Misleading'\n                    WHEN regexp_like(final_tag, 'illegal') THEN 'Illegal'\n                    WHEN regexp_like(final_tag, 'sexual') THEN 'Sexual'\n                    WHEN regexp_like(final_tag, 'personalinfo') THEN 'Personal Info'\n                    WHEN regexp_like(final_tag, 'jokepost') THEN 'Joke Posts'\n                END AS violation\n            FROM\n                ads_integrity_crow_samples_results\n            WHERE\n                ds >= '2018-02-26'\n                AND sample_type IN ('page_jobs_vil_sampling', 'jobs_regional_pvil_sample')\n                AND final_tag IS NOT NULL\n                AND final_tag NOT LIKE '%COMP_FLAG_SUITABLE_FOR_ALL%'\n        )\n    GROUP BY 1, 2, 3\n)\nSELECT\n    violation,\n    region as country,\n    risk_type,\n    SUM(pct) AS pct\nFROM (\n        (\n            SELECT\n                risk_type,\n                region,\n                violation,\n                1.0 * views / SUM(views) OVER (PARTITION BY risk_type, region) AS pct\n            FROM\n                base\n        )\n        UNION\n            (\n                SELECT\n                    'All Risk' AS risk_type,\n                    region,\n                    violation,\n                    1.0 * views / SUM(views) OVER (PARTITION BY region) AS pct\n                FROM\n                    base\n            )\n    )\nGROUP BY 1, 2, 3\nORDER BY SUM(pct) DESC
ftw2	prism	mobile	20180306_074616_15140_589r5	unidash:855135601298403:argus:313361	with interface_map AS (\nSELECT \n  interface\n  , interface_rollup\nFROM \n  dim_interface_map \nWHERE ds = '2018-03-05' AND source = 'default'\n\nUNION DISTINCT\n\nSELECT \n  interface\n  , interface as interface_rollup\nFROM \n  dim_interface_map \nWHERE ds = '2018-03-05' AND source = 'default'\n\n)\n\n,call_ratings AS (\nSELECT\n  CASE WHEN \n\t\tds BETWEEN  '2018-02-19' AND '2018-02-25' THEN 'previous_wk'\n\t\tELSE 'current_wk' END as epoch\n\t,COALESCE(is_video_call*2+1, 0) as is_video_call\n  ,COALESCE(app_name, 'unknown') as app_name\n  ,CASE WHEN max_concurrent_participants = '10+' THEN \n\t\t'_10_or_More' ELSE '_0' || max_concurrent_participants END as conference_size\n  ,sum(sum_of_call_ratings) sum_of_call_ratings\n  ,sum(num_rated_calls) as num_rated_calls\n  ,sum(num_five_star_ratings) as num_five_star_ratings \n  ,sum(num_one_star_ratings) as num_one_star_ratings   \nFROM\n  multiway_call_ratings_aggregated\n  WHERE ds BETWEEN '2018-02-19'\n  \t\t\t\t AND '2018-03-04'\n  AND max_concurrent_participants > '1'\n  AND has_joined = 1\nGROUP BY 1,2,3,4\n)\n\n,call_ratings_cube AS (\nSELECT\n  epoch\n  ,COALESCE(CAST(is_video_call AS VARCHAR), 'overall') as is_video_call\n  ,COALESCE(app_name, 'overall') as app_name\n  ,conference_size\n  ,sum(sum_of_call_ratings) sum_of_call_ratings\n  ,sum(num_rated_calls) as num_rated_calls\n  ,sum(num_five_star_ratings) as num_five_star_ratings \n  ,sum(num_one_star_ratings) as num_one_star_ratings  \nFROM\n  call_ratings\nGROUP BY epoch, conference_size, CUBE(is_video_call), CUBE(app_name)\n)\n\n\n, source AS (\n  SELECT\n\nepoch\n,is_video_call\n,COALESCE(interface_rollup, app_name) as interface\n,conference_size\n,round(1.0*sum(sum_of_call_ratings)/sum(num_rated_calls), 2) as avg_call_rating\n,round(1.0*sum(num_five_star_ratings)/sum(num_rated_calls), 4) as _5_star_rating_rate\n,round(1.0*sum(num_one_star_ratings)/sum(num_rated_calls), 4) as _1_star_rating_rate\n\nFROM\n\ncall_ratings_cube\n\nLEFT JOIN\n\ninterface_map\n\nON call_ratings_cube.app_name = interface_map.interface\n\ngroup by 1,2,3,4 order by 1,2,3,4\n)\n\nSELECT\n\nconference_size\n,MAX(case when epoch = 'current_wk' THEN avg_call_rating ELSE 0 END)\nas current_avg_call_rating\n,MAX(case when epoch = 'previous_wk' THEN avg_call_rating ELSE 0 END) as prev_wk_avg_call_rating\n\nfrom\n\nsource\n\nWHERE\n\ninterface = 'overall'\nAND is_video_call = 'overall'\nGROUP by 1
de4ftw2	raptor	de	20180306_073942_06498_z5zx8	unidash:390427884703309:argus:481807	with cte as (    -- to ensure the latest date for search and post search charts/grids are same take min of the max dates\nselect min(max_ds) as max_ds from\n    (\n    select max(ds) as max_ds from result_page_cube where ds > DATE '2018-02-22'\n    UNION ALL\n    select max(ds) as max_ds from daily_search_stats_cube where ds > DATE '2018-02-22'\n    ) x\n)\nSELECT\n       --get post search metrics for all the grids and post search charts only \n    a.ds,\n    a.interface\n    ,AVG(a.searches) OVER (PARTITION BY a.interface\n    ORDER BY a.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as vol,\n    AVG(b.day1active) OVER (PARTITION BY a.interface\n    ORDER BY a.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as day1active,    \n    AVG(IF(e.day1active > 0,a.searchers * 1.0 / e.day1active)) OVER (PARTITION BY a.interface\n    ORDER BY a.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as participation_rate, \n    AVG(IF(e.day1active>0,a.searches * 1.0 / e.day1active)) OVER (PARTITION BY a.interface\n    ORDER BY a.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as "s/dap",\n    AVG(IF(a.searchers > 0,a.searches * 1.0 / a.searchers)) OVER (PARTITION BY a.interface\n    ORDER BY a.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as sps,\n    AVG(IF(k.wow_active > 0, k.wow_retained * 1.0 / k.wow_active)) OVER (PARTITION BY a.interface\n    ORDER BY a.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as wow_retained\n    \n    \n    \n    \n    \n    \n    \n\nFROM\n\n\n    (\n        \n     SELECT ds,\n            interface,\n            max(searches) as searches,\n            max(searchers) as searchers\n            -- max(scr_from_rp) as scr_from_rp\n    FROM        \n     ( \n      SELECT\n            ds,\n             \n            COALESCE(interface, 'overall') AS interface,    \n            \n            aggregate_type,\n            CAST(SUM(sessions) AS DECIMAL (18, 0)) AS searches,\n            CAST(SUM(searchers) AS DECIMAL (18, 0)) AS searchers\n       --   CAST(SUM(sessions_with_clicks) * 1.0/SUM(sessions) as DECIMAL(18,4)) AS scr_from_rp\n        FROM\n            result_page_cube\n        WHERE\n            ds > date '2017-02-17'\n             AND aggregate_type IN (\n             CAST(\n               2048 -- is_classifier_post_search is bound by default\n             + IF('overall'='overall', 0, 1)\n             + IF('overall'='overall', 0, 4)\n             + IF('overall'='overall', 0, 32)\n             + IF('overall'='overall', 0, 64)\n             + IF('overall'='overall', 0, 4096)  \n             AS VARCHAR),\n            CAST(\n               2048 -- is_classifier_post_search is bound by default\n             + 32 -- country is MECE per user. We have more aggs which have country cut in it\n             + IF('overall'='overall', 0, 1)\n             + IF('overall'='overall', 0, 4)\n             + IF('overall'='overall', 0, 64)\n             + IF('overall'='overall', 0, 4096)  \n             AS VARCHAR),\n             CAST(\n               2048 -- is_classifier_post_search is bound by default\n             + IF('overall'='overall' and 'interface'!='interface', 0, 1)\n             + IF('overall'='overall' and 'interface'!='entry_point_category', 0, 4)\n             + IF('overall'='overall' and 'interface'!='country', 0, 32)\n             + IF('overall'='overall' and 'interface'!='locale', 0, 64)\n             + IF('overall'='overall' and 'interface'!='search_type', 0, 4096)  \n             AS VARCHAR),             \n             CAST(\n               2048 -- is_classifier_post_search is bound by default\n             + 32\n             + IF('overall'='overall' and 'interface'!='interface', 0, 1)\n             + IF('overall'='overall' and 'interface'!='entry_point_category', 0, 4)\n             + IF('overall'='overall' and 'interface'!='locale', 0, 64)\n             + IF('overall'='overall' and 'interface'!='search_type', 0, 4096)  \n             AS VARCHAR))  \n            AND is_classifier_post_search = 1\n            \n      \n            \n      \n      \n            \n      \n            \n            \n            \n      \n            \n      \n              \n       \n\t\t\t\t\t\t  \n      \n \n        GROUP BY \n            1,2,3\n    \n      ) x\n    GROUP BY\n          1,2\n    )a\n    \n    \n    LEFT OUTER JOIN (\n     SELECT ds,\n            interface, \n            max(day1active) as day1active,\n            max(day7active) as day7active,\n            max(day28active) as day28active\n     FROM \n      (\n      SELECT\n            ds,\n            \n            COALESCE(interface, 'overall') AS interface,    \n             \n            aggregate_type,\n            CAST(SUM(l1active) AS DECIMAL (18, 0)) AS day1active,\n            CAST(SUM(l7active) AS DECIMAL (18, 0)) AS day7active,\n            CAST(SUM(l28active) AS DECIMAL (18, 0)) AS day28active\n \n        FROM\n            result_page_intent_ga_agg\n        WHERE\n            ds > date '2017-01-16' -- data starting Jan 17 only\n            AND aggregate_type IN (\n             CAST( \n               1\n             + IF('overall'='overall', 0, 0)\n             + IF('overall'='overall', 0, 4)\n             + IF('overall'='overall', 0, 8)\n             + IF('overall'='overall', 0, 16)  \n             + IF('overall'='overall', 0, 32)\n             AS VARCHAR),\n             CAST(\n               1\n             + IF('overall'='overall', 0, 0)\n             + IF('overall'='overall' and 'interface'!='interface', 0, 4)\n             + IF('overall'='overall' and 'interface'!='locale', 0, 8)\n             + IF('overall'='overall' and 'interface'!='search_type', 0, 16)  \n             + IF('overall'='overall' and 'interface'!='entry_point_category', 0, 32) \n             AS VARCHAR))\n            \n            \n      \n            \n      \n      \n            \n      \n            \n            \n            \n      \n            \n      \n              \n    \n        GROUP BY\n            1,2,3\n   \n        ) y\n      \n      GROUP BY \n          1,2\n      ) b\n    ON a.ds = b.ds\n    AND a.interface = b.interface \n    \n    LEFT OUTER JOIN (\n      \n    SELECT \n          ds,\n          interface,\n          max(day1active) as day1active\n    FROM      \n      \n     ( \n     SELECT\n            ds,\n            \n            COALESCE(interface, 'overall') AS interface,   \n            \n            aggregate_type,\n            \n            CAST(SUM(dap) AS DECIMAL (18, 0)) AS day1active\n             \n      \n        FROM\n            search_rolled_out_dap\n        WHERE\n            ds > date '2017-02-17'\n      \n            AND aggregate_type IN (\n             CAST( \n               \n               IF('overall'='overall', 0, 4)\n             + IF('overall'='overall', 0, 1)\n             + IF('overall'='overall', 0, 2)\n             AS VARCHAR),\n             CAST(\n               4\n             + IF('overall'='overall' and 'interface'!='interface', 0, 1)\n             + IF('overall'='overall' and 'interface'!='locale', 0,2 )\n             AS VARCHAR))\n      \n            \n            \n            \n            \n            \n      \n            \n\n      \n              \n       \n             \n    \n        GROUP BY\n            1,2,3\n\n      ) z\n     \n     GROUP BY 1,2\n    ) e\n      \n      \n    ON a.ds = e.ds\n    AND a.interface =  e.interface\n  \n    \n    LEFT OUTER JOIN (\n      \n    SELECT \n          ds,\n          interface,\n          max(wow_retained) as wow_retained,\n          max(wow_active) as wow_active\n      \n    FROM      \n      \n     ( \n     SELECT\n            ds,\n            \n            COALESCE(interface, 'overall') AS interface,   \n            \n            aggregate_type,\n            CAST(SUM(wk2_14d_retained) AS DECIMAL (18, 0)) AS wow_retained,\n            CAST(SUM(wk1_14d_active) AS DECIMAL (18, 0)) AS wow_active\n      \n        FROM\n            result_page_intent_retention_wow\n        WHERE\n            ds > date '2017-01-23' -- data available starting Jan 24th\n      \n             AND aggregate_type IN (\n             CAST(\n               1 -- userID\n             + IF('overall'='overall', 0, 0)\n             + IF('overall'='overall', 0, 4)\n             + IF('overall'='overall', 0, 8)\n             + IF('overall'='overall', 0, 16)  \n             + IF('overall'='overall', 0, 32)\n             AS VARCHAR),\n             CAST(\n               1 -- userID\n             + IF('overall'='overall' and 'interface'!='country', 0, 0)\n             + IF('overall'='overall' and 'interface'!='interface', 0, 4)\n             + IF('overall'='overall' and 'interface'!='locale', 0, 8)\n             + IF('overall'='overall' and 'interface'!='search_type', 0, 16)  \n             + IF('overall'='overall' and 'interface'!='entry_point_category', 0, 32)\n             AS VARCHAR)\n             )\n       \n            \n            \n            \n            \n            \n      \n            \n\n      \n              \n       \n             \n            \n             \n     \n             GROUP BY\n              1,2,3\n\n      ) z\n     \n     GROUP BY 1,2\n    ) k\n      \n      \n    ON a.ds = k.ds\n    AND a.interface =  k.interface\n    \n   \n   \n\n\n \n\n\n\n     \n\nwhere \n\t\t\n     \n        a.interface is not NULL \n        AND a.ds <=  (select max_ds from cte)\n        AND a.ds > date '2017-03-04'\n     \n    \n    \nORDER BY 1,3 DESC
ftw2_adhoc2	prism	ad_metrics	20180306_072036_14927_3g9mm	unidash:0:argus:509552	SELECT\n    ds,\n\tCOUNT_IF(l28_status IN (1, 2, 3)) AS monthly_total_active,\n\tCOUNT_IF(l28_status = 3) AS monthly_new,\n\tCOUNT_IF(l28_status = 2) AS monthly_resurrected,\n\tCOUNT_IF(l28_status = 1) AS monthly_still_active,\n\tCOUNT_IF(l28_status = 4) AS monthly_churned,\n  COUNT_IF(l28_status = 5) AS monthly_still_stale,\n\tCOUNT_IF(l28_status = 1) + COUNT_IF(l28_status = 4) AS last_month_active\n FROM fct_app_ad_acct a\n WHERE  ds >= '2017-12-01'\n AND (advertiser_vertical = 'ALL' OR 'ALL' = 'ALL') \n AND (advertiser_region = 'ALL' OR 'ALL' = 'ALL') \n AND (advertiser_country = 'ALL' OR 'ALL' = 'ALL') \n GROUP BY ds\n order by ds desc
de4ftw2	raptor	de	20180306_073945_06512_z5zx8	unidash:818327124988077:argus:430773	--------------------------------------------------------------------------------\n--  aggregate_type for result_page_cube:\n--  interface                       =    1\n--  vertical                        =    2\n--  entry_point_category            =    4\n--  result_page_type                =    8\n--  is_post_search                  =   16\n--  country                         =   32\n--  locale                          =   64\n--  entry_point_category_group      =  128\n--  has_user_intent                 =  256\n--  typeahead_selected_module       =  512\n--  typeahead_selected_keyword_type = 1024\n--  is_classifier_post_search       = 2048\n--  search_subtype                  = 4096\n--\n--  aggregate_type for search_sessions_retention_wow:\n--  user_id              =   1\n--  interface            =   2\n--  request_locale       =   4\n--  country              =   8\n--  last_state           =  16\n--  search_subtype       =  32\n--  search_target_type   =  64\n--  is_non_person_search = 128\n--\n--  aggregate_type for search_rolled_out_dap:\n--  interface  = 1\n--  app_locale = 2\n--  country    = 4\n--------------------------------------------------------------------------------\n\nSELECT\n  qry1.ds\n  , qry1.volume_rank\n  , qry1.main\n\n  \n    , CAST(     qry1.searches                                                                                                                            AS DECIMAL(18,0) ) AS searches\n    , CAST( AVG(qry1.searches                          ) OVER (PARTITION BY qry1.main ORDER BY qry1.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS DECIMAL(18,0) ) AS searches_7d_avg\n    , CAST(     qry1.searches  *   1.0 / qry1.searchers                                                                                                  AS DECIMAL(10,2) ) AS searches_per_searcher\n    , CAST( AVG(qry1.searches  *   1.0 / qry1.searchers) OVER (PARTITION BY qry1.main ORDER BY qry1.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS DECIMAL(10,2) ) AS searches_per_searcher_7d_avg\n    , CAST(     qry1.searchers * 100.0 / qry1.dap                                                                                                        AS DECIMAL(10,2) ) AS searcher_per_dap\n    , CAST( AVG(qry1.searchers * 100.0 / qry1.dap      ) OVER (PARTITION BY qry1.main ORDER BY qry1.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS DECIMAL(10,2) ) AS searcher_per_dap_7d_avg\n    , CAST(     qry1.searchers * 100.0 / qry1.s19n_dap                                                                                                   AS DECIMAL(10,2) ) AS searcher_per_s19n_dap\n    , CAST( AVG(qry1.searchers * 100.0 / qry1.s19n_dap ) OVER (PARTITION BY qry1.main ORDER BY qry1.ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS DECIMAL(10,2) ) AS searcher_per_s19n_dap_7d_avg\n  \n\n  \n\nFROM\n  (\n    SELECT\n      rpc.ds\n\n      \n        , rpc.main\n      \n\n      , SUM(rpc.searches ) AS searches\n      , SUM(rpc.searchers) AS searchers\n\n      \n\n      , SUM(dap.dap     )                   AS dap\n      , SUM(dap.s19n_dap)                   AS s19n_dap\n      , COALESCE(MIN(dap.volume_rank), 999) AS volume_rank\n\n    FROM\n      (\n        SELECT\n          ds\n\n          \n            , '(NULL)' AS main\n          \n\n          , SUM(sessions)   AS searches\n          , SUM(searchers)  AS searchers\n\n        FROM result_page_cube\n\n        \n          WHERE ds BETWEEN DATE '2017-01-01' AND DATE '2018-03-04'\n        \n          AND is_classifier_post_search = 1\n          AND search_subtype = 'search_simplification'\n          AND aggregate_type IN\n              (\n                CAST(\n                      32 -- country is MECE per user. We have more aggs which have country cut in it\n                  + 2048 -- is_classifier_post_search is bound by default\n                  + 4096 -- search_subtype is bound by default\n                  + IF('main' <> 'interface' AND 'Overall'   = 'Overall', 0,  1)\n                  + IF(                                  'Overall' = 'Overall', 0,  4)\n                  + IF('main' <> 'locale'    AND 'Overall'      = 'Overall', 0, 64)\n                  AS VARCHAR)\n              )\n          AND IF('main' = 'interface' OR 'Overall'   = 'Overall', TRUE, 'Overall'   = interface           )\n          AND IF(                                'Overall' = 'Overall', TRUE, 'Overall' = entry_point_category)\n          AND IF('main' = 'locale'    OR 'Overall'      = 'Overall', TRUE, 'Overall'      = locale              )\n          AND IF('main' = 'country'   OR 'Overall'     = 'Overall', TRUE, 'Overall'     = country             )\n\n        GROUP BY 1, 2\n      ) rpc\n\n      \n\n      \n\n      LEFT OUTER JOIN\n      (\n        SELECT\n          search_dap.ds\n          , search_dap.main\n          , search_dap.dap\n          , search_dap.s19n_dap\n          , svol.volume_rank\n\n        FROM\n          (\n            SELECT\n              ds\n\n              \n                , '(NULL)' AS main\n              \n\n              , dap\n              , s19n_dap\n\n            FROM search_rolled_out_dap\n\n            \n              WHERE ds BETWEEN DATE '2017-01-01' AND DATE '2018-03-04'\n            \n              AND aggregate_type IN\n                  (\n                    CAST(\n                        IF('main' <> 'interface' AND 'Overall' = 'Overall', 0, 1)\n                      + IF('main' <> 'locale'    AND 'Overall'    = 'Overall', 0, 2)\n                      + IF('main' <> 'country'   AND 'Overall'   = 'Overall', 0, 4)\n                      AS VARCHAR)\n                  )\n              AND IF('main' = 'interface' OR 'Overall' = 'Overall', TRUE, 'Overall' = interface )\n              AND IF('main' = 'locale'    OR 'Overall'    = 'Overall', TRUE, 'Overall'    = app_locale)\n              AND IF('main' = 'country'   OR 'Overall'   = 'Overall', TRUE, 'Overall'   = country   )\n          ) search_dap\n\n          INNER JOIN\n          (\n            SELECT\n              main\n              , ROW_NUMBER() OVER (ORDER BY svol_rpc.volume DESC, svol_rpc.main) AS volume_rank\n\n            FROM\n              (\n                SELECT\n                  \n                      '(NULL)' AS main\n                  \n\n                  , SUM(sessions) AS volume\n\n                FROM result_page_cube\n\n                WHERE ds BETWEEN (DATE '2018-03-04' - INTERVAL '6' DAY) AND DATE '2018-03-04'\n                  AND is_classifier_post_search = 1\n                  AND search_subtype = 'search_simplification'\n                  AND aggregate_type IN\n                      (\n                        CAST(\n                              32 -- country is MECE per user. We have more aggs which have country cut in it\n                          + 2048 -- is_classifier_post_search is bound by default\n                          + 4096 -- search_subtype is bound by default\n                          + IF('main' = 'interface',  1, 0)\n                          + IF('main' = 'locale'   , 64, 0)\n                          AS VARCHAR)\n                      )\n\n                GROUP BY 1\n              ) svol_rpc\n          ) svol\n          ON\n          (\n            svol.main = search_dap.main\n          )\n     ) dap\n      ON\n      (\n            dap.ds = rpc.ds\n        AND dap.main = rpc.main\n      )\n\n    \n\n    GROUP BY 1, 2\n  ) qry1\n\n\n\nORDER BY 1 DESC, 2, 3\n
ftw2_adhoc2	prism	ad_metrics	20180306_070201_14211_3g9mm	unidash:1618149581602130:argus:500937	SELECT\n     country,\n    country_name\nFROM (\n        SELECT\n            'Global' AS country,\n            'Global' AS country_name,\n            1000000000000000 AS cnt\n        UNION\n        (\n            SELECT\n                COALESCE(c.country, ip_country) AS country,\n                IF(region IS NOT NULL, COALESCE(country_name, c.country)||' (PVIL)', country_name) AS country_name,\n                COUNT() AS cnt\n            FROM\n                jobs_actions_data:platform a\n            LEFT JOIN (\n                SELECT\n                    country_code,\n                    country_name\n                FROM\n                    d_country_region_map_subs:finance\n            ) b\n            ON a.ip_country = b.country_code\n          \tFULL JOIN (\n              SELECT DISTINCT\n              \tmetadata['region'] AS region,\n              \tmetadata['country'] AS country\n              FROM\n                ads_integrity_crow_samples_results\n              WHERE\n                  ds = '2018-03-03'\n                  AND sample_type = 'jobs_regional_pvil_sample'\n            ) c\n          \tON b.country_code = c.country\n            WHERE\n                name IN ('jobs_tab_impression', 'job_browser_impression')\n                AND ds = '2018-03-03'\n                AND (\n                    NOT is_test_user\n                    OR is_test_user IS NULL\n                )\n                AND (\n                    NOT is_test_page\n                    OR is_test_page IS NULL\n                )\n                AND (\n                    NOT is_employee\n                    OR is_employee IS NULL\n                )\n                AND ip_country IS NOT NULL\n            GROUP BY\n                1,\n                2\n            HAVING\n                COUNT() > 500\n        )\n    ) \nORDER BY\n    CNT DESC
ftw2	prism	ad_metrics	20180306_070559_14259_589r5	argus:argus:510055	WITH base AS (\nSELECT\n    ds,\n    classifier,\n    IF(sample_type='page_jobs_vil_sampling', 'Global', metadata['region']) as region,\n    1.0 * IF(final_tag IS NOT NULL, CAST(metadata['views'] AS bigint), NULL) / SUM(IF(final_tag IS NOT NULL, CAST(metadata['views'] AS bigint), NULL)) OVER (PARTITION BY ds, IF(sample_type='page_jobs_vil_sampling', 'Global', metadata['region'])) AS pvil,\n    1.0 * COUNT_IF(final_tag IS NOT NULL) OVER (PARTITION BY ds, IF(sample_type='page_jobs_vil_sampling', 'Global', metadata['region']))/ COUNT() OVER (PARTITION by ds, IF(sample_type='page_jobs_vil_sampling', 'Global', metadata['region'])) AS complete\nFROM (\n        SELECT\n            ds,\n            fbid,\n            final_tag,\n            sample_type,\n            metadata,\n            CASE\n                WHEN final_tag LIKE '%COMP_FLAG_SUITABLE_FOR_ALL%' THEN 'SFA'\n                WHEN final_tag LIKE '%rep_discrimination%' THEN 'Discrimination'\n                WHEN final_tag LIKE '%rep_scamlowrisk%' THEN 'Scam'\n                ELSE 'Other'\n            END AS classifier\n            FROM\n                ads_integrity_crow_samples_results\n            WHERE\n                ds >= '2018-02-02'\n                AND sample_type IN ('page_jobs_vil_sampling', 'jobs_regional_pvil_sample')\n    )\n)\n\nSELECT \n    ds,\n    region as country,\n    pvil,\n    AVG(pvil) OVER (PARTITION BY classifier, region ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS pvil_7d\nFROM (\n    (SELECT \n        ds,\n        region,\n        classifier,\n        SUM(pvil) AS PVIL\n    FROM base\n    WHERE complete >= 0.90\n        AND classifier = 'Discrimination'\n    GROUP BY 1, 2, 3)\n)
de4ftw2	raptor	de	20180306_070748_05871_z5zx8	metrik_service:argus:389461	SELECT\n  cast(report_ds as date) as ds,\n  forecast_dap,\n  forecast_wap,\n  forecast_map,\n  fci_forecast_dap,\n  fci_forecast_wap,\n  fci_forecast_map,\n  us_teens_dap_forecast,\n  forecast_ts_per_dap * 1.0032 AS forecast_ts_per_dap,\n  AVG(feed_media_per_dap_forecast) OVER (ORDER BY report_ds ASC ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS feed_media_per_dap_forecast,\n  AVG(stories_media_per_dap_forecast) OVER (ORDER BY report_ds ASC ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS stories_media_per_dap_forecast,\n  AVG(broadcast_media_per_dap_forecast) OVER (ORDER BY report_ds ASC ROWS BETWEEN 6 PRECEDING and CURRENT ROW) AS broadcast_media_per_dap_forecast,\n  private_media_per_dap_forecast AS private_media_sends_per_dap_forecast,\n  live_broadcasts_1d_forecast,\n  H1_goal_total_rev ,\n  forecast_monthly_active_businesses ,\n  forecast_monthly_active_advertisers,\n  CPM_forecast,\n  revenue_1day_forecast\nFROM ig_company_dash_metrics\nWHERE ds IN (SELECT MAX(ds) FROM ig_company_dash_metrics)\nAND cast(report_ds as date) >= cast('2018-01-01' as date)\nAND cast(report_ds as date) < cast('2018-12-31' as date)
de4ftw2	raptor	de	20180306_072928_06392_z5zx8	unidash:1835928376618700:argus:389629	WITH meme_dap_adjustment_pct AS (\n  SELECT\n    dateid,\n    region AS adjustment_region,\n    pct_start + LEAST(\n      (pct_end-pct_start),\n      ((pct_end-pct_start) /\n        DATE_DIFF('day',CAST('2016-12-31' AS DATE),CAST('2016-07-01' AS DATE))) *\n          DATE_DIFF('day',dateid,CAST('2016-07-01' AS DATE))) AS adjustment_pct\n  FROM (\n    SELECT\n      dateid,\n      region,\n      CASE region\n        WHEN 'Africa' THEN 0.25\n        WHEN 'East Asia'  THEN 0.25\n        WHEN 'Europe and North Asia'  THEN 0.02\n        WHEN 'Latin America'  THEN 0.20\n        WHEN 'South and Southeast Asia' THEN 0.36\n        WHEN 'US Canada and Oceana' THEN 0.01\n      END AS pct_start,\n      CASE region\n        WHEN 'Africa' THEN 0.51\n        WHEN 'East Asia'  THEN 0.51\n        WHEN 'Europe and North Asia'  THEN 0.04\n        WHEN 'Latin America'  THEN 0.40\n        WHEN 'South and Southeast Asia' THEN 0.73\n        WHEN 'US Canada and Oceana' THEN 0.03\n      END AS pct_end\n    FROM\n      dim_date\n    CROSS JOIN UNNEST(ARRAY['Africa', 'East Asia', 'Europe and North Asia', 'Latin America', 'South and Southeast Asia', 'US Canada and Oceana'])\n      AS t (region)\n    WHERE\n      dateid BETWEEN CAST('2016-07-01' AS DATE) AND CAST('2017-01-31' AS DATE)))\nSELECT\n  ds,\n  region,\n  num_users,\n  -- num_users_7d_avg,\n  (1.0 - COALESCE(adjustment_pct, 0)) * num_users_7d_avg AS num_users_7d_avg,\n  fb_num_users,\n  num_users*1.0/fb_num_users AS penetration\nFROM (\n  SELECT\n    ds,\n    region,\n    num_dap AS num_users,\n    AVG(num_dap) OVER (\n        PARTITION BY region\n        ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS num_users_7d_avg,\n    AVG(fb_dap) OVER (\n        PARTITION BY region\n        ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS fb_num_users\n  FROM\n    events_growth_accounting_cube\n  WHERE\n    ds >= CAST('2017-02-17' AS DATE) AND\n    breakdown = 'region' AND\n    region != 'unknown')\nLEFT OUTER JOIN (\n  SELECT * FROM meme_dap_adjustment_pct) ma\nON\n  ma.dateid = ds AND\n  ma.adjustment_region = region
de4ftw2	raptor	de	20180306_072014_06158_z5zx8	unidash:1885556281723778:argus:491626	WITH tmp AS (\n    SELECT\n        ds,\n  \t\t\tYEAR(ds) AS year,\n\t\t  \n        b.country_code AS geo_dim,\n\t\t\t\n\t\t      \n  \t\t\tNULL AS sci_dim,\n  \t\t\n  \t\t\tSUM(ig_MAP) MAP\n    FROM ig_users_growthacc_agg a\n  \tLEFT JOIN dim_country_geographic_region b\n  \tON a.country=b.country_code\n    WHERE \n  \t\ta.ds>=DATE('2014-01-01')\n  \t\tAND a.agg_level='country'\n      AND b.country_code IN ('US') \n      \n\t  GROUP BY 1, 2, 3, 4\n)\nSELECT\n    curr.ds,\n    curr.year,\n    curr.sci_dim,\n    curr.geo_dim,\n    AVG(curr.MAP) AS MAP\nFROM tmp curr\nJOIN tmp prev\nON\n    curr.geo_dim=prev.geo_dim\n    AND COALESCE(curr.sci_dim, 'dummy')=COALESCE(prev.sci_dim, 'dummy') \n    AND DATE_DIFF('day', prev.ds, curr.ds)=365\n    AND CAST(YEAR(curr.ds) AS VARCHAR) IN ('2018','2017','2016','2015')    \nGROUP BY 1, 2, 3, 4\nORDER BY 1 DESC, 2 DESC, 3, 4
de4ftw2	raptor	de	20180306_072928_06396_z5zx8	unidash:1835928376618700:argus:378091	SELECT\n    ds,\n    action_subcategory AS dim,\n    num_users,\n    num_users_7d_avg,\n    num_actions,\n    num_actions_7d_avg\nFROM (\n  SELECT\n    ds,\n    action_subcategory,\n    num_dap AS num_users,\n    AVG(num_dap) OVER (\n        PARTITION BY action_subcategory\n        ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS num_users_7d_avg,\n    num_actions_1d AS num_actions,\n    AVG(num_actions_1d) OVER (\n        PARTITION BY action_subcategory\n        ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS num_actions_7d_avg\n  FROM\n    events_growth_accounting_cube\n  WHERE\n    ds >= DATE_ADD('day',-7,CAST('2017-07-01' AS DATE)) AND\n    breakdown = 'action_subcategory')\nWHERE\n  ds >= CAST('2017-07-01' AS DATE)
de4ftw2	raptor	de	20180306_071932_06135_z5zx8	unidash:1885556281723778:argus:491626	WITH tmp AS (\n    SELECT\n        ds,\n  \t\t\tYEAR(ds) AS year,\n\t\t  \n        b.country_code AS geo_dim,\n\t\t\t\n\t\t      \n  \t\t\tNULL AS sci_dim,\n  \t\t\n  \t\t\tSUM(ig_MAP) MAP\n    FROM ig_users_growthacc_agg a\n  \tLEFT JOIN dim_country_geographic_region b\n  \tON a.country=b.country_code\n    WHERE \n  \t\ta.ds>=DATE('2014-01-01')\n  \t\tAND a.agg_level='country'\n      AND b.country_code IN ('US') \n      \n\t  GROUP BY 1, 2, 3, 4\n)\nSELECT\n    curr.ds,\n    curr.year,\n    curr.sci_dim,\n    curr.geo_dim,\n    AVG(curr.MAP - prev.MAP) AS "MAP YoY (Abs)"\nFROM tmp curr\nJOIN tmp prev\nON\n    curr.geo_dim=prev.geo_dim\n    AND COALESCE(curr.sci_dim, 'dummy')=COALESCE(prev.sci_dim, 'dummy') \n    AND DATE_DIFF('day', prev.ds, curr.ds)=365\n    AND CAST(YEAR(curr.ds) AS VARCHAR) IN ('2018','2017','2016','2015')    \nGROUP BY 1, 2, 3, 4\nORDER BY 1 DESC, 2 DESC, 3, 4
de4ftw2	raptor	de	20180306_072928_06395_z5zx8	unidash:1835928376618700:argus:378091	SELECT\n    ds,\n    action_subcategory AS dim,\n    num_users,\n    num_users_7d_avg,\n    num_actions,\n    num_actions_7d_avg\nFROM (\n  SELECT\n    ds,\n    action_subcategory,\n    num_dap AS num_users,\n    AVG(num_dap) OVER (\n        PARTITION BY action_subcategory\n        ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS num_users_7d_avg,\n    num_actions_1d AS num_actions,\n    AVG(num_actions_1d) OVER (\n        PARTITION BY action_subcategory\n        ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS num_actions_7d_avg\n  FROM\n    events_growth_accounting_cube\n  WHERE\n    ds >= DATE_ADD('day',-7,CAST('2016-01-01' AS DATE)) AND\n    breakdown = 'action_subcategory')\nWHERE\n  ds >= CAST('2016-01-01' AS DATE)
de4ftw2	raptor	de	20180306_072928_06393_z5zx8	unidash:1835928376618700:argus:350122	SELECT\n  ds,\n  country,\n  num_users,\n  num_users_7d_avg,\n  fb_num_users,\n  fb_num_users_7d_avg,\n  num_users*1.0/fb_num_users AS penetration,\n  num_users_7d_avg*1.0/fb_num_users_7d_avg AS penetration_7d_avg,\n  delta\nFROM (\n  SELECT\n    ds,\n    e.country,\n    num_dap AS num_users,\n    AVG(num_dap) OVER (\n      PARTITION BY e.country\n      ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS num_users_7d_avg,\n    fb_dap AS fb_num_users,\n    AVG(fb_dap) OVER (\n      PARTITION BY e.country\n      ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS fb_num_users_7d_avg,\n    delta\n  FROM\n    events_growth_accounting_cube e\n  JOIN (\n    SELECT\n      country,\n      delta\n    FROM (\n      SELECT\n        ds,\n        max_ds,\n        country,\n        (num_users -\n          LAG(num_users, 7) OVER (\n            PARTITION BY country\n            ORDER BY ds)) AS delta\n      FROM (\n        SELECT\n          ds,\n          country,\n          MAX(ds) OVER (PARTITION BY 1) AS max_ds,\n          IF('dap' = 'dap',\n            AVG(num_dap) OVER (\n              PARTITION BY country\n              ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW),\n            num_dap\n          ) AS num_users\n        FROM\n          events_growth_accounting_cube\n        WHERE\n          ds >= CAST('2017-12-24' AS DATE) AND\n          breakdown = 'country')\n      ORDER BY\n        abs(num_users -\n          LAG(num_users, 7) OVER (\n            PARTITION BY country\n            ORDER BY ds)) DESC)\n    WHERE\n      ds = max_ds\n    LIMIT 10) t5\n  ON\n    e.country = t5.country\n  WHERE\n    ds >= CAST('2017-02-17' AS DATE) AND\n    breakdown = 'country')
de4ftw2	raptor	de	20180306_072928_06391_z5zx8	unidash:1835928376618700:argus:494622	SELECT\n    ds,\n    num_actions,\n    AVG(num_actions) OVER (ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) as num_actions_7d_avg\nFROM (\n    SELECT \n        SUM(num_actions_1d) as num_actions,\n        ds\n    FROM \n      events_growth_accounting_cube\n    WHERE \n      breakdown IN ('ALL.num_misc=organic_rsvp','ALL.num_misc=discovery_rsvp')\n      AND ds >= CAST('2017-09-05' AS DATE)\n    GROUP BY ds) tmp
