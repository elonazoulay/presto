ftw2_batch3	prism_batch	ad_metrics	20180427_203217_06017_ttd36	dataswarm@backfill@ad_metrics.identity.dashboard.ig_delivery_match_log.ig_delivery_multiple_account_match[7][2]	/* Generated */\nINSERT INTO ig_delivery_multiple_account_match (\n  "client",\n  "country",\n  "device_os",\n  "match_method",\n  "number_requests",\n  "number_igid",\n  "number_requests_oneigid_onefbid",\n  "number_requests_oneigid_multiplefbid",\n  "number_users_oneigid_onefbid",\n  "number_users_oneigid_multiplefbid",\n  "experiment_name",\n  "ds",\n  "time_span",\n  "has_match_method"\n)\nSELECT\n  "client",\n  "country",\n  "device_os",\n  "match_method",\n  "number_requests",\n  "number_igid",\n  "number_requests_oneigid_onefbid",\n  "number_requests_oneigid_multiplefbid",\n  "number_users_oneigid_onefbid",\n  "number_users_oneigid_multiplefbid",\n  "experiment_name",\n  '2018-04-17' AS "ds",\n  '7' AS "time_span",\n  '2' AS "has_match_method"\nFROM (\n  /* User-provided */\n  SELECT client,\n         country,\n         device_os,\n         match_method,\n         experiment_name,\n         SUM(number_requests) AS number_requests,\n         COUNT(1) AS number_IGID,\n         SUM(IF(number_FBID = 1, number_requests, 0))\n              AS number_requests_OneIGID_OneFBID,\n         SUM(IF(number_FBID > 1, number_requests, 0))\n              AS number_requests_OneIGID_MultipleFBID,\n         SUM(IF(number_FBID = 1, 1, 0)) AS number_users_OneIGID_OneFBID,\n         SUM(IF(number_FBID > 1, 1, 0)) AS number_users_OneIGID_MultipleFBID,\n         7 AS time_span\n  FROM\n  (\n      SELECT ig_user_id,\n\n\n             COALESCE(client, 'ALL') as client,\n\n\n\n             COALESCE(country, 'ALL') as country,\n\n\n\n             'ALL' AS device_os,\n\n\n\n             'ALL' as match_method,\n\n\n\n             'ALL' as experiment_name,\n\n             COUNT(DISTINCT fb_user_id) AS number_FBID,\n             SUM(number_requests) AS number_requests\n        FROM ig_delivery_igid_fbid_stg\n       WHERE ds = '2018-04-17'\n         AND time_span = '7'\n   GROUP BY GROUPING SETS (\n\n            (ig_user_id, client),\n            (ig_user_id, country)\n\n      )\n  ) a\n  GROUP BY client,\n           country,\n           device_os,\n           match_method,\n           experiment_name\n)
ftw2_batch	prism_batch	ad_metrics	20180427_230334_17110_by2ar	dataswarm@backfill@ad_metrics.identity.dashboard.ig_delivery_match_log.ig_delivery_multiple_account_match[7][14]	/* Generated */\nINSERT INTO ig_delivery_multiple_account_match (\n  "client",\n  "country",\n  "device_os",\n  "match_method",\n  "number_requests",\n  "number_igid",\n  "number_requests_oneigid_onefbid",\n  "number_requests_oneigid_multiplefbid",\n  "number_users_oneigid_onefbid",\n  "number_users_oneigid_multiplefbid",\n  "experiment_name",\n  "ds",\n  "time_span",\n  "has_match_method"\n)\nSELECT\n  "client",\n  "country",\n  "device_os",\n  "match_method",\n  "number_requests",\n  "number_igid",\n  "number_requests_oneigid_onefbid",\n  "number_requests_oneigid_multiplefbid",\n  "number_users_oneigid_onefbid",\n  "number_users_oneigid_multiplefbid",\n  "experiment_name",\n  '2018-04-20' AS "ds",\n  '7' AS "time_span",\n  '14' AS "has_match_method"\nFROM (\n  /* User-provided */\n  SELECT client,\n         country,\n         device_os,\n         match_method,\n         experiment_name,\n         SUM(number_requests) AS number_requests,\n         COUNT(1) AS number_IGID,\n         SUM(IF(number_FBID = 1, number_requests, 0))\n              AS number_requests_OneIGID_OneFBID,\n         SUM(IF(number_FBID > 1, number_requests, 0))\n              AS number_requests_OneIGID_MultipleFBID,\n         SUM(IF(number_FBID = 1, 1, 0)) AS number_users_OneIGID_OneFBID,\n         SUM(IF(number_FBID > 1, 1, 0)) AS number_users_OneIGID_MultipleFBID,\n         7 AS time_span\n  FROM\n  (\n      SELECT ig_user_id,\n\n\n             COALESCE(client, 'ALL') as client,\n\n\n\n             COALESCE(country, 'ALL') as country,\n\n\n\n             'ALL' AS device_os,\n\n\n\n             COALESCE(match_method, 'ALL') as match_method,\n\n\n\n             COALESCE(experiment_name, 'ALL') as experiment_name,\n\n             COUNT(DISTINCT fb_user_id) AS number_FBID,\n             SUM(number_requests) AS number_requests\n        FROM ig_delivery_igid_fbid_stg\n       WHERE ds = '2018-04-20'\n         AND time_span = '7'\n   GROUP BY GROUPING SETS (\n\n            (ig_user_id, match_method, client, country, experiment_name)\n\n      )\n  ) a\n  GROUP BY client,\n           country,\n           device_os,\n           match_method,\n           experiment_name\n)
ftw2_batch	prism_batch	pages	20180415_074239_02198_8pjzs	dataswarm@worker@pages.growth.hourly_page_messaging.insert_people_to_pages_messaging_page_id[1]	    INSERT INTO people_to_pages_messaging_page_id (\n      "page_id",\n\n      "user_sender_interface",\n\n      "page_sender_interface",\n      "page_sender_is_page_bot",\n\n      "user_sender_is_admin",\n      "user_sender_is_fan",\n\n      "user_locale_bucket",\n      "user_gender",\n      "user_facebookage_bucket",\n      "user_age_bucket",\n      "user_country_bucket",\n\n      "page_super_category_name",\n      "page_vertical",\n      "page_fan_count_bucket_v2",\n      "page_country_prediction_bucket",\n      "page_age_bucket",\n      "page_has_admin",\n\n      "num_user_message_connections",\n\n      "user_sender_messages_sent",\n\n      "page_sender_messages_sent",\n\n      "num_samples",\n\n      "avg_user_sender_response_time_min_min",\n      "avg_user_sender_response_time_max_max",\n      "avg_user_sender_response_time_min_max",\n      "avg_user_sender_response_time_max_min",\n\n      "avg_page_sender_response_time_min_min",\n      "avg_page_sender_response_time_max_max",\n      "avg_page_sender_response_time_min_max",\n      "avg_page_sender_response_time_max_min",\n\n      "ds",\n      "roll_up",\n      "page_is_business",\n      "is_conversation"\n    )\n    SELECT\n        page_id,\n\n        -- nonmece for deltoid\n        COALESCE(user_sender_interface, 'overall') AS user_sender_interface,\n\n\n        COALESCE(page_sender_interface, 'overall') AS page_sender_interface,\n\n        COALESCE(\n            CAST(page_sender_is_page_bot AS VARCHAR),\n            'overall'\n        ) AS page_sender_is_page_bot,\n\n        -- mece\n        user_sender_is_admin,\n        user_sender_is_fan,\n\n        user_locale_bucket,\n        user_gender,\n        user_facebookage_bucket,\n        user_age_bucket,\n        user_country_bucket,\n\n        page_super_category_name,\n        page_vertical,\n        page_fan_count_bucket_v2,\n        page_country_prediction_bucket,\n        page_age_bucket,\n        page_has_admin,\n\n        COUNT(DISTINCT user_id) AS num_user_message_connections,\n\n        SUM(user_sender_messages_sent) AS user_sender_messages_sent,\n        SUM(page_sender_messages_sent) AS page_sender_messages_sent,\n\n        COUNT(1) AS num_samples,\n\n        AVG(user_sender_response_time_min_min) AS avg_user_sender_response_time_min_min,\n        AVG(user_sender_response_time_max_max) AS avg_user_sender_response_time_max_max,\n        AVG(user_sender_response_time_min_max) AS avg_user_sender_response_time_min_max,\n        AVG(user_sender_response_time_max_min) AS avg_user_sender_response_time_max_min,\n\n        AVG(page_sender_response_time_min_min) AS avg_page_sender_response_time_min_min,\n        AVG(page_sender_response_time_max_max) AS avg_page_sender_response_time_max_max,\n        AVG(page_sender_response_time_min_max) AS avg_page_sender_response_time_min_max,\n        AVG(page_sender_response_time_max_min) AS avg_page_sender_response_time_max_min,\n\n        '2018-04-13' AS ds,\n\n        COALESCE(\n            NULLIF(\n                NULLIF(\n                    CONCAT(\n                        IF(\n                            is_conversation IS NULL,\n                            '',\n                            '-is_conversation'\n                        ),\n\n                        IF(\n                            user_sender_interface IS NULL,\n                            '',\n                            '-user_sender_interface'\n                        ),\n\n                        IF(\n                            page_sender_interface IS NULL,\n                            '',\n                            '-page_sender_interface'\n                        ),\n                        IF(\n                            page_sender_is_page_bot IS NULL,\n                            '',\n                            '-page_sender_is_page_bot'\n                        )\n                    ),\n                    ''\n                ),\n                CAST(NULL AS VARCHAR)\n            ),\n            'overall'\n        ) AS roll_up,\n\n        page_is_business,\n\n        COALESCE(\n            CAST(is_conversation AS VARCHAR),\n            'overall'\n        ) AS is_conversation\n\n    FROM people_to_pages_messaging\n    WHERE ds = '2018-04-13'\n        AND is_thread = 1\n\n    GROUP BY GROUPING SETS (\n\n            (is_conversation,page_sender_interface,page_sender_is_page_bot,page_id,user_sender_is_admin,user_sender_is_fan,user_locale_bucket,user_gender,user_facebookage_bucket,user_isactivated,user_is_employee,user_country_bucket,user_age_bucket,page_super_category_name,page_vertical,page_fan_count_bucket_v2,page_country_prediction_bucket,page_age_bucket,page_has_admin,page_is_business)\n            ,\n            (is_conversation,page_sender_interface,user_sender_interface,page_id,user_sender_is_admin,user_sender_is_fan,user_locale_bucket,user_gender,user_facebookage_bucket,user_isactivated,user_is_employee,user_country_bucket,user_age_bucket,page_super_category_name,page_vertical,page_fan_count_bucket_v2,page_country_prediction_bucket,page_age_bucket,page_has_admin,page_is_business)\n            ,\n            (page_sender_interface,page_sender_is_page_bot,page_id,user_sender_is_admin,user_sender_is_fan,user_locale_bucket,user_gender,user_facebookage_bucket,user_isactivated,user_is_employee,user_country_bucket,user_age_bucket,page_super_category_name,page_vertical,page_fan_count_bucket_v2,page_country_prediction_bucket,page_age_bucket,page_has_admin,page_is_business)\n            ,\n            (page_sender_interface,user_sender_interface,page_id,user_sender_is_admin,user_sender_is_fan,user_locale_bucket,user_gender,user_facebookage_bucket,user_isactivated,user_is_employee,user_country_bucket,user_age_bucket,page_super_category_name,page_vertical,page_fan_count_bucket_v2,page_country_prediction_bucket,page_age_bucket,page_has_admin,page_is_business)\n            ,\n            (page_sender_is_page_bot,user_sender_interface,page_id,user_sender_is_admin,user_sender_is_fan,user_locale_bucket,user_gender,user_facebookage_bucket,user_isactivated,user_is_employee,user_country_bucket,user_age_bucket,page_super_category_name,page_vertical,page_fan_count_bucket_v2,page_country_prediction_bucket,page_age_bucket,page_has_admin,page_is_business)\n            ,\n            (is_conversation,page_id,user_sender_is_admin,user_sender_is_fan,user_locale_bucket,user_gender,user_facebookage_bucket,user_isactivated,user_is_employee,user_country_bucket,user_age_bucket,page_super_category_name,page_vertical,page_fan_count_bucket_v2,page_country_prediction_bucket,page_age_bucket,page_has_admin,page_is_business)\n\n)
atn3_batch3	prism_batch	locations	20180429_215744_05248_chjd5	dataswarm@backfill@locations.places.pvd.high_karma_panelists_pvd_groundtruth_launcher.topline_tasks[populate_pvd_groundtruth_recall_summary_rollup_all_thr_strict_28d]	/* Generated */\nINSERT INTO good_karma_pvd_groundtruth_recall_summary_rollup_all_thr (\n  "suggestifier_threshold",\n  "user_type",\n  "device_os",\n  "page_category",\n  "context_state",\n  "groundtruth_count",\n  "recall_count",\n  "candidate_fetch_count",\n  "context_count",\n  "has_signal_count",\n  "has_good_signal_count",\n  "home_count",\n  "home_work_count",\n  "stop_count",\n  "not_enough_signal_count",\n  "at_place_confident_prediction",\n  "panelist_group_type",\n  "is_eligible_topline",\n  "ds",\n  "fuzzy",\n  "rollup_window",\n  "experiment_name"\n)\nSELECT\n  "suggestifier_threshold",\n  "user_type",\n  "device_os",\n  "page_category",\n  "context_state",\n  "groundtruth_count",\n  "recall_count",\n  "candidate_fetch_count",\n  "context_count",\n  "has_signal_count",\n  "has_good_signal_count",\n  "home_count",\n  "home_work_count",\n  "stop_count",\n  "not_enough_signal_count",\n  "at_place_confident_prediction",\n  "panelist_group_type",\n  "is_eligible_topline",\n  '2018-04-23' AS "ds",\n  '0' AS "fuzzy",\n  '28' AS "rollup_window",\n  "experiment_name"\nFROM (\n  /* User-provided */\n          SELECT\n              suggestifier_threshold,\n              COALESCE(user_type, 'overall') AS user_type,\n              COALESCE(device_os, 'overall') AS device_os,\n              COALESCE(page_category, 'overall') AS page_category,\n              COALESCE(context_state, 'overall') AS context_state,\n              groundtruth_count,\n              recall_count,\n              candidate_fetch_count,\n              context_count,\n              has_signal_count,\n              has_good_signal_count,\n              home_count,\n              home_work_count,\n              stop_count,\n              not_enough_signal_count,\n              COALESCE(at_place_confident_prediction, 'overall')\n                  AS at_place_confident_prediction,\n              COALESCE(panelist_group_type, 'overall') AS panelist_group_type,\n              COALESCE(is_eligible_topline, 'overall') AS is_eligible_topline,\n              experiment_name\n          FROM (\n              SELECT\n                  user_type,\n                  device_os,\n                  page_category,\n                  context_state,\n                  SUM(groundtruth_count) AS groundtruth_count,\n                  SUM(recall_count) AS recall_count,\n                  SUM(candidate_fetch_count) AS candidate_fetch_count,\n                  SUM(context_count) AS context_count,\n                  SUM(has_signal_count) AS has_signal_count,\n                  SUM(has_good_signal_count) AS has_good_signal_count,\n                  SUM(home_count) AS home_count,\n                  SUM(home_work_count) AS home_work_count,\n                  SUM(stop_count) AS stop_count,\n                  SUM(not_enough_signal_count) AS not_enough_signal_count,\n                  suggestifier_threshold,\n                  at_place_confident_prediction,\n                  panelist_group_type,\n                  is_eligible_topline,\n                  experiment_name\n              FROM (\n                  SELECT\n                      user_type,\n                      COALESCE(device_os, 'unknown') AS device_os,\n                      page_category,\n                      COALESCE(context_state, 'unknown') AS context_state,\n                      COUNT(*) AS groundtruth_count,\n                      COUNT_IF(\n                          place_visit_correct AND\n                          max_confidence_of_place_visit_correct >= threshold\n                      ) AS recall_count,\n                      COUNT_IF(candidate_fetch_correct) AS candidate_fetch_count,\n                      COUNT_IF(context_correct) AS context_count,\n                      COUNT_IF(signals_count_strict > 0) AS has_signal_count,\n                      COUNT_IF(signals_count_strict > 1) AS has_good_signal_count,\n                      COUNT_IF(at_home_neg_correct) AS home_count,\n                      COUNT_IF(at_home_work_neg_correct) AS home_work_count,\n                      COUNT_IF(stop_correct) AS stop_count,\n                      COUNT_IF(\n                          signals_count_strict <= 1 AND\n                          (NOT stop_correct)\n                      ) AS not_enough_signal_count,\n                      CAST(threshold AS VARCHAR) AS suggestifier_threshold,\n                      COALESCE(\n                          CAST(good_at_place_segment AS VARCHAR),\n                          'unknown'\n                      ) AS at_place_confident_prediction,\n                      COALESCE(panelist_group_type, 'unknown') AS panelist_group_type,\n                      COALESCE(CAST(is_eligible_topline AS VARCHAR), 'unknown')\n                          AS is_eligible_topline,\n                      experiment_name\n                  FROM (\n                      SELECT\n                          a.*,\n                          b.panelist_group_type,\n                          b.is_eligible_topline,\n                          num / 200. threshold\n                      FROM\n                          good_karma_pvd_groundtruth_recall_all_thr_strict a\n                      JOIN\n                          pvd_topline_whitelisted_panelists_with_valid_karma b\n                      ON\n                          a.ds BETWEEN\n                              GREATEST('2018-03-27', ARRAY_MAX(FILTER(ARRAY ['1970-01-01','2017-12-21'],x -> x<='2018-04-23'))) AND '2018-04-23' AND\n                          b.ds BETWEEN\n                              GREATEST('2018-03-27', ARRAY_MAX(FILTER(ARRAY ['1970-01-01','2017-12-21'],x -> x<='2018-04-23'))) AND '2018-04-23' AND\n                          a.ds = b.ds AND\n                          a.owner_id = b.userid AND\n                          b.is_valid_setting\n                      CROSS JOIN UNNEST(SEQUENCE(0, 199)) AS x(num)\n                  ) c\n                  GROUP BY\n                      user_type,\n                      COALESCE(device_os, 'unknown'),\n                      page_category,\n                      context_state,\n                      threshold,\n                      good_at_place_segment,\n                      panelist_group_type,\n                      is_eligible_topline,\n                      experiment_name\n              )d\n              GROUP BY GROUPING SETS (\n                  (suggestifier_threshold, experiment_name),\n  (user_type, experiment_name),\n  (device_os, experiment_name),\n  (page_category, experiment_name),\n  (context_state, experiment_name),\n  (at_place_confident_prediction, experiment_name),\n  (panelist_group_type, experiment_name),\n  (is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, experiment_name),\n  (suggestifier_threshold, device_os, experiment_name),\n  (suggestifier_threshold, page_category, experiment_name),\n  (suggestifier_threshold, context_state, experiment_name),\n  (suggestifier_threshold, at_place_confident_prediction, experiment_name),\n  (suggestifier_threshold, panelist_group_type, experiment_name),\n  (suggestifier_threshold, is_eligible_topline, experiment_name),\n  (user_type, device_os, experiment_name),\n  (user_type, page_category, experiment_name),\n  (user_type, context_state, experiment_name),\n  (user_type, at_place_confident_prediction, experiment_name),\n  (user_type, panelist_group_type, experiment_name),\n  (user_type, is_eligible_topline, experiment_name),\n  (device_os, page_category, experiment_name),\n  (device_os, context_state, experiment_name),\n  (device_os, at_place_confident_prediction, experiment_name),\n  (device_os, panelist_group_type, experiment_name),\n  (device_os, is_eligible_topline, experiment_name),\n  (page_category, context_state, experiment_name),\n  (page_category, at_place_confident_prediction, experiment_name),\n  (page_category, panelist_group_type, experiment_name),\n  (page_category, is_eligible_topline, experiment_name),\n  (context_state, at_place_confident_prediction, experiment_name),\n  (context_state, panelist_group_type, experiment_name),\n  (context_state, is_eligible_topline, experiment_name),\n  (at_place_confident_prediction, panelist_group_type, experiment_name),\n  (at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, experiment_name),\n  (suggestifier_threshold, user_type, page_category, experiment_name),\n  (suggestifier_threshold, user_type, context_state, experiment_name),\n  (suggestifier_threshold, user_type, at_place_confident_prediction, experiment_name),\n  (suggestifier_threshold, user_type, panelist_group_type, experiment_name),\n  (suggestifier_threshold, user_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, device_os, page_category, experiment_name),\n  (suggestifier_threshold, device_os, context_state, experiment_name),\n  (suggestifier_threshold, device_os, at_place_confident_prediction, experiment_name),\n  (suggestifier_threshold, device_os, panelist_group_type, experiment_name),\n  (suggestifier_threshold, device_os, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, page_category, context_state, experiment_name),\n  (suggestifier_threshold, page_category, at_place_confident_prediction, experiment_name),\n  (suggestifier_threshold, page_category, panelist_group_type, experiment_name),\n  (suggestifier_threshold, page_category, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, context_state, at_place_confident_prediction, experiment_name),\n  (suggestifier_threshold, context_state, panelist_group_type, experiment_name),\n  (suggestifier_threshold, context_state, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (suggestifier_threshold, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, panelist_group_type, is_eligible_topline, experiment_name),\n  (user_type, device_os, page_category, experiment_name),\n  (user_type, device_os, context_state, experiment_name),\n  (user_type, device_os, at_place_confident_prediction, experiment_name),\n  (user_type, device_os, panelist_group_type, experiment_name),\n  (user_type, device_os, is_eligible_topline, experiment_name),\n  (user_type, page_category, context_state, experiment_name),\n  (user_type, page_category, at_place_confident_prediction, experiment_name),\n  (user_type, page_category, panelist_group_type, experiment_name),\n  (user_type, page_category, is_eligible_topline, experiment_name),\n  (user_type, context_state, at_place_confident_prediction, experiment_name),\n  (user_type, context_state, panelist_group_type, experiment_name),\n  (user_type, context_state, is_eligible_topline, experiment_name),\n  (user_type, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (user_type, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (user_type, panelist_group_type, is_eligible_topline, experiment_name),\n  (device_os, page_category, context_state, experiment_name),\n  (device_os, page_category, at_place_confident_prediction, experiment_name),\n  (device_os, page_category, panelist_group_type, experiment_name),\n  (device_os, page_category, is_eligible_topline, experiment_name),\n  (device_os, context_state, at_place_confident_prediction, experiment_name),\n  (device_os, context_state, panelist_group_type, experiment_name),\n  (device_os, context_state, is_eligible_topline, experiment_name),\n  (device_os, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (device_os, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (device_os, panelist_group_type, is_eligible_topline, experiment_name),\n  (page_category, context_state, at_place_confident_prediction, experiment_name),\n  (page_category, context_state, panelist_group_type, experiment_name),\n  (page_category, context_state, is_eligible_topline, experiment_name),\n  (page_category, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (page_category, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (page_category, panelist_group_type, is_eligible_topline, experiment_name),\n  (context_state, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (context_state, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (context_state, panelist_group_type, is_eligible_topline, experiment_name),\n  (at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, page_category, experiment_name),\n  (suggestifier_threshold, user_type, device_os, context_state, experiment_name),\n  (suggestifier_threshold, user_type, device_os, at_place_confident_prediction, experiment_name),\n  (suggestifier_threshold, user_type, device_os, panelist_group_type, experiment_name),\n  (suggestifier_threshold, user_type, device_os, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, page_category, context_state, experiment_name),\n  (suggestifier_threshold, user_type, page_category, at_place_confident_prediction, experiment_name),\n  (suggestifier_threshold, user_type, page_category, panelist_group_type, experiment_name),\n  (suggestifier_threshold, user_type, page_category, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, context_state, at_place_confident_prediction, experiment_name),\n  (suggestifier_threshold, user_type, context_state, panelist_group_type, experiment_name),\n  (suggestifier_threshold, user_type, context_state, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (suggestifier_threshold, user_type, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, device_os, page_category, context_state, experiment_name),\n  (suggestifier_threshold, device_os, page_category, at_place_confident_prediction, experiment_name),\n  (suggestifier_threshold, device_os, page_category, panelist_group_type, experiment_name),\n  (suggestifier_threshold, device_os, page_category, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, device_os, context_state, at_place_confident_prediction, experiment_name),\n  (suggestifier_threshold, device_os, context_state, panelist_group_type, experiment_name),\n  (suggestifier_threshold, device_os, context_state, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, device_os, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (suggestifier_threshold, device_os, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, device_os, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, page_category, context_state, at_place_confident_prediction, experiment_name),\n  (suggestifier_threshold, page_category, context_state, panelist_group_type, experiment_name),\n  (suggestifier_threshold, page_category, context_state, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, page_category, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (suggestifier_threshold, page_category, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, page_category, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, context_state, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (suggestifier_threshold, context_state, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, context_state, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (user_type, device_os, page_category, context_state, experiment_name),\n  (user_type, device_os, page_category, at_place_confident_prediction, experiment_name),\n  (user_type, device_os, page_category, panelist_group_type, experiment_name),\n  (user_type, device_os, page_category, is_eligible_topline, experiment_name),\n  (user_type, device_os, context_state, at_place_confident_prediction, experiment_name),\n  (user_type, device_os, context_state, panelist_group_type, experiment_name),\n  (user_type, device_os, context_state, is_eligible_topline, experiment_name),\n  (user_type, device_os, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (user_type, device_os, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (user_type, device_os, panelist_group_type, is_eligible_topline, experiment_name),\n  (user_type, page_category, context_state, at_place_confident_prediction, experiment_name),\n  (user_type, page_category, context_state, panelist_group_type, experiment_name),\n  (user_type, page_category, context_state, is_eligible_topline, experiment_name),\n  (user_type, page_category, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (user_type, page_category, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (user_type, page_category, panelist_group_type, is_eligible_topline, experiment_name),\n  (user_type, context_state, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (user_type, context_state, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (user_type, context_state, panelist_group_type, is_eligible_topline, experiment_name),\n  (user_type, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (device_os, page_category, context_state, at_place_confident_prediction, experiment_name),\n  (device_os, page_category, context_state, panelist_group_type, experiment_name),\n  (device_os, page_category, context_state, is_eligible_topline, experiment_name),\n  (device_os, page_category, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (device_os, page_category, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (device_os, page_category, panelist_group_type, is_eligible_topline, experiment_name),\n  (device_os, context_state, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (device_os, context_state, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (device_os, context_state, panelist_group_type, is_eligible_topline, experiment_name),\n  (device_os, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (page_category, context_state, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (page_category, context_state, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (page_category, context_state, panelist_group_type, is_eligible_topline, experiment_name),\n  (page_category, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (context_state, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, page_category, context_state, experiment_name),\n  (suggestifier_threshold, user_type, device_os, page_category, at_place_confident_prediction, experiment_name),\n  (suggestifier_threshold, user_type, device_os, page_category, panelist_group_type, experiment_name),\n  (suggestifier_threshold, user_type, device_os, page_category, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, context_state, at_place_confident_prediction, experiment_name),\n  (suggestifier_threshold, user_type, device_os, context_state, panelist_group_type, experiment_name),\n  (suggestifier_threshold, user_type, device_os, context_state, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (suggestifier_threshold, user_type, device_os, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, page_category, context_state, at_place_confident_prediction, experiment_name),\n  (suggestifier_threshold, user_type, page_category, context_state, panelist_group_type, experiment_name),\n  (suggestifier_threshold, user_type, page_category, context_state, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, page_category, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (suggestifier_threshold, user_type, page_category, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, page_category, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, context_state, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (suggestifier_threshold, user_type, context_state, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, context_state, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, device_os, page_category, context_state, at_place_confident_prediction, experiment_name),\n  (suggestifier_threshold, device_os, page_category, context_state, panelist_group_type, experiment_name),\n  (suggestifier_threshold, device_os, page_category, context_state, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, device_os, page_category, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (suggestifier_threshold, device_os, page_category, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, device_os, page_category, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, device_os, context_state, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (suggestifier_threshold, device_os, context_state, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, device_os, context_state, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, device_os, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, page_category, context_state, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (suggestifier_threshold, page_category, context_state, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, page_category, context_state, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, page_category, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, context_state, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (user_type, device_os, page_category, context_state, at_place_confident_prediction, experiment_name),\n  (user_type, device_os, page_category, context_state, panelist_group_type, experiment_name),\n  (user_type, device_os, page_category, context_state, is_eligible_topline, experiment_name),\n  (user_type, device_os, page_category, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (user_type, device_os, page_category, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (user_type, device_os, page_category, panelist_group_type, is_eligible_topline, experiment_name),\n  (user_type, device_os, context_state, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (user_type, device_os, context_state, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (user_type, device_os, context_state, panelist_group_type, is_eligible_topline, experiment_name),\n  (user_type, device_os, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (user_type, page_category, context_state, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (user_type, page_category, context_state, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (user_type, page_category, context_state, panelist_group_type, is_eligible_topline, experiment_name),\n  (user_type, page_category, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (user_type, context_state, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (device_os, page_category, context_state, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (device_os, page_category, context_state, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (device_os, page_category, context_state, panelist_group_type, is_eligible_topline, experiment_name),\n  (device_os, page_category, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (device_os, context_state, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (page_category, context_state, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, page_category, context_state, at_place_confident_prediction, experiment_name),\n  (suggestifier_threshold, user_type, device_os, page_category, context_state, panelist_group_type, experiment_name),\n  (suggestifier_threshold, user_type, device_os, page_category, context_state, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, page_category, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (suggestifier_threshold, user_type, device_os, page_category, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, page_category, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, context_state, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (suggestifier_threshold, user_type, device_os, context_state, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, context_state, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, page_category, context_state, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (suggestifier_threshold, user_type, page_category, context_state, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, page_category, context_state, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, page_category, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, context_state, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, device_os, page_category, context_state, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (suggestifier_threshold, device_os, page_category, context_state, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, device_os, page_category, context_state, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, device_os, page_category, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, device_os, context_state, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, page_category, context_state, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (user_type, device_os, page_category, context_state, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (user_type, device_os, page_category, context_state, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (user_type, device_os, page_category, context_state, panelist_group_type, is_eligible_topline, experiment_name),\n  (user_type, device_os, page_category, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (user_type, device_os, context_state, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (user_type, page_category, context_state, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (device_os, page_category, context_state, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, page_category, context_state, at_place_confident_prediction, panelist_group_type, experiment_name),\n  (suggestifier_threshold, user_type, device_os, page_category, context_state, at_place_confident_prediction, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, page_category, context_state, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, page_category, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, context_state, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, page_category, context_state, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, device_os, page_category, context_state, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (user_type, device_os, page_category, context_state, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name),\n  (suggestifier_threshold, user_type, device_os, page_category, context_state, at_place_confident_prediction, panelist_group_type, is_eligible_topline, experiment_name)\n              )\n          ) e\n          WHERE\n              suggestifier_threshold IS NOT NULL\n              AND experiment_name IS NOT NULL\n)
ftw2_batch4	prism_batch	aml	20180501_033227_10887_bk6rn	dataswarm@worker@aml.langtech.translation.ulm.ulm_analysis.prepare_for_raptor	/* Generated */\nINSERT INTO fct_ulm_metrics (\n  "activity_type",\n  "agg_level",\n  "agg_value",\n  "threshold",\n  "benchmark_type",\n  "cnt",\n  "prod_true_positive",\n  "prod_false_positive",\n  "prod_false_negative",\n  "generated_true_positive",\n  "generated_false_positive",\n  "generated_false_negative",\n  "received_true_positive",\n  "received_false_positive",\n  "received_false_negative",\n  "consumed_true_positive",\n  "consumed_false_positive",\n  "consumed_false_negative",\n  "consumed_normalized_true_positive",\n  "consumed_normalized_false_positive",\n  "consumed_normalized_false_negative",\n  "message_sends_true_positive",\n  "message_sends_false_positive",\n  "message_sends_false_negative",\n  "learned_true_positive",\n  "learned_false_positive",\n  "learned_false_negative",\n  "ds"\n)\nSELECT\n  "activity_type",\n  "agg_level",\n  "agg_value",\n  "threshold",\n  "benchmark_type",\n  "cnt",\n  "prod_true_positive",\n  "prod_false_positive",\n  "prod_false_negative",\n  "generated_true_positive",\n  "generated_false_positive",\n  "generated_false_negative",\n  "received_true_positive",\n  "received_false_positive",\n  "received_false_negative",\n  "consumed_true_positive",\n  "consumed_false_positive",\n  "consumed_false_negative",\n  "consumed_normalized_true_positive",\n  "consumed_normalized_false_positive",\n  "consumed_normalized_false_negative",\n  "message_sends_true_positive",\n  "message_sends_false_positive",\n  "message_sends_false_negative",\n  "learned_true_positive",\n  "learned_false_positive",\n  "learned_false_negative",\n  '2018-04-29' AS "ds"\nFROM (\n  /* User-provided */\n      SELECT\n          activity_type,\n          agg_level,\n          COALESCE(agg_value, '(Overall)') AS agg_value,\n          threshold,\n          benchmark_type,\n          COUNT(1) AS cnt,\n\n      SUM(IF(prod_score >= IF('prod' = 'learned', 0.3, 0.0) + threshold AND in_benchmark,1,0)) AS prod_true_positive,\n      SUM(IF(prod_score >= IF('prod' = 'learned', 0.3, 0.0) + threshold AND NOT(in_benchmark),1,0))\n          AS prod_false_positive,\n      SUM(IF(prod_score < IF('prod' = 'learned', 0.3, 0.0) + threshold AND in_benchmark,1,0)) AS prod_false_negative\n  ,\n      SUM(IF(generated_score >= IF('generated' = 'learned', 0.3, 0.0) + threshold AND in_benchmark,1,0)) AS generated_true_positive,\n      SUM(IF(generated_score >= IF('generated' = 'learned', 0.3, 0.0) + threshold AND NOT(in_benchmark),1,0))\n          AS generated_false_positive,\n      SUM(IF(generated_score < IF('generated' = 'learned', 0.3, 0.0) + threshold AND in_benchmark,1,0)) AS generated_false_negative\n  ,\n      SUM(IF(received_score >= IF('received' = 'learned', 0.3, 0.0) + threshold AND in_benchmark,1,0)) AS received_true_positive,\n      SUM(IF(received_score >= IF('received' = 'learned', 0.3, 0.0) + threshold AND NOT(in_benchmark),1,0))\n          AS received_false_positive,\n      SUM(IF(received_score < IF('received' = 'learned', 0.3, 0.0) + threshold AND in_benchmark,1,0)) AS received_false_negative\n  ,\n      SUM(IF(consumed_score >= IF('consumed' = 'learned', 0.3, 0.0) + threshold AND in_benchmark,1,0)) AS consumed_true_positive,\n      SUM(IF(consumed_score >= IF('consumed' = 'learned', 0.3, 0.0) + threshold AND NOT(in_benchmark),1,0))\n          AS consumed_false_positive,\n      SUM(IF(consumed_score < IF('consumed' = 'learned', 0.3, 0.0) + threshold AND in_benchmark,1,0)) AS consumed_false_negative\n  ,\n      SUM(IF(consumed_normalized_score >= IF('consumed_normalized' = 'learned', 0.3, 0.0) + threshold AND in_benchmark,1,0)) AS consumed_normalized_true_positive,\n      SUM(IF(consumed_normalized_score >= IF('consumed_normalized' = 'learned', 0.3, 0.0) + threshold AND NOT(in_benchmark),1,0))\n          AS consumed_normalized_false_positive,\n      SUM(IF(consumed_normalized_score < IF('consumed_normalized' = 'learned', 0.3, 0.0) + threshold AND in_benchmark,1,0)) AS consumed_normalized_false_negative\n  ,\n      SUM(IF(message_sends_score >= IF('message_sends' = 'learned', 0.3, 0.0) + threshold AND in_benchmark,1,0)) AS message_sends_true_positive,\n      SUM(IF(message_sends_score >= IF('message_sends' = 'learned', 0.3, 0.0) + threshold AND NOT(in_benchmark),1,0))\n          AS message_sends_false_positive,\n      SUM(IF(message_sends_score < IF('message_sends' = 'learned', 0.3, 0.0) + threshold AND in_benchmark,1,0)) AS message_sends_false_negative\n  ,\n      SUM(IF(learned_score >= IF('learned' = 'learned', 0.3, 0.0) + threshold AND in_benchmark,1,0)) AS learned_true_positive,\n      SUM(IF(learned_score >= IF('learned' = 'learned', 0.3, 0.0) + threshold AND NOT(in_benchmark),1,0))\n          AS learned_false_positive,\n      SUM(IF(learned_score < IF('learned' = 'learned', 0.3, 0.0) + threshold AND in_benchmark,1,0)) AS learned_false_negative\n\n      FROM (\n      SELECT\n          a.userid,\n          f.activity_type,\n          d.agg_level,\n          CASE d.agg_level\n              WHEN 'language' THEN a.dialect\n              WHEN 'country' THEN a.country\n              WHEN 'primary_locale' THEN a.primary_locale\n              WHEN 'account_locale' THEN a.account_locale\n              ELSE 'other'\n          END AS agg_value,\n          a.prod_score,\n          a.generated_score,\n          a.received_score,\n          a.message_sends_score,\n          a.consumed_score,\n          a.consumed_normalized_score,\n          a.learned_score,\n          c.threshold,\n          e.benchmark_type,\n          IF(e.benchmark_type IN ('survey', 'survey_not_trained'),\n              a.dialect_in_survey,\n              a.dialect_in_settings\n          ) AS in_benchmark\n      FROM\n          stg_ulm_metrics_unpivoted a\n      CROSS JOIN UNNEST(\n          ARRAY[0.05, 0.06, 0.07, 0.08, 0.09, 0.1, 0.12, 0.14, 0.16, 0.18, 0.2]\n      ) AS c(threshold)\n      CROSS JOIN UNNEST(\n          ARRAY['language', 'country', 'account_locale', 'primary_locale']\n      ) AS d(agg_level)\n      CROSS JOIN UNNEST(\n          ARRAY['survey', 'settings', 'account_settings', 'survey_not_trained']\n      ) AS e(benchmark_type)\n      CROSS JOIN UNNEST(\n          ARRAY['All', 'MAP', 'DAP']\n      ) AS f(activity_type)\n      WHERE\n          ((\n\n              e.benchmark_type = 'survey' AND\n              a.user_in_survey\n\n              ) OR (\n\n              e.benchmark_type = 'settings' AND\n              a.user_in_settings\n\n              ) OR (\n\n              e.benchmark_type = 'account_settings' AND\n              a.user_in_account_settings\n\n              ) OR (\n\n              e.benchmark_type = 'survey_not_trained' AND\n              a.user_in_survey AND\n              (MOD(userid, 100) < 20 OR MOD(userid, 100) >= 80)\n          )) AND (\n              f.activity_type = 'All' OR\n              (f.activity_type = 'MAP' AND a.l30 > 0) OR\n              (f.activity_type = 'DAP' AND a.l1 > 0)\n          ) AND\n          a.ds = '2018-04-29' AND\n          (a.user_in_survey OR a.user_in_settings)\n      )\n      GROUP BY GROUPING SETS (\n          (activity_type, agg_level, agg_value, threshold, benchmark_type),\n          (activity_type, agg_level, threshold, benchmark_type)\n      )\n)
atn3	prism	search	20180501_011456_15572_8yq33	pvc	\n    INSERT INTO dailyvolume_wz_v5 (\n        "country", "interface", "locale", "total_post_search", "trending", "nav", "nav_typed", "nonnav", "scoped", "grammar", "scoped_non_condition", "porny", "personname", "enhanced_nav_typed", "typed_ps", "typed_nav", "typed_connected", "typed_bem", "typed_diversity", "ds"\n    )\n    SELECT\n        "country", "interface", "locale", "total_post_search", "trending", "nav", "nav_typed", "nonnav", "scoped", "grammar", "scoped_non_condition", "porny", "personname", "enhanced_nav_typed", "typed_ps", "typed_nav", "typed_connected", "typed_bem", "typed_diversity", '2018-03-09'\n    FROM (\n        \nwith daily as \n    (SELECT\n            query,\n            entity_clicks,\n            classifier_post_search_map,\n            entry_point_surface,\n            entry_point_scope,\n            nav,\n            a.userid, \n            session_id,\n            type as entitytype, \n            IF(classifier_post_search_map['OFFENSIVE'] >= 500, 1, 0) AS offensivequery,\n            IF(query_length = 1, 1, 0) AS singleletter,\n            query_length,\n            country,\n            IF(connected_type IN ('page', 'group', 'user'), 1, 0) AS is_connected,\n            trending,\n            total_clicks,\n            time_spent_by_page_type,\n            time_spent_by_page_type['search'] as serp_timespent, \n            clicks_by_module,\n            entry_point_category,\n            interface, \n            locale, \n            total_bootstrap_imps ,\n            query_diversity,\n            ds\n            \n    FROM (\n            SELECT  ds, \n                    userid,\n                    query,\n                    locale, \n                    session_id, \n                    entity_clicks,\n                    interface, \n                    classifier_post_search_map,\n                    entry_point_surface,\n                    entry_point_scope,\n                    query_length,\n                    applied_filters , \n                    nav,\n                    connected_type, \n                    country,\n                    entry_point_category,\n                   IF (\n                       vertical IN ('news_v2', 'breaking_news_topic')\n                       AND entry_point_category = 'nullstate',\n                       1,\n                       0\n                   ) AS trending,\n                   time_spent_by_page_type,\n                   result_clicks_by_module,\n                   total_clicks, \n                    query_stats_extra['query_click_diversity']  as query_diversity, \n                   clicks_by_module,\n                     total_bootstrap_imps \n                FROM\n                    result_page_sessions_extended\n                WHERE ds = '2018-03-09'\n                    AND    search_subtype = 'search_simplification'\n                    AND extra['is_post_search_v3'] = '1'\n                    AND interface in ('www','android_native','iphone_native')\n                    AND userid%1000 = 1 \n            ) a\n            LEFT JOIN entityname_april4  c\n            ON a.query = c.name)\n\nSELECT \n       country, \n       interface, \n       locale, \n       count(1) as total_post_search, \n       count_if(trending = 1) as trending, \n       count_if(nav = 1) as nav, \n \n       count_if(nav = 1 and entry_point_category = 'typed') as nav_typed, \n       count_if(nav = 0) as nonnav, \n       count_if(nav = 0 and entry_point_category ='typed'\n                       and entry_point_scope in ('PROFILE','PAGE','GROUP','USER','PROFILE_GLOBAL','GROUP_GLOBAL') \n                       )as  scoped,\n       count_if(nav = 0 and entry_point_category ='typed'\n                       and entry_point_scope not in ('PROFILE','PAGE','GROUP','USER','PROFILE_GLOBAL','GROUP_GLOBAL') \n                   \n                       and (REGEXP_LIKE(query, 'post|photo')))as grammar,\n                       \n       count_if(nav = 0 and  entry_point_scope in ('PROFILE','PAGE','GROUP','USER') \n                       )as  scoped_non_condition, \n                       \n       count_if(nav = 0 and entry_point_category ='typed'\n                       and entry_point_scope not in ('PROFILE','PAGE','GROUP','USER','PROFILE_GLOBAL', 'GROUP_GLOBAL') \n                      \n                       )as porny,\n       count_if(clicks_by_module['entity:user'] >=1 and entry_point_category = 'typed') as personname, \n      \n       count_if(entry_point_category = 'typed' and \n                (entry_point_scope not in ('PROFILE','PAGE','GROUP','USER','PROFILE_GLOBAL', 'GROUP_GLOBAL')  or entry_point_scope is null)\n                and not REGEXP_LIKE(query, 'post|photo')  \n                and \n                    (nav = 1 or \n                     clicks_by_module['entity:user'] >=1 or\n                     ((contains(entitytype,'page') or  contains(entitytype,'group') or   contains(entitytype,'user'))\n                               and total_clicks = 1\n                               and entity_clicks = 1 \n                               and time_spent_by_page_type['search']<=9)\n                               \n                            )\n               ) as enhanced_nav_typed,\n        count_if(entry_point_category = 'typed') as typed_ps, \n        COUNT_IF(entry_point_category = 'typed' and nav = 1) as typed_nav,\n        COUNT_IF(entry_point_category = 'typed' and is_connected = 1 ) as typed_connected,\n        COUNT_IF(entry_point_category = 'typed' and total_bootstrap_imps >0) as typed_bem,\n        COUNT_IF(entry_point_category = 'typed' and  cast(query_diversity  as DECIMAL)  >0.26) as typed_diversity,\n        ds\nFROM daily\nGROUP BY GROUPING SETS (\n    (ds),\n    (ds,country),\n    (ds,locale ),\n    (ds,interface  ),\n    (ds,interface,country)) \norder by 4 desc                  \n       \n    \n    )\n
atn3_batch3	prism_batch	search	20180426_014821_05000_z37sy	dataswarm@backfill@search.integrity.ta_offensive_rating.ta_offensive_rating_summary_insert	/* Generated */\nINSERT INTO ta_offensive_rating_summary (\n  "pct_locale",\n  "se_version",\n  "request_locale",\n  "n_sessions",\n  "n_offensive_sessions",\n  "n_suggestions",\n  "n_rated_suggestions",\n  "n_offensive_suggestions",\n  "n_porny_suggestions",\n  "n_profanity_suggestions",\n  "n_hate_speech_suggestions",\n  "n_violence_suggestions",\n  "n_child_exploitation_suggestions",\n  "n_self_injury_suggestions",\n  "n_other_offensive_suggestions",\n  "n_sessions_weighted",\n  "n_offensive_sessions_weighted",\n  "n_rated_suggestions_weighted",\n  "n_offensive_suggestions_weighted",\n  "session_ds",\n  "n_junky_suggestions",\n  "n_junky_sessions",\n  "n_junky_suggestions_weighted",\n  "n_junky_sessions_weighted",\n  "n_offensive_sessions_nonecho",\n  "n_junky_sessions_nonecho",\n  "n_rated_suggestions_nonecho",\n  "n_offensive_suggestions_nonecho",\n  "n_junky_suggestions_nonecho",\n  "n_offensive_sessions_nonecho_weighted",\n  "n_junky_sessions_nonecho_weighted",\n  "n_rated_suggestions_nonecho_weighted",\n  "n_offensive_suggestions_nonecho_weighted",\n  "n_junky_suggestions_nonecho_weighted",\n  "ds"\n)\nSELECT\n  "pct_locale",\n  "se_version",\n  "request_locale",\n  "n_sessions",\n  "n_offensive_sessions",\n  "n_suggestions",\n  "n_rated_suggestions",\n  "n_offensive_suggestions",\n  "n_porny_suggestions",\n  "n_profanity_suggestions",\n  "n_hate_speech_suggestions",\n  "n_violence_suggestions",\n  "n_child_exploitation_suggestions",\n  "n_self_injury_suggestions",\n  "n_other_offensive_suggestions",\n  "n_sessions_weighted",\n  "n_offensive_sessions_weighted",\n  "n_rated_suggestions_weighted",\n  "n_offensive_suggestions_weighted",\n  "session_ds",\n  "n_junky_suggestions",\n  "n_junky_sessions",\n  "n_junky_suggestions_weighted",\n  "n_junky_sessions_weighted",\n  "n_offensive_sessions_nonecho",\n  "n_junky_sessions_nonecho",\n  "n_rated_suggestions_nonecho",\n  "n_offensive_suggestions_nonecho",\n  "n_junky_suggestions_nonecho",\n  "n_offensive_sessions_nonecho_weighted",\n  "n_junky_sessions_nonecho_weighted",\n  "n_rated_suggestions_nonecho_weighted",\n  "n_offensive_suggestions_nonecho_weighted",\n  "n_junky_suggestions_nonecho_weighted",\n  '2018-04-22' AS "ds"\nFROM (\n  /* User-provided */\n  with\n  tmp as (\n      SELECT\n          session_ds,\n          se_version,\n          coalesce(request_locale, 'ALL') as request_locale,\n          count(*) as n_sessions,\n          sum(offensive_session) as n_offensive_sessions,\n          sum(junky_session) as n_junky_sessions,\n          sum(n_suggestions) as n_suggestions,\n          sum(n_rated_suggestions) as n_rated_suggestions,\n          sum(n_offensive_suggestions) as n_offensive_suggestions,\n          sum(n_junky_suggestions) as n_junky_suggestions,\n          sum(cardinality(porny_suggestions)) as n_porny_suggestions,\n          sum(cardinality(profanity_suggestions)) as n_profanity_suggestions,\n          sum(cardinality(hate_speech_suggestions)) as n_hate_speech_suggestions,\n          sum(cardinality(violence_suggestions)) as n_violence_suggestions,\n          sum(cardinality(child_exploitation_suggestions))\n              as n_child_exploitation_suggestions,\n          sum(cardinality(self_injury_suggestions)) as n_self_injury_suggestions,\n          sum(cardinality(other_offensive_suggestions)) as n_other_offensive_suggestions,\n          sum(weight) AS n_sessions_weighted,\n          sum(if(offensive_session=1, weight, 0)) AS n_offensive_sessions_weighted,\n          sum(if(junky_session=1, weight, 0)) AS n_junky_sessions_weighted,\n          sum(n_rated_suggestions*weight) as n_rated_suggestions_weighted,\n          sum(n_offensive_suggestions*weight) as n_offensive_suggestions_weighted,\n          sum(n_junky_suggestions*weight) as n_junky_suggestions_weighted,\n          sum(if(offensive_session = 1 and n_offensive_suggestions > n_offensive_echo_suggestions, 1, 0))\n              as n_offensive_sessions_nonecho,\n          sum(if(junky_session = 1 and n_junky_suggestions > n_junky_echo_suggestions, 1, 0))\n              as n_junky_sessions_nonecho,\n          sum(n_rated_suggestions - n_rated_echo_suggestions)\n              as n_rated_suggestions_nonecho,\n          sum(n_offensive_suggestions - n_offensive_echo_suggestions)\n              as n_offensive_suggestions_nonecho,\n          sum(n_junky_suggestions - n_junky_echo_suggestions)\n              as n_junky_suggestions_nonecho,\n          sum(if(offensive_session = 1 and n_offensive_suggestions > n_offensive_echo_suggestions, weight, 0))\n              as n_offensive_sessions_nonecho_weighted,\n          sum(if(junky_session = 1 and n_junky_suggestions > n_junky_echo_suggestions, weight, 0))\n              as n_junky_sessions_nonecho_weighted,\n          sum((n_rated_suggestions - n_rated_echo_suggestions)*weight)\n              as n_rated_suggestions_nonecho_weighted,\n          sum((n_offensive_suggestions - n_offensive_echo_suggestions)*weight)\n              as n_offensive_suggestions_nonecho_weighted,\n          sum((n_junky_suggestions - n_junky_echo_suggestions)*weight)\n              as n_junky_suggestions_nonecho_weighted\n      from ta_offensive_rating_sessions\n      where ds = '2018-04-22'\n      group by grouping sets ((se_version, session_ds),\n                              (se_version, request_locale, session_ds))\n  ),\n  dates as (\n      select distinct(session_ds) as session_ds from tmp\n  ),\n  distr as (\n      SELECT\n          ds as session_ds,\n          coalesce(request_locale, 'ALL') as request_locale,\n          sum(sessions) as tot_sessions\n      FROM result_page_cube_extended_v2\n      WHERE ds in (select session_ds from dates)\n          AND entry_point_category = 'typed'\n          AND is_post_search = 1\n          AND interface IN ('android_native', 'iphone_native')\n      group by grouping sets ((ds), (ds, request_locale))\n  ),\n  percents as (\n      SELECT\n          request_locale,\n          session_ds,\n          tot_sessions*1.0/(max(tot_sessions) over (partition by session_ds)) as pct_locale\n      FROM distr\n  )\n  SELECT\n      percents.pct_locale as pct_locale,\n      tmp.*\n  from tmp\n  join percents\n      using (request_locale, session_ds)\n)
atn3_adhoc2	prism	cea	20180430_144645_05295_4sdg3	unidash:517134048682317:argus:494408	SELECT\n      a.ds,\n      COALESCE(a.partner,'overall') AS Partner,\n      COALESCE(b.partner_name,'Overall') AS Partner_Name,\n      COALESCE(b.country,'All') AS country,\n      COALESCE(dash_sort,0) AS dash_sort,\n      SUM(metric_value) AS WAP\n    FROM\n      xwf_daily_metrics a\n    JOIN lkp_xwf_partner b ON\n          a.partner = b. partner\n      AND b.ds = '2017-12-05'\n      AND b.dash_show = 1\n    WHERE\n      a.ds >= '2018-01-29'\n      AND a.ds <= '2018-04-29'\n      AND a.metric_type = 'wap_v3'\n    GROUP BY GROUPING SETS (\n      (a.ds, a.partner, partner_name, b.country, dash_sort),\n      (a.ds, a.partner, b.partner_name, dash_sort),\n      (a.ds, b.country),\n      (a.ds)\n    )\n  ORDER BY a.ds, b.dash_sort
ftw2_batch	prism_batch	ad_metrics	20180426_125420_30663_5gavh	dataswarm@worker@ad_metrics.video_ads.instream.instream_ads_metrics.load_metrics_table[revenue_viewer_aggregations]	/* Generated */\nINSERT INTO instream_ads_metrics_dashboard (\n  "live_vod_status",\n  "country",\n  "region",\n  "interface",\n  "metric_value",\n  "ds",\n  "source_table",\n  "metric_name"\n)\nSELECT\n  "live_vod_status",\n  "country",\n  "region",\n  "interface",\n  "metric_value",\n  '2018-04-25' AS "ds",\n  'commercial_break_revenue' AS "source_table",\n  "metric_name"\nFROM (\n  /* User-provided */\n  SELECT\n      COALESCE(live_vod_status, 'overall') AS live_vod_status,\n      COALESCE(country, 'overall') AS country,\n      COALESCE(region, 'overall') AS region,\n      COALESCE(interface, 'overall') AS interface,\n      SUM(metric_value) AS metric_value\n\n      , metric_name\n\n  FROM\n      (\n  SELECT\n      X1.live_vod_status,\n      X1.country,\n      X1.region,\n      X1.interface,\n      X2.k AS metric_name,\n      X2.v AS metric_value\n\n  FROM\n\n  (SELECT\n      CASE\n          WHEN T1.ad_pivot_type_int = 21 THEN 'is_live'\n          WHEN T1.ad_pivot_type_int = 22 THEN 'was_live'\n          WHEN T1.ad_pivot_type_int = 23 THEN 'non_live'\n          ELSE 'unknown'\n      END AS live_vod_status,\n      COALESCE(T1.country_code, 'unknown') AS country,\n      COALESCE(T3.region, 'unknown') AS region,\n      COALESCE(T2.interface_leaf_group, 'unknown') AS interface,\n      MAP(ARRAY['ads_revenue',\n                'ads_legal_impressions',\n                'ads_true_view',\n                'ads_view_10s',\n                'ads_view_3s',\n                'ads_reach'],\n          ARRAY[SUM(external_legal_budget) / 100.0,\n                SUM(legal_impressions),\n                SUM(true_view),\n                SUM(view_10s),\n                SUM(view_3s),\n                COUNT(DISTINCT user_id)]) AS metric_map\n\n  FROM\n\n  (SELECT *\n  FROM commercial_break_revenue\n  WHERE ds = '2018-04-25'\n      AND (host_video_id IN (SELECT video_id\n                            FROM dim_instream_ads_broadcasts_fast\n                    WHERE ds = '2018-04-25')\n          OR host_video_id IN (SELECT video_id\n                           FROM dim_instream_ads_vod\n                           WHERE ds='2018-04-25'\n                           AND NOT is_employee AND NOT is_test_profile))\n  ) T1\n\n  LEFT OUTER JOIN\n\n  (SELECT unconformed_interface,\n          interface_leaf_group\n  FROM dim_interface_leaf:mobile\n  WHERE ds ='2018-04-26'\n      AND SOURCE='default') T2\n\n  ON T1.page_tab = T2.unconformed_interface\n\n  LEFT OUTER JOIN\n      d_country_region_map_subs:finance T3\n\n  ON T1.country_code = T3.country_code\n\n  GROUP BY 1, 2, 3, 4) X1\n\n  CROSS JOIN UNNEST (metric_map) X2(k,v)\n  )\n\n\n  GROUP BY GROUPING SETS (\n      (metric_name, live_vod_status),\n      (metric_name, live_vod_status, country, region),\n      (metric_name, country, region),\n      (metric_name, live_vod_status, country, region, interface)\n      )\n\n\n\n  ORDER BY metric_name\n)
atn3_batch2	prism_batch	instagram	20180429_182135_90602_x3wg3	dataswarm@worker@instagram.deltoid.ig_story_ads_unit_daily.ig_story_ads_unit_daily_impressions	/* Generated */\nINSERT INTO ig_story_ads_unit_daily (\n  "userid",\n  "fb_userid",\n  "metric_key",\n  "metric_value",\n  "ds",\n  "metric_group"\n)\nSELECT\n  "userid",\n  "fb_userid",\n  "metric_key",\n  "metric_value",\n  '2018-04-27' AS "ds",\n  'impressions' AS "metric_group"\nFROM (\n  /* User-provided */\n  WITH metrics as(\n\n  SELECT\n  a.userid,\n  i.fb_userid,\n  story_type,\n  IF(story_type='organic', organic_story_impressions, ad_story_impressions)\n                                                      as story_impressions,\n  IF(story_type='organic', organic_story_reel_impressions, ad_story_reel_impressions)\n                                                      as story_reel_impressions,\n  IF(u.last_action_interface IN ('Android', 'Iphone'),\n                                  u.last_action_interface,'other') as interface,\n  IF(u.last_action_country='US','US','other') as country\n\n  FROM dim_ig_users u\n\n  -- igid mapped to at most one userid\n  LEFT OUTER JOIN\n  (\n  SELECT\n      instagram_userid,\n      fb_userid\n  FROM instagram_ad_user_map\n  WHERE ds='2018-04-27'\n  AND COALESCE(fb_userid,0)>0\n  GROUP BY 1, 2\n  ) i\n  ON u.userid=i.instagram_userid\n\n  INNER JOIN\n\n  (SELECT\n      userid,\n      SUM(organic_stories_tray_impressions_1d) as organic_story_impressions,\n      SUM(ads_stories_impressions_1d) as ad_story_impressions,\n\n      SUM(stories_organic_reel_impressions_1d) as organic_story_reel_impressions,\n      SUM(stories_ad_reel_impressions_1d) as ad_story_reel_impressions\n\n      FROM dim_ig_ads_stories_metrics\n      WHERE ds='2018-04-27'\n      AND l1=1\n      GROUP BY 1\n  ) a\n  ON a.userid=u.userid\n\n  CROSS JOIN UNNEST(ARRAY['organic','ad']) AS T(story_type)\n\n  WHERE u.ds='2018-04-27'\n  )\n\n  SELECT\n  userid,\n  fb_userid,\n  LOWER(\n      IF(interface IS NULL,'',interface || '.') ||\n      IF(country IS NULL,'',country || '.') ||\n      IF(story_type IS NULL,'',story_type || '.') ||\n      'story_impressions'\n  ) as metric_key,\n  SUM(story_impressions) as metric_value\n\n\n  FROM metrics\n\n  GROUP BY GROUPING SETS (\n  (userid, fb_userid),\n  (userid, fb_userid, interface),\n  (userid, fb_userid, country),\n  (userid, fb_userid, story_type),\n  (userid, fb_userid, interface, story_type),\n  (userid, fb_userid, country, story_type)\n  )\n\n  HAVING COALESCE(interface,'')<>'other'\n  AND    COALESCE(country,'')<>'other'\n  AND SUM(story_impressions) > 0\n\n  UNION ALL\n\n  SELECT\n  userid,\n  fb_userid,\n  LOWER(\n      IF(interface IS NULL,'',interface || '.') ||\n      IF(country IS NULL,'',country || '.') ||\n      IF(story_type IS NULL,'',story_type || '.') ||\n      'story_reel_impressions'\n  ) as metric_key,\n  SUM(story_reel_impressions) as metric_value\n\n\n  FROM metrics\n\n  GROUP BY GROUPING SETS (\n  (userid, fb_userid),\n  (userid, fb_userid, interface),\n  (userid, fb_userid, country),\n  (userid, fb_userid, story_type),\n  (userid, fb_userid, interface, story_type),\n  (userid, fb_userid, country, story_type)\n  )\n\n  HAVING COALESCE(interface,'')<>'other'\n  AND    COALESCE(country,'')<>'other'\n  AND SUM(story_reel_impressions) > 0\n)
atn2_batch1	prism_batch	identity	20180430_233721_30930_2kpvc	dataswarm@backfill@identity.profile.discovery_curation.discovery_sessions_rollups.load_discovery_daily_timespent	/* Generated */\nINSERT INTO discovery_daily_timespent (\n  "userid",\n  "interface",\n  "entry_point",\n  "sessionized_time_spent",\n  "discovery_time_spent",\n  "time_spent_bucket",\n  "num_sessions",\n  "num_downstream_profile_visits",\n  "num_cards_viewed",\n  "likes",\n  "reactions",\n  "comments",\n  "reshares",\n  "message_sends",\n  "friend_request_sends",\n  "visited_bucket_types",\n  "app_version",\n  "referrer_page_type",\n  "referrer_page_type_minor",\n  "ds"\n)\nSELECT\n  "userid",\n  "interface",\n  "entry_point",\n  "sessionized_time_spent",\n  "discovery_time_spent",\n  "time_spent_bucket",\n  "num_sessions",\n  "num_downstream_profile_visits",\n  "num_cards_viewed",\n  "likes",\n  "reactions",\n  "comments",\n  "reshares",\n  "message_sends",\n  "friend_request_sends",\n  "visited_bucket_types",\n  "app_version",\n  "referrer_page_type",\n  "referrer_page_type_minor",\n  '2018-04-26' AS "ds"\nFROM (\n  /* User-provided */\n  SELECT\n      userid,\n      COALESCE(interface, 'overall') as interface,\n      COALESCE(entry_point_name, 'overall') AS entry_point,\n      SUM(sessionized_time_spent) AS sessionized_time_spent,\n      SUM(discovery_time_spent) AS discovery_time_spent,\n      CASE\n           WHEN SUM(sessionized_time_spent) =  0.0    THEN '0s'\n           WHEN SUM(sessionized_time_spent) <= 5.0    THEN '0-5s'\n           WHEN SUM(sessionized_time_spent) <= 15.0   THEN '5-15s'\n           WHEN SUM(sessionized_time_spent) <= 30.0   THEN '15-30s'\n           WHEN SUM(sessionized_time_spent) <= 60.0   THEN '30-60s'\n           WHEN SUM(sessionized_time_spent) <= 90.0   THEN '60s-1.5min'\n           WHEN SUM(sessionized_time_spent) <= 120.0  THEN '1.5-2min'\n           WHEN SUM(sessionized_time_spent) <= 180.0  THEN '2-3min'\n           WHEN SUM(sessionized_time_spent) <= 300.0  THEN '3-5min'\n           WHEN SUM(sessionized_time_spent) >  300.0  THEN '>5min'\n           ELSE '0s'\n      END AS time_spent_bucket,\n      CAST(COUNT(DISTINCT discovery_session_id) AS SMALLINT) AS num_sessions,\n      -- get array of keys of full_profiles_time_spent (id's of visited profiles)\n      -- join arrays of visited profiles across all sessions as a set (no dupes)\n      -- finally, get the cardinality to find number of distinct profiles visited\n      CAST(\n          COALESCE(\n              CARDINALITY(\n                  ARRAY_DISTINCT(\n                      FLATTEN(\n                          ARRAY_AGG(\n                              MAP_KEYS(full_profiles_time_spent)\n                          )\n                      )\n                  )\n              ),\n              0\n          )\n      AS SMALLINT) AS num_downstream_profile_visits,\n      SUM(num_cards_viewed) AS num_cards_viewed,\n      SUM(likes) AS likes,\n      SUM(reactions) AS reactions,\n      SUM(comments) AS comments,\n      SUM(reshares) AS reshares,\n      SUM(message_sends) AS message_sends,\n      SUM(friend_request_sends) AS friend_request_sends,\n      ARRAY_DISTINCT(\n          FLATTEN(\n              ARRAY_AGG(\n                  visited_bucket_types\n              )\n          )\n      ) AS visited_bucket_types,\n      ARBITRARY(app_version) AS app_version,\n      MAX_BY(referrer_page_type, start_time_server) AS referrer_page_type,\n      MAX_BY(referrer_page_type_minor, start_time_server) AS referrer_page_type_minor\n  FROM discovery_sessions_extended\n  WHERE ds='2018-04-26'\n  GROUP BY GROUPING SETS (\n      (userid),\n      (userid, interface),\n      (userid, entry_point_name),\n      (userid, entry_point_name, interface)\n  )\n)
snc1_batch	prism_batch	entities	20180430_204421_30287_up6s6	dataswarm@worker@entities.metric_pipelines.pqi.v3.dashboard.metrics.load_pqi_dashboard_metrics[v3_weighted_attribute_score]	/* Generated */\nINSERT INTO pqi_dashboard_metrics (\n  "sample_ds",\n  "sample",\n  "provider",\n  "country",\n  "vertical",\n  "is_weighted",\n  "metric_name",\n  "metric_value",\n  "aggregation",\n  "subvertical",\n  "metric_stderr",\n  "ds",\n  "metric_group"\n)\nSELECT\n  "sample_ds",\n  "sample",\n  "provider",\n  "country",\n  "vertical",\n  "is_weighted",\n  "metric_name",\n  "metric_value",\n  "aggregation",\n  "subvertical",\n  "metric_stderr",\n  '2018-04-25' AS "ds",\n  'v3_weighted_attribute_score' AS "metric_group"\nFROM (\n  /* User-provided */\n          SELECT\n              sample_ds,\n              sample,\n              provider,\n              country,\n              vertical,\n              subvertical,\n              is_weighted,\n              metric_name,\n              metric_value,\n              NULL AS metric_stderr,\n              CASE\n                  WHEN vertical IS NULL AND subvertical IS NULL THEN 'overall'\n                  WHEN subvertical IS NULL THEN 'vertical'\n                  WHEN vertical IS NULL THEN 'subvertical'\n              END AS aggregation\n          FROM (\n              SELECT\n                  rep.sample_ds,\n                  rep.sample,\n                  rep.provider,\n                  rep.country,\n                  rep.vertical,\n                  rep.subvertical,\n                  True AS is_weighted,\n                  s.attribute_score_name AS metric_name,\n                  (\n                      SUM(cluster_weights.weight * s.attribute_score) /\n                      SUM(IF(s.attribute_score IS NOT NULL, cluster_weights.weight, 0.0))\n                  ) AS metric_value\n              FROM (\n                  SELECT\n                      sample_ds,\n                      sample,\n                      provider,\n                      cluster_id,\n\n      CASE\n          WHEN sample LIKE 'austin%' THEN 'US'\n          WHEN sample LIKE 'cndcg%' THEN UPPER(element_at(SPLIT(sample, '_'), -2))\n          ELSE UPPER(element_at(SPLIT(sample, '_'), -1))\n      END AS country\n  ,\n                      COALESCE(extra_data['vertical'], 'no_vertical') AS vertical,\n                      COALESCE(extra_data['subvertical'], 'no_subvertical') AS subvertical,\n                      attribute_scores\n                  FROM\n                      pqi_sample_with_representative_v2\n                  WHERE\n                      ds = '2018-04-25'\n                      AND sample_ds >= '2017-03-01'\n              ) rep\n              JOIN (\n                  SELECT\n                      cluster_id,\n                      sample,\n                      sample_ds,\n                      weight\n                  FROM\n                      pqi_cluster_weights\n                  WHERE\n                      ds='2018-04-25'\n                      AND weight_source='v3'\n              ) cluster_weights\n              ON\n                  rep.cluster_id = cluster_weights.cluster_id\n                  AND rep.sample_ds = cluster_weights.sample_ds\n                  AND rep.sample = cluster_weights.sample\n              CROSS JOIN UNNEST(attribute_scores) AS s (\n                  attribute_score_name,\n                  attribute_score\n              )\n              GROUP BY GROUPING SETS(\n                  (\n                      rep.sample_ds, rep.sample, rep.provider,\n                      s.attribute_score_name, rep.country\n                  ),\n                  (\n                      rep.sample_ds, rep.sample, rep.provider,\n                      s.attribute_score_name, rep.country, rep.vertical\n                  ),\n                  (\n                      rep.sample_ds, rep.sample, rep.provider,\n                      s.attribute_score_name, rep.country, rep.subvertical\n                  )\n              )\n          )\n)
atn3_batch2	prism_batch	search	20180426_140110_48575_8gtkj	dataswarm@worker@search.searcher.result_page_searchers_cube.dep_list_searchers_ta_rollup_ga_light[POLITICS][l7][insert_result_page_searchers_ta_rollup_cube_POLITICS_l7]	          INSERT INTO result_page_searchers_ta_rollup_ga_light\n          SELECT searcher_cube.aggregate_type,\n              searcher_cube.userid,\n              searcher_cube.l_ness,\n              searcher_cube.interface,\n              searcher_cube.search_subtype,\n              searcher_cube.country,\n              searcher_cube.request_locale,\n\n      searcher_cube.sessions AS sessions\n  ,\n\n      searcher_cube.sessions_with_clicks AS sessions_with_clicks\n  ,\n\n      searcher_cube.sessions_with_serp_good_clicks AS sessions_with_serp_good_clicks\n  ,\n\n      searcher_cube.sessions_with_time_spent AS sessions_with_time_spent\n  ,\n\n      searcher_cube.total_bootstrap_imps AS total_bootstrap_imps\n  ,\n\n      searcher_cube.total_clicks AS total_clicks\n  ,\n\n      searcher_cube.total_time_spent AS total_time_spent\n  ,\n\n      searcher_cube.last_sessions_with_reformulations AS last_sessions_with_reformulations\n  ,\n              searcher_cube.ds,\n              searcher_cube.intent,\n              searcher_cube.days\n          FROM (\n              SELECT\n                  CAST(CAST(CAST(POWER(2, 6) AS INTEGER) - 1 - GROUPING(rpse_ta.request_locale, rpse_ta.search_subtype, rpse_ta.interface, rpse_ta.country, rpse_ta.intent, rpse_ta.userid) AS BIGINT) AS VARCHAR) AS aggregate_type,\n                  userid,\n                  CAST(IF(\n                      BITWISE_OR_AGG(rpse_ta.datelist_int) <= 0,\n                      0,\n                      BIT_COUNT(\n                          BITWISE_AND(BITWISE_OR_AGG(rpse_ta.datelist_int),\n                          127), 64\n                      )\n                  ) AS INT) AS l_ness,\n                  rpse_ta.interface,\n                  rpse_ta.search_subtype AS search_subtype,\n                  CASE WHEN rpse_ta.country IN ('VE', 'KR', 'JP', 'TW', 'EG', 'MY', 'AU', 'AR', 'VN', 'ES', 'PL', 'CO', 'TH', 'CA', 'DE', 'PH', 'FR', 'GB', 'ID', 'IN', 'IT', 'MX', 'TR', 'BR', 'US') THEN rpse_ta.country ELSE NULL END AS country,\n                  CASE WHEN rpse_ta.request_locale IN ('hr_HR', 'sv_SE', 'cs_CZ', 'sr_RS', 'ko_KR', 'nl_NL', 'th_TH', 'el_GR', 'hu_HU', 'ro_RO', 'pt_PT', 'zh_TW', 'vi_VN', 'ar_AR', 'de_DE', 'id_ID', 'it_IT', 'es_ES', 'pl_PL', 'fr_FR', 'tr_TR', 'en_GB', 'pt_BR', 'es_LA', 'en_US') THEN rpse_ta.request_locale ELSE NULL END AS request_locale,\n\n          SUM(rpse_ta.sessions_7day) AS sessions\n      ,\n\n          SUM(rpse_ta.sessions_with_clicks_7day) AS sessions_with_clicks\n      ,\n\n          SUM(rpse_ta.sessions_with_serp_good_clicks_7day) AS sessions_with_serp_good_clicks\n      ,\n\n          SUM(rpse_ta.sessions_with_time_spent_7day) AS sessions_with_time_spent\n      ,\n\n          SUM(rpse_ta.total_bootstrap_imps_7day) AS total_bootstrap_imps\n      ,\n\n          SUM(rpse_ta.total_clicks_7day) AS total_clicks\n      ,\n\n          SUM(rpse_ta.total_time_spent_7day) AS total_time_spent\n      ,\n\n          SUM(rpse_ta.last_sessions_with_reformulations_7day) AS last_sessions_with_reformulations\n      ,\n                  '2018-04-24' AS ds,\n                  'POLITICS' AS intent,\n                  '7' AS days\n              FROM result_page_searchers_typeahead_rollup rpse_ta\n              WHERE rpse_ta.ds = '2018-04-24'\n                  AND rpse_ta.entry_point_category = 'typed'\n                  AND rpse_ta.is_classifier_post_search = 1\n                  AND rpse_ta.is_post_search = 1\n                  AND rpse_ta.intent = 'POLITICS'\n              GROUP BY GROUPING SETS (\n                ( -- 3\n  rpse_ta.userid, rpse_ta.intent\n),\n( -- 7\n  rpse_ta.userid, rpse_ta.intent, rpse_ta.country\n),\n( -- 15\n  rpse_ta.userid, rpse_ta.intent, rpse_ta.country, rpse_ta.interface\n),\n( -- 31\n  rpse_ta.userid, rpse_ta.intent, rpse_ta.country, rpse_ta.interface, rpse_ta.search_subtype\n),\n( -- 63\n  rpse_ta.userid, rpse_ta.intent, rpse_ta.country, rpse_ta.interface, rpse_ta.search_subtype, rpse_ta.request_locale\n),\n( -- 47\n  rpse_ta.userid, rpse_ta.intent, rpse_ta.country, rpse_ta.interface, rpse_ta.request_locale\n),\n( -- 23\n  rpse_ta.userid, rpse_ta.intent, rpse_ta.country, rpse_ta.search_subtype\n),\n( -- 55\n  rpse_ta.userid, rpse_ta.intent, rpse_ta.country, rpse_ta.search_subtype, rpse_ta.request_locale\n),\n( -- 39\n  rpse_ta.userid, rpse_ta.intent, rpse_ta.country, rpse_ta.request_locale\n),\n( -- 11\n  rpse_ta.userid, rpse_ta.intent, rpse_ta.interface\n),\n( -- 27\n  rpse_ta.userid, rpse_ta.intent, rpse_ta.interface, rpse_ta.search_subtype\n),\n( -- 59\n  rpse_ta.userid, rpse_ta.intent, rpse_ta.interface, rpse_ta.search_subtype, rpse_ta.request_locale\n),\n( -- 43\n  rpse_ta.userid, rpse_ta.intent, rpse_ta.interface, rpse_ta.request_locale\n),\n( -- 19\n  rpse_ta.userid, rpse_ta.intent, rpse_ta.search_subtype\n),\n( -- 51\n  rpse_ta.userid, rpse_ta.intent, rpse_ta.search_subtype, rpse_ta.request_locale\n),\n( -- 35\n  rpse_ta.userid, rpse_ta.intent, rpse_ta.request_locale\n)\n              )\n          ) searcher_cube\n          WHERE searcher_cube.l_ness > 0
ftw2_batch3	prism_batch	ad_metrics	20180430_210833_52014_ttd36	metrik_service:argus:484569	SELECT\n    ds,\n    COALESCE(sample_type, 'all') as sample_type,\n    SUM(IF(is_bad AND violation is not null, global_weight, 0.0)) *100.0 / SUM(global_weight) AS pvil\nFROM (\n    SELECT\n        ds,\n        sample_type,\n        final_tag,\n        is_bad,\n        global_weight\n    FROM ads_integrity_pvi_weighted_sample_results\n    WHERE ds between '2017-09-01' and '2017-12-15 FTE audited'\n    AND final_tag not like '%lpfail%'\n    AND sample_type IN (\n        'ml_sample',\n        'imp_weighted_pvil',\n        'realtime_ml_sample',\n        'realtime_imp_sample'\n        )\n    AND NOT (\n        (sample_type = 'imp_weighted_pvil'\n         AND (\n            ds BETWEEN '2017-04-06' AND '2017-04-12'\n            OR ds BETWEEN '2017-09-06' AND '2017-10-07'\n            OR ds BETWEEN '2017-10-17' AND '2017-11-20'\n         )\n        ) OR\n        (sample_type = 'realtime_ml_sample'\n         AND ds BETWEEN '2017-11-06' AND '2017-12-01'\n        )\n       )\n) samples\nLEFT JOIN (\n    SELECT violation\n    FROM ads_integrity_violations\n    WHERE ds = '2018-04-30'\n    AND risk_level IN ('high', 'medium')\n    AND violation <> 'adfarm'\n) violations\n    ON samples.final_tag = violations.violation\nGROUP BY GROUPING SETS(\n  (ds),\n  (ds,sample_type)\n)\nHAVING COUNT(1) > 250\nORDER BY ds, sample_type
snc1_batch	prism_batch	entities	20180430_120357_21216_up6s6	dataswarm@fastlane-worker@entities.ratings_and_reviews.create_see_more_reviews_dap_table.insert_dimension_review_seeking_dap	INSERT INTO dimension_review_seeking_dap\n\n\n  SELECT\n    flattened_client_interface,\n    country,\n    region,\n    COUNT(*) AS see_more_reviews_dap,\n    ds\nFROM (\n\nSELECT \n            rc.flattened_client_interface,\n          du.country,\n          cr.region,\n          rc.userid,\n          '2018-04-29' AS ds\n      FROM dimension_review_seekers_full rc\n      INNER JOIN dim_all_users_fast:bi du\n          ON rc.userid = du.userid\n        AND rc.ds = '2018-04-29'\n        AND du.ds = '2018-04-29' \n\n      LEFT OUTER JOIN dim_country_region_map:finance cr\n          ON du.country = cr.country_code\n       GROUP BY 1, 2, 3, 4, 5\n\n     ) sub \n      GROUP BY GROUPING SETS (\n        (ds),\n        (ds, flattened_client_interface),\n        (ds, country),\n           (ds, region)\n        )
atn3_batch3	prism_batch	locations	20180426_120429_43012_z37sy	dataswarm@worker@locations.connectivity_infra.waldo.coverage_raw_pings_daily.insert_ping_map[13]	/* Generated */\nINSERT INTO raw_pings_network_generation_daily (\n  "bing_tile",\n  "quadkey",\n  "carrier_fbid",\n  "carrier_friendly_name",\n  "full_country_name",\n  "country_iso2",\n  "network_gen_user_map",\n  "network_gen_ping_map",\n  "signal_strength_stats",\n  "ds",\n  "tile_level"\n)\nSELECT\n  "bing_tile",\n  "quadkey",\n  "carrier_fbid",\n  "carrier_friendly_name",\n  "full_country_name",\n  "country_iso2",\n  "network_gen_user_map",\n  "network_gen_ping_map",\n  "signal_strength_stats",\n  '2018-04-25' AS "ds",\n  '13' AS "tile_level"\nFROM (\n  /* User-provided */\n  SELECT\n      ARBITRARY(A.bing_tile) AS bing_tile,\n      A.quadkey AS quadkey,\n      COALESCE(carrier_fbid, 'Overall') AS carrier_fbid,\n      IF(carrier_fbid IS NOT NULL,\n         ARBITRARY(carrier_friendly_name),\n         'Overall') AS carrier_friendly_name,\n      ARBITRARY(B.country) AS full_country_name,\n      B.country_iso2 AS country_iso2,\n      MAP( ARRAY['2G', '3G', '4G'],\n           ARRAY[\n              APPROX_DISTINCT(IF(network_generation IN ('2G', 'UNKNOWN'),\n                                 anonymized_uid,\n                                 NULL)),\n              APPROX_DISTINCT(IF(network_generation = '3G', anonymized_uid, NULL)),\n              APPROX_DISTINCT(IF(network_generation = '4G', anonymized_uid, NULL))])\n      AS network_gen_user_map,\n      MAP(ARRAY['2G', '3G', '4G'],\n          ARRAY[\n              COUNT_IF(network_generation IN ('2G', 'UNKNOWN')),\n              COUNT_IF(network_generation = '3G'),\n              COUNT_IF(network_generation = '4G')])\n      AS network_gen_ping_map,\n      MAP( ARRAY['2G', '3G', '4G'],\n          ARRAY[\n              APPROX_PERCENTILE(IF(network_generation IN ('2G', 'UNKNOWN') AND\n                                      rssi_dbm < -20,\n                                   rssi_dbm,\n                                   NULL), ARRAY[0.95]),\n              APPROX_PERCENTILE(IF(network_generation = '3G' AND rssi_dbm < -20,\n                                   rssi_dbm, NULL), ARRAY[0.95]),\n              APPROX_PERCENTILE(IF(network_generation = '4G' AND rssi_dbm < -20,\n                                   rssi_dbm, NULL), ARRAY[0.95])])\n      AS signal_strength_stats\n  FROM\n      (SELECT\n          bing_tile_13 AS bing_tile,\n          CONCAT('13',\n                 'z',\n                 SUBSTR(quadkey_20,\n                        4,\n                        13)) AS quadkey,\n          anonymized_uid,\n          rssi_dbm,\n          network_generation,\n          network_operator_mcc_mnc,\n          country\n      FROM\n          device_signal_cell_by_tile\n      WHERE\n          ds='2018-04-25' AND\n      NOT FB_IS_EMPTY(network_generation) AND\n      NOT FB_IS_EMPTY(network_operator_mcc_mnc) AND\n      NOT FB_IS_EMPTY(country) AND\n      NOT FB_IS_EMPTY(quadkey_20))A\n  INNER JOIN\n      (SELECT\n          IF(country = 'United States of America',\n             'United States',\n             country) AS country,\n          mcc,\n          mnc,\n          CAST(carrier_fbid_dim_source AS VARCHAR) AS carrier_fbid,\n          friendly_name AS carrier_friendly_name,\n          country_iso2\n      FROM\n          tdo_ni_mcc_mnc:mobile\n      WHERE\n          ds='2018-04-26' AND\n          NOT FB_IS_EMPTY(carrier_fbid_dim_source))B\n  ON\n      LOWER(A.country) = LOWER(B.country) AND\n      SUBSTR(A.network_operator_mcc_mnc, 1,3) = B.mcc AND\n      TRY_CAST(SUBSTR(A.network_operator_mcc_mnc, 4) AS INT) = TRY_CAST(B.mnc AS INT)\n  GROUP BY GROUPING SETS(\n      (A.quadkey, B.country_iso2),\n      (A.quadkey, B.carrier_fbid, B.country_iso2))\n)
de4ftw2	raptor	de	20180430_053503_05780_7biv3	unidash:433697550418624:argus:485535	/*\naggregate_type for cube:\n    - interface                  1\n    - country                    2\n    - region                     4\n    - locale                     8\n    - usecase_type              16\n    - filter_type               32\n    - video_state_type          64\n    - is_show_episode          128\n    \ncube has only next grouping sets:\n0, 6, 7, 22, 23, 38, 39, 70, 71, 87, 134, 135, 167, 255\n\nthus for missing we will be using closest one's\nthat impact searchers and sessions metrics quality\nas they are non-additive\n\n*/\n\nWITH agg_type_raw AS (\n\tSELECT\n  \t(0\n       + IF(CARDINALITY(ARRAY_EXCEPT(ARRAY['__ALL__'], ARRAY['__ALL__'])) > 0\n            OR 'ds' = 'interface', 1, 0)\n       + IF(CARDINALITY(ARRAY_EXCEPT(ARRAY['__ALL__'], ARRAY['__ALL__'])) > 0\n            OR 'ds' = 'country', 2, 0)\n       + IF(CARDINALITY(ARRAY_EXCEPT(ARRAY['__ALL__'], ARRAY['__ALL__'])) > 0\n            OR 'ds' = 'region', 4, 0)\n       + IF(CARDINALITY(ARRAY_EXCEPT(ARRAY['__ALL__'], ARRAY['__ALL__'])) > 0\n            OR 'ds' = 'locale', 8, 0)\n       + IF(CARDINALITY(ARRAY_EXCEPT(ARRAY['__ALL__'], ARRAY['__ALL__'])) > 0\n            OR 'ds' = 'usecase_type', 16, 0)\n       + IF(CARDINALITY(ARRAY_EXCEPT(ARRAY['__ALL__'], ARRAY['__ALL__'])) > 0\n            OR 'ds' = 'filter_type', 32, 0)\n       + IF(CARDINALITY(ARRAY_EXCEPT(ARRAY['__ALL__'], ARRAY['__ALL__'])) > 0\n            OR 'ds' = 'video_state_type', 64, 0)\n       + IF(CARDINALITY(ARRAY_EXCEPT(ARRAY['__ALL__'], ARRAY['__ALL__'])) > 0\n            OR 'ds' = 'is_show_episode', 128, 0)\n    ) AS aggregate_type\n),\nagg_type_adj AS (\n    SELECT\n        ARRAY_MIN(\n            FILTER(ARRAY [0, 6, 7, 22, 23, 38, 39, 70, 71, 87, 134, 135, 167, 255], \n                   x -> BITWISE_AND(aggregate_type, x) = aggregate_type)\n        ) AS aggregate_type\n    FROM agg_type_raw\n),\npre_agg AS (\n    SELECT\n        ds,\n        CASE\n  \t\t\t    WHEN 'ds' = 'ds'\n  \t\t\t\t\t\tTHEN ''\n  \t\t\t\t\tWHEN contains(aggregation_level, 'ds')\n  \t\t\t    \tTHEN COALESCE(CAST(ds AS VARCHAR), 'NULL')\n  \t\t\t    ELSE 'Overall'\n  \t\t\tEND AS dim,\n  \t\t\t/*---Watch Time---*/\n        (COALESCE(SUM(serp_video_watch_time_spent), 0) + \n  \t\t\t COALESCE(SUM(downstream_video_watch_time_spent), 0)\n        ) * 1.0 / 3600 AS "SEARCH_WT",\n  \t\t\tSUM(serp_video_watch_time_spent) * 1.0 / 3600 AS "SERP_WT",\n  \t\t\tSUM(downstream_video_watch_time_spent) * 1.0 / 3600 AS "DS_WT",\n  \t\t\t/*---Volume---*/\n  \t\t\tSUM(sessions) AS "SEARCH_VOL_RAW",\n  \t\t\tSUM(sessions_w_serp_watch) AS "SERP_VOL_RAW",\n        SUM(sessions_w_true_watch) AS "SEARCH_VOL",\n  \t\t\tSUM(sessions_w_serp_true_watch) AS "SERP_VOL",\n        SUM(sessions_w_ds_true_watch) AS "DS_VOL",\n  \t\t\t/*---DAS---*/\n  \t\t\tSUM(searchers) AS "SEARCH_DAS_RAW",\n  \t\t\tSUM(searchers_w_serp_watch) AS "SERP_DAS_RAW",\n  \t\t\tSUM(searchers_w_true_watch) AS "SEARCH_DAS",\n  \t\t\tSUM(searchers_w_serp_true_watch) AS "SERP_DAS",\n  \t\t\tSUM(searchers_w_ds_true_watch) AS "DS_DAS",\n  \t\t\t/*---Ratio---*/\n  \t\t\t(COALESCE(SUM(serp_video_watch_time_spent), 0) + \n  \t\t\t COALESCE(SUM(downstream_video_watch_time_spent), 0)\n        ) * 1.0 / 3600 / SUM(sessions_w_true_watch) AS "TPS",\n  \t\t\t(COALESCE(SUM(serp_video_watch_time_spent), 0) + \n  \t\t\t COALESCE(SUM(downstream_video_watch_time_spent), 0)\n        ) * 1.0 / 3600 / SUM(searchers_w_true_watch) AS "TPP",\n  \t\t\tSUM(sessions_w_true_watch) / 1.0 / SUM(searchers_w_true_watch) AS "SPP"\n    FROM search_video_cube c\n    INNER JOIN agg_type_adj a USING (aggregate_type)\n    WHERE ds >= (DATE '2017-07-01')\n        AND (COALESCE(interface, 'NULL') IN ('__ALL__') \n            OR '__ALL__' IN ('__ALL__'))\n        AND (COALESCE(country, 'NULL') IN ('__ALL__') \n            OR '__ALL__' IN ('__ALL__'))\n        AND (COALESCE(region, 'NULL') IN ('__ALL__') \n            OR '__ALL__' IN ('__ALL__'))\n\t\t\t  AND (COALESCE(locale, 'NULL') IN ('__ALL__') \n            OR '__ALL__' IN ('__ALL__'))\n        AND (COALESCE(usecase_type, 'NULL') IN ('__ALL__') \n            OR '__ALL__' IN ('__ALL__'))\n        AND (COALESCE(filter_type, 'NULL') IN ('__ALL__') \n            OR '__ALL__' IN ('__ALL__'))\n        AND (COALESCE(video_state_type, 'NULL') IN ('__ALL__') \n            OR '__ALL__' IN ('__ALL__'))\n        AND (COALESCE(CAST(is_show_episode AS VARCHAR), 'NULL') IN ('__ALL__') \n            OR '__ALL__' IN ('__ALL__'))\n    GROUP BY ds,\n        CASE\n  \t\t\t    WHEN 'ds' = 'ds'\n  \t\t\t\t\t\tTHEN ''\n  \t\t\t\t\tWHEN contains(aggregation_level, 'ds')\n  \t\t\t    \tTHEN COALESCE(CAST(ds AS VARCHAR), 'NULL')\n  \t\t\t    ELSE 'Overall'\n  \t\t\tEND\n)\nSELECT \n    ds,\n    dim,\n    \n      AVG("SEARCH_WT") OVER (PARTITION BY dim ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS "SEARCH_WT-7d"\n\t\t\t\n      , "SEARCH_WT" AS "SEARCH_WT-1d"\n      \n      ,\n    \n      AVG("SERP_WT") OVER (PARTITION BY dim ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS "SERP_WT-7d"\n\t\t\t\n      , "SERP_WT" AS "SERP_WT-1d"\n      \n      ,\n    \n      AVG("DS_WT") OVER (PARTITION BY dim ORDER BY ds ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS "DS_WT-7d"\n\t\t\t\n      , "DS_WT" AS "DS_WT-1d"\n      \n      \n    \nFROM pre_agg\nORDER BY 1 DESC, 3 DESC
ftw2_batch3	prism_batch	videos	20180501_051750_13441_ttd36	dataswarm@backfill@videos.games.user_streamer_tracking.aggregate_growth_fields	/* Generated */\nINSERT INTO game_streamer_growth_funnel_agg (\n  "new_fans",\n  "fans",\n  "is_live_imp_nonfan",\n  "is_live_imp_nonfan_60",\n  "is_live_imp_nonfan_chained",\n  "is_live_imp_nonfan_60_chained",\n  "was_live_imp_nonfan",\n  "was_live_imp_nonfan_60",\n  "was_live_imp_nonfan_chained",\n  "was_live_imp_nonfan_60_chained",\n  "vod_imp_nonfan",\n  "vod_imp_nonfan_60",\n  "vod_imp_nonfan_chained",\n  "vod_imp_nonfan_60_chained",\n  "is_live_imp_user_nonfan",\n  "is_live_imp_user_nonfan_60",\n  "is_live_imp_user_nonfan_chained",\n  "is_live_imp_user_nonfan_60_chained",\n  "was_live_imp_user_nonfan",\n  "was_live_imp_user_nonfan_60",\n  "was_live_imp_user_nonfan_chained",\n  "was_live_imp_user_nonfan_60_chained",\n  "vod_imp_user_nonfan",\n  "vod_imp_user_nonfan_60",\n  "vod_imp_user_nonfan_chained",\n  "vod_imp_user_nonfan_60_chained",\n  "is_live_imp_user_nonfan_follow",\n  "is_live_imp_user_nonfan_60_follow",\n  "is_live_imp_user_nonfan_chained_follow",\n  "is_live_imp_user_nonfan_60_chained_follow",\n  "was_live_imp_user_nonfan_follow",\n  "was_live_imp_user_nonfan_60_follow",\n  "was_live_imp_user_nonfan_chained_follow",\n  "was_live_imp_user_nonfan_60_chained_follow",\n  "vod_imp_user_nonfan_follow",\n  "vod_imp_user_nonfan_60_follow",\n  "vod_imp_user_nonfan_chained_follow",\n  "vod_imp_user_nonfan_60_chained_follow",\n  "is_live_imp_fan_daily",\n  "is_live_imp_fan_60_daily",\n  "is_live_imp_fan_chained_daily",\n  "is_live_imp_fan_60_chained_daily",\n  "was_live_imp_fan_daily",\n  "was_live_imp_fan_60_daily",\n  "was_live_imp_fan_chained_daily",\n  "was_live_imp_fan_60_chained_daily",\n  "vod_imp_fan_daily",\n  "vod_imp_fan_60_daily",\n  "vod_imp_fan_chained_daily",\n  "vod_imp_fan_60_chained_daily",\n  "is_live_imp_user_fan_daily",\n  "is_live_imp_user_fan_60_daily",\n  "is_live_imp_user_fan_chained_daily",\n  "is_live_imp_user_fan_60_chained_daily",\n  "was_live_imp_user_fan_daily",\n  "was_live_imp_user_fan_60_daily",\n  "was_live_imp_user_fan_chained_daily",\n  "was_live_imp_user_fan_60_chained_daily",\n  "vod_imp_user_fan_daily",\n  "vod_imp_user_fan_60_daily",\n  "vod_imp_user_fan_chained_daily",\n  "vod_imp_user_fan_60_chained_daily",\n  "is_live_imp_user_fan_weekly",\n  "is_live_imp_user_fan_60_weekly",\n  "is_live_imp_user_fan_chained_weekly",\n  "is_live_imp_user_fan_60_chained_weekly",\n  "was_live_imp_user_fan_weekly",\n  "was_live_imp_user_fan_60_weekly",\n  "was_live_imp_user_fan_chained_weekly",\n  "was_live_imp_user_fan_60_chained_weekly",\n  "vod_imp_user_fan_weekly",\n  "vod_imp_user_fan_60_weekly",\n  "vod_imp_user_fan_chained_weekly",\n  "vod_imp_user_fan_60_chained_weekly",\n  "l2_7_overall_fan",\n  "l2_7_off_feed_overall_fan",\n  "l2_7_vod_fan",\n  "l2_7_off_feed_vod_fan",\n  "l2_7_live_fan",\n  "l2_7_off_feed_live_fan",\n  "l2_7_overall_nonfan",\n  "l2_7_vod_nonfan",\n  "l2_7_live_nonfan",\n  "l2_7_off_feed_overall_nonfan",\n  "l2_7_off_feed_vod_nonfan",\n  "l2_7_off_feed_live_nonfan",\n  "l7d14_num_overall_fan",\n  "l7d14_num_off_feed_overall_fan",\n  "l7d14_num_live_fan",\n  "l7d14_num_off_feed_live_fan",\n  "l7d14_num_vod_fan",\n  "l7d14_num_off_feed_vod_fan",\n  "l7d14_denom_overall_fan",\n  "l7d14_denom_off_feed_overall_fan",\n  "l7d14_denom_live_fan",\n  "l7d14_denom_off_feed_live_fan",\n  "l7d14_denom_vod_fan",\n  "l7d14_denom_off_feed_vod_fan",\n  "l7d14_num_overall_new_fan",\n  "l7d14_num_off_feed_overall_new_fan",\n  "l7d14_num_live_new_fan",\n  "l7d14_num_off_feed_live_new_fan",\n  "l7d14_num_vod_new_fan",\n  "l7d14_num_off_feed_vod_new_fan",\n  "l7d14_denom_overall_new_fan",\n  "l7d14_denom_off_feed_overall_new_fan",\n  "l7d14_denom_live_new_fan",\n  "l7d14_denom_off_feed_live_new_fan",\n  "l7d14_denom_vod_new_fan",\n  "l7d14_denom_off_feed_vod_new_fan",\n  "l7d14_num_overall_nonfan",\n  "l7d14_num_off_feed_overall_nonfan",\n  "l7d14_num_live_nonfan",\n  "l7d14_num_off_feed_live_nonfan",\n  "l7d14_num_vod_nonfan",\n  "l7d14_num_off_feed_vod_nonfan",\n  "l7d14_denom_overall_nonfan",\n  "l7d14_denom_off_feed_overall_nonfan",\n  "l7d14_denom_live_nonfan",\n  "l7d14_denom_off_feed_live_nonfan",\n  "l7d14_denom_vod_nonfan",\n  "l7d14_denom_off_feed_vod_nonfan",\n  "d1_num_overall_fan",\n  "d1_num_off_feed_overall_fan",\n  "d1_num_live_fan",\n  "d1_num_off_feed_live_fan",\n  "d1_num_vod_fan",\n  "d1_num_off_feed_vod_fan",\n  "d1_denom_overall_fan",\n  "d1_denom_off_feed_overall_fan",\n  "d1_denom_live_fan",\n  "d1_denom_off_feed_live_fan",\n  "d1_denom_vod_fan",\n  "d1_denom_off_feed_vod_fan",\n  "d1_num_overall_new_fan",\n  "d1_num_off_feed_overall_new_fan",\n  "d1_num_live_new_fan",\n  "d1_num_off_feed_live_new_fan",\n  "d1_num_vod_new_fan",\n  "d1_num_off_feed_vod_new_fan",\n  "d1_denom_overall_new_fan",\n  "d1_denom_off_feed_overall_new_fan",\n  "d1_denom_live_new_fan",\n  "d1_denom_off_feed_live_new_fan",\n  "d1_denom_vod_new_fan",\n  "d1_denom_off_feed_vod_new_fan",\n  "d1_num_overall_nonfan",\n  "d1_num_off_feed_overall_nonfan",\n  "d1_num_live_nonfan",\n  "d1_num_off_feed_live_nonfan",\n  "d1_num_vod_nonfan",\n  "d1_num_off_feed_vod_nonfan",\n  "d1_denom_overall_nonfan",\n  "d1_denom_off_feed_overall_nonfan",\n  "d1_denom_live_nonfan",\n  "d1_denom_off_feed_live_nonfan",\n  "d1_denom_vod_nonfan",\n  "d1_denom_off_feed_vod_nonfan",\n  "live_watch_time_feed_fan",\n  "live_watch_time_off_feed_fan",\n  "live_watch_time_feed_unchained_nonfan",\n  "live_watch_time_nonfan_feed_chained_nonfan",\n  "live_watch_time_off_feed_nonfan",\n  "vod_watch_time_feed_fan",\n  "vod_watch_time_off_feed_fan",\n  "vod_watch_time_feed_unchained_nonfan",\n  "vod_watch_time_nonfan_feed_chained_nonfan",\n  "vod_watch_time_off_feed_nonfan",\n  "creator_type",\n  "country",\n  "ds"\n)\nSELECT\n  "new_fans",\n  "fans",\n  "is_live_imp_nonfan",\n  "is_live_imp_nonfan_60",\n  "is_live_imp_nonfan_chained",\n  "is_live_imp_nonfan_60_chained",\n  "was_live_imp_nonfan",\n  "was_live_imp_nonfan_60",\n  "was_live_imp_nonfan_chained",\n  "was_live_imp_nonfan_60_chained",\n  "vod_imp_nonfan",\n  "vod_imp_nonfan_60",\n  "vod_imp_nonfan_chained",\n  "vod_imp_nonfan_60_chained",\n  "is_live_imp_user_nonfan",\n  "is_live_imp_user_nonfan_60",\n  "is_live_imp_user_nonfan_chained",\n  "is_live_imp_user_nonfan_60_chained",\n  "was_live_imp_user_nonfan",\n  "was_live_imp_user_nonfan_60",\n  "was_live_imp_user_nonfan_chained",\n  "was_live_imp_user_nonfan_60_chained",\n  "vod_imp_user_nonfan",\n  "vod_imp_user_nonfan_60",\n  "vod_imp_user_nonfan_chained",\n  "vod_imp_user_nonfan_60_chained",\n  "is_live_imp_user_nonfan_follow",\n  "is_live_imp_user_nonfan_60_follow",\n  "is_live_imp_user_nonfan_chained_follow",\n  "is_live_imp_user_nonfan_60_chained_follow",\n  "was_live_imp_user_nonfan_follow",\n  "was_live_imp_user_nonfan_60_follow",\n  "was_live_imp_user_nonfan_chained_follow",\n  "was_live_imp_user_nonfan_60_chained_follow",\n  "vod_imp_user_nonfan_follow",\n  "vod_imp_user_nonfan_60_follow",\n  "vod_imp_user_nonfan_chained_follow",\n  "vod_imp_user_nonfan_60_chained_follow",\n  "is_live_imp_fan_daily",\n  "is_live_imp_fan_60_daily",\n  "is_live_imp_fan_chained_daily",\n  "is_live_imp_fan_60_chained_daily",\n  "was_live_imp_fan_daily",\n  "was_live_imp_fan_60_daily",\n  "was_live_imp_fan_chained_daily",\n  "was_live_imp_fan_60_chained_daily",\n  "vod_imp_fan_daily",\n  "vod_imp_fan_60_daily",\n  "vod_imp_fan_chained_daily",\n  "vod_imp_fan_60_chained_daily",\n  "is_live_imp_user_fan_daily",\n  "is_live_imp_user_fan_60_daily",\n  "is_live_imp_user_fan_chained_daily",\n  "is_live_imp_user_fan_60_chained_daily",\n  "was_live_imp_user_fan_daily",\n  "was_live_imp_user_fan_60_daily",\n  "was_live_imp_user_fan_chained_daily",\n  "was_live_imp_user_fan_60_chained_daily",\n  "vod_imp_user_fan_daily",\n  "vod_imp_user_fan_60_daily",\n  "vod_imp_user_fan_chained_daily",\n  "vod_imp_user_fan_60_chained_daily",\n  "is_live_imp_user_fan_weekly",\n  "is_live_imp_user_fan_60_weekly",\n  "is_live_imp_user_fan_chained_weekly",\n  "is_live_imp_user_fan_60_chained_weekly",\n  "was_live_imp_user_fan_weekly",\n  "was_live_imp_user_fan_60_weekly",\n  "was_live_imp_user_fan_chained_weekly",\n  "was_live_imp_user_fan_60_chained_weekly",\n  "vod_imp_user_fan_weekly",\n  "vod_imp_user_fan_60_weekly",\n  "vod_imp_user_fan_chained_weekly",\n  "vod_imp_user_fan_60_chained_weekly",\n  "l2_7_overall_fan",\n  "l2_7_off_feed_overall_fan",\n  "l2_7_vod_fan",\n  "l2_7_off_feed_vod_fan",\n  "l2_7_live_fan",\n  "l2_7_off_feed_live_fan",\n  "l2_7_overall_nonfan",\n  "l2_7_vod_nonfan",\n  "l2_7_live_nonfan",\n  "l2_7_off_feed_overall_nonfan",\n  "l2_7_off_feed_vod_nonfan",\n  "l2_7_off_feed_live_nonfan",\n  "l7d14_num_overall_fan",\n  "l7d14_num_off_feed_overall_fan",\n  "l7d14_num_live_fan",\n  "l7d14_num_off_feed_live_fan",\n  "l7d14_num_vod_fan",\n  "l7d14_num_off_feed_vod_fan",\n  "l7d14_denom_overall_fan",\n  "l7d14_denom_off_feed_overall_fan",\n  "l7d14_denom_live_fan",\n  "l7d14_denom_off_feed_live_fan",\n  "l7d14_denom_vod_fan",\n  "l7d14_denom_off_feed_vod_fan",\n  "l7d14_num_overall_new_fan",\n  "l7d14_num_off_feed_overall_new_fan",\n  "l7d14_num_live_new_fan",\n  "l7d14_num_off_feed_live_new_fan",\n  "l7d14_num_vod_new_fan",\n  "l7d14_num_off_feed_vod_new_fan",\n  "l7d14_denom_overall_new_fan",\n  "l7d14_denom_off_feed_overall_new_fan",\n  "l7d14_denom_live_new_fan",\n  "l7d14_denom_off_feed_live_new_fan",\n  "l7d14_denom_vod_new_fan",\n  "l7d14_denom_off_feed_vod_new_fan",\n  "l7d14_num_overall_nonfan",\n  "l7d14_num_off_feed_overall_nonfan",\n  "l7d14_num_live_nonfan",\n  "l7d14_num_off_feed_live_nonfan",\n  "l7d14_num_vod_nonfan",\n  "l7d14_num_off_feed_vod_nonfan",\n  "l7d14_denom_overall_nonfan",\n  "l7d14_denom_off_feed_overall_nonfan",\n  "l7d14_denom_live_nonfan",\n  "l7d14_denom_off_feed_live_nonfan",\n  "l7d14_denom_vod_nonfan",\n  "l7d14_denom_off_feed_vod_nonfan",\n  "d1_num_overall_fan",\n  "d1_num_off_feed_overall_fan",\n  "d1_num_live_fan",\n  "d1_num_off_feed_live_fan",\n  "d1_num_vod_fan",\n  "d1_num_off_feed_vod_fan",\n  "d1_denom_overall_fan",\n  "d1_denom_off_feed_overall_fan",\n  "d1_denom_live_fan",\n  "d1_denom_off_feed_live_fan",\n  "d1_denom_vod_fan",\n  "d1_denom_off_feed_vod_fan",\n  "d1_num_overall_new_fan",\n  "d1_num_off_feed_overall_new_fan",\n  "d1_num_live_new_fan",\n  "d1_num_off_feed_live_new_fan",\n  "d1_num_vod_new_fan",\n  "d1_num_off_feed_vod_new_fan",\n  "d1_denom_overall_new_fan",\n  "d1_denom_off_feed_overall_new_fan",\n  "d1_denom_live_new_fan",\n  "d1_denom_off_feed_live_new_fan",\n  "d1_denom_vod_new_fan",\n  "d1_denom_off_feed_vod_new_fan",\n  "d1_num_overall_nonfan",\n  "d1_num_off_feed_overall_nonfan",\n  "d1_num_live_nonfan",\n  "d1_num_off_feed_live_nonfan",\n  "d1_num_vod_nonfan",\n  "d1_num_off_feed_vod_nonfan",\n  "d1_denom_overall_nonfan",\n  "d1_denom_off_feed_overall_nonfan",\n  "d1_denom_live_nonfan",\n  "d1_denom_off_feed_live_nonfan",\n  "d1_denom_vod_nonfan",\n  "d1_denom_off_feed_vod_nonfan",\n  "live_watch_time_feed_fan",\n  "live_watch_time_off_feed_fan",\n  "live_watch_time_feed_unchained_nonfan",\n  "live_watch_time_nonfan_feed_chained_nonfan",\n  "live_watch_time_off_feed_nonfan",\n  "vod_watch_time_feed_fan",\n  "vod_watch_time_off_feed_fan",\n  "vod_watch_time_feed_unchained_nonfan",\n  "vod_watch_time_nonfan_feed_chained_nonfan",\n  "vod_watch_time_off_feed_nonfan",\n  "creator_type",\n  "country",\n  '2018-04-28' AS "ds"\nFROM (\n  /* User-provided */\n  SELECT\n      SUM(new_fans) as new_fans,\n      SUM(fans) as fans,\n      SUM(is_live_imp_nonfan) as is_live_imp_nonfan,\n      SUM(is_live_imp_nonfan_60) as is_live_imp_nonfan_60,\n      SUM(is_live_imp_nonfan_chained) as is_live_imp_nonfan_chained,\n      SUM(is_live_imp_nonfan_60_chained) as is_live_imp_nonfan_60_chained,\n      SUM(was_live_imp_nonfan) as was_live_imp_nonfan,\n      SUM(was_live_imp_nonfan_60) as was_live_imp_nonfan_60,\n      SUM(was_live_imp_nonfan_chained) as was_live_imp_nonfan_chained,\n      SUM(was_live_imp_nonfan_60_chained) as was_live_imp_nonfan_60_chained,\n      SUM(vod_imp_nonfan) as vod_imp_nonfan,\n      SUM(vod_imp_nonfan_60) as vod_imp_nonfan_60,\n      SUM(vod_imp_nonfan_chained) as vod_imp_nonfan_chained,\n      SUM(vod_imp_nonfan_60_chained) as vod_imp_nonfan_60_chained,\n      SUM(is_live_imp_user_nonfan) as is_live_imp_user_nonfan,\n      SUM(is_live_imp_user_nonfan_60) as is_live_imp_user_nonfan_60,\n      SUM(is_live_imp_user_nonfan_chained) as is_live_imp_user_nonfan_chained,\n      SUM(is_live_imp_user_nonfan_60_chained) as is_live_imp_user_nonfan_60_chained,\n      SUM(was_live_imp_user_nonfan) as was_live_imp_user_nonfan,\n      SUM(was_live_imp_user_nonfan_60) as was_live_imp_user_nonfan_60,\n      SUM(was_live_imp_user_nonfan_chained) as was_live_imp_user_nonfan_chained,\n      SUM(was_live_imp_user_nonfan_60_chained) as was_live_imp_user_nonfan_60_chained,\n      SUM(vod_imp_user_nonfan) as vod_imp_user_nonfan,\n      SUM(vod_imp_user_nonfan_60) as vod_imp_user_nonfan_60,\n      SUM(vod_imp_user_nonfan_chained) as vod_imp_user_nonfan_chained,\n      SUM(vod_imp_user_nonfan_60_chained) as vod_imp_user_nonfan_60_chained,\n      SUM(is_live_imp_user_nonfan_follow) as is_live_imp_user_nonfan_follow,\n      SUM(is_live_imp_user_nonfan_60_follow) as is_live_imp_user_nonfan_60_follow,\n      SUM(is_live_imp_user_nonfan_chained_follow) as is_live_imp_user_nonfan_chained_follow,\n      SUM(is_live_imp_user_nonfan_60_chained_follow) as is_live_imp_user_nonfan_60_chained_follow,\n      SUM(was_live_imp_user_nonfan_follow) as was_live_imp_user_nonfan_follow,\n      SUM(was_live_imp_user_nonfan_60_follow) as was_live_imp_user_nonfan_60_follow,\n      SUM(was_live_imp_user_nonfan_chained_follow) as was_live_imp_user_nonfan_chained_follow,\n      SUM(was_live_imp_user_nonfan_60_chained_follow) as was_live_imp_user_nonfan_60_chained_follow,\n      SUM(vod_imp_user_nonfan_follow) as vod_imp_user_nonfan_follow,\n      SUM(vod_imp_user_nonfan_60_follow) as vod_imp_user_nonfan_60_follow,\n      SUM(vod_imp_user_nonfan_chained_follow) as vod_imp_user_nonfan_chained_follow,\n      SUM(vod_imp_user_nonfan_60_chained_follow) as vod_imp_user_nonfan_60_chained_follow,\n      SUM(is_live_imp_fan_daily) as is_live_imp_fan_daily,\n      SUM(is_live_imp_fan_60_daily) as is_live_imp_fan_60_daily,\n      SUM(is_live_imp_fan_chained_daily) as is_live_imp_fan_chained_daily,\n      SUM(is_live_imp_fan_60_chained_daily) as is_live_imp_fan_60_chained_daily,\n      SUM(was_live_imp_fan_daily) as was_live_imp_fan_daily,\n      SUM(was_live_imp_fan_60_daily) as was_live_imp_fan_60_daily,\n      SUM(was_live_imp_fan_chained_daily) as was_live_imp_fan_chained_daily,\n      SUM(was_live_imp_fan_60_chained_daily) as was_live_imp_fan_60_chained_daily,\n      SUM(vod_imp_fan_daily) as vod_imp_fan_daily,\n      SUM(vod_imp_fan_60_daily) as vod_imp_fan_60_daily,\n      SUM(vod_imp_fan_chained_daily) as vod_imp_fan_chained_daily,\n      SUM(vod_imp_fan_60_chained_daily) as vod_imp_fan_60_chained_daily,\n      SUM(is_live_imp_user_fan_daily) as is_live_imp_user_fan_daily,\n      SUM(is_live_imp_user_fan_60_daily) as is_live_imp_user_fan_60_daily,\n      SUM(is_live_imp_user_fan_chained_daily) as is_live_imp_user_fan_chained_daily,\n      SUM(is_live_imp_user_fan_60_chained_daily) as is_live_imp_user_fan_60_chained_daily,\n      SUM(was_live_imp_user_fan_daily) as was_live_imp_user_fan_daily,\n      SUM(was_live_imp_user_fan_60_daily) as was_live_imp_user_fan_60_daily,\n      SUM(was_live_imp_user_fan_chained_daily) as was_live_imp_user_fan_chained_daily,\n      SUM(was_live_imp_user_fan_60_chained_daily) as was_live_imp_user_fan_60_chained_daily,\n      SUM(vod_imp_user_fan_daily) as vod_imp_user_fan_daily,\n      SUM(vod_imp_user_fan_60_daily) as vod_imp_user_fan_60_daily,\n      SUM(vod_imp_user_fan_chained_daily) as vod_imp_user_fan_chained_daily,\n      SUM(vod_imp_user_fan_60_chained_daily) as vod_imp_user_fan_60_chained_daily,\n      SUM(is_live_imp_user_fan_weekly) as is_live_imp_user_fan_weekly,\n      SUM(is_live_imp_user_fan_60_weekly) as is_live_imp_user_fan_60_weekly,\n      SUM(is_live_imp_user_fan_chained_weekly) as is_live_imp_user_fan_chained_weekly,\n      SUM(is_live_imp_user_fan_60_chained_weekly) as is_live_imp_user_fan_60_chained_weekly,\n      SUM(was_live_imp_user_fan_weekly) as was_live_imp_user_fan_weekly,\n      SUM(was_live_imp_user_fan_60_weekly) as was_live_imp_user_fan_60_weekly,\n      SUM(was_live_imp_user_fan_chained_weekly) as was_live_imp_user_fan_chained_weekly,\n      SUM(was_live_imp_user_fan_60_chained_weekly) as was_live_imp_user_fan_60_chained_weekly,\n      SUM(vod_imp_user_fan_weekly) as vod_imp_user_fan_weekly,\n      SUM(vod_imp_user_fan_60_weekly) as vod_imp_user_fan_60_weekly,\n      SUM(vod_imp_user_fan_chained_weekly) as vod_imp_user_fan_chained_weekly,\n      SUM(vod_imp_user_fan_60_chained_weekly) as vod_imp_user_fan_60_chained_weekly,\n      SUM(l2_7_overall_fan) as l2_7_overall_fan,\n      SUM(l2_7_off_feed_overall_fan) as l2_7_off_feed_overall_fan,\n      SUM(l2_7_vod_fan) as l2_7_vod_fan,\n      SUM(l2_7_off_feed_vod_fan) as l2_7_off_feed_vod_fan,\n      SUM(l2_7_live_fan) as l2_7_live_fan,\n      SUM(l2_7_off_feed_live_fan) as l2_7_off_feed_live_fan,\n      SUM(l2_7_overall_nonfan) as l2_7_overall_nonfan,\n      SUM(l2_7_vod_nonfan) as l2_7_vod_nonfan,\n      SUM(l2_7_live_nonfan) as l2_7_live_nonfan,\n      SUM(l2_7_off_feed_overall_nonfan) as l2_7_off_feed_overall_nonfan,\n      SUM(l2_7_off_feed_vod_nonfan) as l2_7_off_feed_vod_nonfan,\n      SUM(l2_7_off_feed_live_nonfan) as l2_7_off_feed_live_nonfan,\n      SUM(l7d14_num_overall_fan) as l7d14_num_overall_fan,\n      SUM(l7d14_num_off_feed_overall_fan) as l7d14_num_off_feed_overall_fan,\n      SUM(l7d14_num_live_fan) as l7d14_num_live_fan,\n      SUM(l7d14_num_off_feed_live_fan) as l7d14_num_off_feed_live_fan,\n      SUM(l7d14_num_vod_fan) as l7d14_num_vod_fan,\n      SUM(l7d14_num_off_feed_vod_fan) as l7d14_num_off_feed_vod_fan,\n      SUM(l7d14_denom_overall_fan) as l7d14_denom_overall_fan,\n      SUM(l7d14_denom_off_feed_overall_fan) as l7d14_denom_off_feed_overall_fan,\n      SUM(l7d14_denom_live_fan) as l7d14_denom_live_fan,\n      SUM(l7d14_denom_off_feed_live_fan) as l7d14_denom_off_feed_live_fan,\n      SUM(l7d14_denom_vod_fan) as l7d14_denom_vod_fan,\n      SUM(l7d14_denom_off_feed_vod_fan) as l7d14_denom_off_feed_vod_fan,\n      SUM(l7d14_num_overall_new_fan) as l7d14_num_overall_new_fan,\n      SUM(l7d14_num_off_feed_overall_new_fan) as l7d14_num_off_feed_overall_new_fan,\n      SUM(l7d14_num_live_new_fan) as l7d14_num_live_new_fan,\n      SUM(l7d14_num_off_feed_live_new_fan) as l7d14_num_off_feed_live_new_fan,\n      SUM(l7d14_num_vod_new_fan) as l7d14_num_vod_new_fan,\n      SUM(l7d14_num_off_feed_vod_new_fan) as l7d14_num_off_feed_vod_new_fan,\n      SUM(l7d14_denom_overall_new_fan) as l7d14_denom_overall_new_fan,\n      SUM(l7d14_denom_off_feed_overall_new_fan) as l7d14_denom_off_feed_overall_new_fan,\n      SUM(l7d14_denom_live_new_fan) as l7d14_denom_live_new_fan,\n      SUM(l7d14_denom_off_feed_live_new_fan) as l7d14_denom_off_feed_live_new_fan,\n      SUM(l7d14_denom_vod_new_fan) as l7d14_denom_vod_new_fan,\n      SUM(l7d14_denom_off_feed_vod_new_fan) as l7d14_denom_off_feed_vod_new_fan,\n      SUM(l7d14_num_overall_nonfan) as l7d14_num_overall_nonfan,\n      SUM(l7d14_num_off_feed_overall_nonfan) as l7d14_num_off_feed_overall_nonfan,\n      SUM(l7d14_num_live_nonfan) as l7d14_num_live_nonfan,\n      SUM(l7d14_num_off_feed_live_nonfan) as l7d14_num_off_feed_live_nonfan,\n      SUM(l7d14_num_vod_nonfan) as l7d14_num_vod_nonfan,\n      SUM(l7d14_num_off_feed_vod_nonfan) as l7d14_num_off_feed_vod_nonfan,\n      SUM(l7d14_denom_overall_nonfan) as l7d14_denom_overall_nonfan,\n      SUM(l7d14_denom_off_feed_overall_nonfan) as l7d14_denom_off_feed_overall_nonfan,\n      SUM(l7d14_denom_live_nonfan) as l7d14_denom_live_nonfan,\n      SUM(l7d14_denom_off_feed_live_nonfan) as l7d14_denom_off_feed_live_nonfan,\n      SUM(l7d14_denom_vod_nonfan) as l7d14_denom_vod_nonfan,\n      SUM(l7d14_denom_off_feed_vod_nonfan) as l7d14_denom_off_feed_vod_nonfan,\n      SUM(d1_num_overall_fan) as d1_num_overall_fan,\n      SUM(d1_num_off_feed_overall_fan) as d1_num_off_feed_overall_fan,\n      SUM(d1_num_live_fan) as d1_num_live_fan,\n      SUM(d1_num_off_feed_live_fan) as d1_num_off_feed_live_fan,\n      SUM(d1_num_vod_fan) as d1_num_vod_fan,\n      SUM(d1_num_off_feed_vod_fan) as d1_num_off_feed_vod_fan,\n      SUM(d1_denom_overall_fan) as d1_denom_overall_fan,\n      SUM(d1_denom_off_feed_overall_fan) as d1_denom_off_feed_overall_fan,\n      SUM(d1_denom_live_fan) as d1_denom_live_fan,\n      SUM(d1_denom_off_feed_live_fan) as d1_denom_off_feed_live_fan,\n      SUM(d1_denom_vod_fan) as d1_denom_vod_fan,\n      SUM(d1_denom_off_feed_vod_fan) as d1_denom_off_feed_vod_fan,\n      SUM(d1_num_overall_new_fan) as d1_num_overall_new_fan,\n      SUM(d1_num_off_feed_overall_new_fan) as d1_num_off_feed_overall_new_fan,\n      SUM(d1_num_live_new_fan) as d1_num_live_new_fan,\n      SUM(d1_num_off_feed_live_new_fan) as d1_num_off_feed_live_new_fan,\n      SUM(d1_num_vod_new_fan) as d1_num_vod_new_fan,\n      SUM(d1_num_off_feed_vod_new_fan) as d1_num_off_feed_vod_new_fan,\n      SUM(d1_denom_overall_new_fan) as d1_denom_overall_new_fan,\n      SUM(d1_denom_off_feed_overall_new_fan) as d1_denom_off_feed_overall_new_fan,\n      SUM(d1_denom_live_new_fan) as d1_denom_live_new_fan,\n      SUM(d1_denom_off_feed_live_new_fan) as d1_denom_off_feed_live_new_fan,\n      SUM(d1_denom_vod_new_fan) as d1_denom_vod_new_fan,\n      SUM(d1_denom_off_feed_vod_new_fan) as d1_denom_off_feed_vod_new_fan,\n      SUM(d1_num_overall_nonfan) as d1_num_overall_nonfan,\n      SUM(d1_num_off_feed_overall_nonfan) as d1_num_off_feed_overall_nonfan,\n      SUM(d1_num_live_nonfan) as d1_num_live_nonfan,\n      SUM(d1_num_off_feed_live_nonfan) as d1_num_off_feed_live_nonfan,\n      SUM(d1_num_vod_nonfan) as d1_num_vod_nonfan,\n      SUM(d1_num_off_feed_vod_nonfan) as d1_num_off_feed_vod_nonfan,\n      SUM(d1_denom_overall_nonfan) as d1_denom_overall_nonfan,\n      SUM(d1_denom_off_feed_overall_nonfan) as d1_denom_off_feed_overall_nonfan,\n      SUM(d1_denom_live_nonfan) as d1_denom_live_nonfan,\n      SUM(d1_denom_off_feed_live_nonfan) as d1_denom_off_feed_live_nonfan,\n      SUM(d1_denom_vod_nonfan) as d1_denom_vod_nonfan,\n      SUM(d1_denom_off_feed_vod_nonfan) as d1_denom_off_feed_vod_nonfan,\n      SUM(live_watch_time_feed_fan) as live_watch_time_feed_fan,\n      SUM(live_watch_time_off_feed_fan) as live_watch_time_off_feed_fan,\n      SUM(live_watch_time_feed_unchained_nonfan) as live_watch_time_feed_unchained_nonfan,\n      SUM(live_watch_time_nonfan_feed_chained_nonfan) as live_watch_time_nonfan_feed_chained_nonfan,\n      SUM(live_watch_time_off_feed_nonfan) as live_watch_time_off_feed_nonfan,\n      SUM(vod_watch_time_feed_fan) as vod_watch_time_feed_fan,\n      SUM(vod_watch_time_off_feed_fan) as vod_watch_time_off_feed_fan,\n      SUM(vod_watch_time_feed_unchained_nonfan) as vod_watch_time_feed_unchained_nonfan,\n      SUM(vod_watch_time_nonfan_feed_chained_nonfan) as vod_watch_time_nonfan_feed_chained_nonfan,\n      SUM(vod_watch_time_off_feed_nonfan) as vod_watch_time_off_feed_nonfan,\n      creator_type,\n      country\n  FROM game_streamer_growth_funnel\n  where ds = '2018-04-28'\n      --I don't want explosions of 'growth' from adding pages;\n      --This will still aggressively bump up our total fan count\n      --In some cases, but won't add "10m NEW followers"\n      --If we add a 10m follower page\n      AND page_id in\n      (\n          select distinct page_id\n          FROM games_streamer_audience\n          WHERE ds = '2018-04-27'\n      )\n  GROUP BY GROUPING SETS\n      (\n          (), -- overall cut\n          (creator_type), -- creator type cut\n          (country) -- country cut\n      )\n)
snc1_batch	prism_batch	entities	20180426_041950_08796_h39yu	dataswarm@test@entities.espi3.pqi_v4_calculator_prod.extra[pqi_grouped_sliced_scores][run_presto]	/* Generated */\nINSERT INTO test_tmp_andriy_b10de34bbe259e29edd5bd075ca95c40b182f484_20180424 (\n  "ds",\n  "dimensions",\n  "metrics_avg_value",\n  "metrics_f_score",\n  "es_id"\n)\nSELECT\n  "ds",\n  "dimensions",\n  "metrics_avg_value",\n  "metrics_f_score",\n  'b10de34bbe259e29edd5bd075ca95c40b182f484' AS "es_id"\nFROM (\n  /* User-provided */\n                      SELECT ds, dimensions, metrics_avg_value, metrics_f_score, 'b10de34bbe259e29edd5bd075ca95c40b182f484' AS es_id\n                      FROM (\n          SELECT\n              sample_ds AS ds,\n  MAP_FILTER(MAP(ARRAY['sample', 'country', 'engagement', 'vertical', 'sample_ds'] ,ARRAY[sample, country, engagement, vertical, sample_ds]),                (k, v) -> v IS NOT NULL ) AS dimensions,\n  MAP_FROM_ENTRIES(ARRAY[('pin_recalladdress_recall', AVG(metrics['pin_recalladdress_recall'])), \n  ('hours_recall', AVG(metrics['hours_recall'])), \n  ('pin_score', AVG(metrics['pin_score'])), \n  ('dupe_precision', AVG(metrics['dupe_precision'])), \n  ('pin_precision', AVG(metrics['pin_precision'])), \n  ('coverage_score', AVG(metrics['coverage_score'])), \n  ('website_recall', AVG(metrics['website_recall'])), \n  ('profile_photo_recall', AVG(metrics['profile_photo_recall'])), \n  ('phone_precision', AVG(metrics['phone_precision'])), \n  ('category_score', AVG(metrics['category_score'])), \n  ('phone_recall', AVG(metrics['phone_recall'])), \n  ('price_range_precision', AVG(metrics['price_range_precision'])), \n  ('category_gold_score', AVG(metrics['category_gold_score'])), \n  ('dupe_recall', AVG(metrics['dupe_recall'])), \n  ('email_recall', AVG(metrics['email_recall'])), \n  ('website_precision', AVG(metrics['website_precision'])), \n  ('hours_precision', AVG(metrics['hours_precision'])), \n  ('category_relevance', AVG(metrics['category_relevance'])), \n  ('junk_score', AVG(metrics['junk_score'])), \n  ('address_precision', AVG(metrics['address_precision']))]) AS metrics_avg_value,\n  MAP_FROM_ENTRIES(ARRAY[('website_score', \n                              (1.0 + 0.25) * AVG(metrics['website_precision']) *         AVG(metrics['website_recall']) / (0.25 * AVG(metrics['website_precision']) +         AVG(metrics['website_recall']))\n                              ), \n  ('hours_score', \n                              (1.0 + 0.25) * AVG(metrics['hours_precision']) *         AVG(metrics['hours_recall']) / (0.25 * AVG(metrics['hours_precision']) +         AVG(metrics['hours_recall']))\n                              ), \n  ('dupe_score', \n                              (1.0 + 4.0) * AVG(metrics['dupe_precision']) *         AVG(metrics['dupe_recall']) / (4.0 * AVG(metrics['dupe_precision']) +         AVG(metrics['dupe_recall']))\n                              ), \n  ('phone_score', \n                              (1.0 + 0.25) * AVG(metrics['phone_precision']) *         AVG(metrics['phone_recall']) / (0.25 * AVG(metrics['phone_precision']) +         AVG(metrics['phone_recall']))\n                              ), \n  ('address_score', \n                              (1.0 + 0.25) * AVG(metrics['address_precision']) *         AVG(metrics['address_recall']) / (0.25 * AVG(metrics['address_precision']) +         AVG(metrics['address_recall']))\n                              ), \n  ('price_range_score', \n                              (1.0 + 0.25) * AVG(metrics['price_range_precision']) *         AVG(metrics['price_range_recall']) / (0.25 * AVG(metrics['price_range_precision']) +         AVG(metrics['price_range_recall']))\n                              )]) AS metrics_f_score\n\n              FROM(\n                  SELECT\n                      sample_ds,\n                      place_id,\n                      dimensions['country'] AS country,\n                      dimensions['engagement'] AS engagement,\n                      dimensions['vertical'] AS vertical,\n                      dimensions['sample'] AS sample,\n                      MAP_AGG(metric, value) AS metrics\n                  FROM\n                      (SELECT * FROM andriy_delete_pqi_v4_entity_metrics WHERE ds = '2018-04-14' AND gold = 'prod' AND graph = 'facebook_prod') candidate\n                  GROUP BY\n                     1,\n                     2,\n                     3,\n                     4,\n                     5,\n                     6\n              )\n              GROUP BY\n                  GROUPING SETS ((sample_ds,sample), \n  (sample_ds,country), \n  (sample_ds,vertical), \n  (sample_ds,engagement), \n  (sample_ds,country,vertical), \n  (sample_ds,country,engagement))\n\n          ) t\n)
atn3_batch	prism_batch	search	20180429_101309_61385_i7xzh	dataswarm@worker@search.searcher.result_page_searchers_cube.dep_list_searchers_extended_ga_light[COMMERCE_GROUP][l28][insert_result_page_searchers_extended_cube_COMMERCE_GROUP_l28]	          INSERT INTO result_page_searchers_extended_ga_light\n          SELECT searcher_cube.aggregate_type,\n              searcher_cube.userid,\n              searcher_cube.l_ness,\n              searcher_cube.interface,\n              searcher_cube.search_subtype,\n              searcher_cube.country,\n              searcher_cube.request_locale,\n\n      searcher_cube.sessions AS sessions\n  ,\n\n      searcher_cube.sessions_with_clicks AS sessions_with_clicks\n  ,\n\n      searcher_cube.sessions_with_serp_good_clicks AS sessions_with_serp_good_clicks\n  ,\n\n      searcher_cube.sessions_with_entity_clicks AS sessions_with_entity_clicks\n  ,\n\n      searcher_cube.total_bootstrap_imps AS total_bootstrap_imps\n  ,\n\n      searcher_cube.total_clicks AS total_clicks\n  ,\n\n      searcher_cube.total_good_clicks AS total_good_clicks\n  ,\n\n      searcher_cube.total_time_spent AS total_time_spent\n  ,\n\n      searcher_cube.video_total_time_spent AS video_total_time_spent\n  ,\n\n      searcher_cube.downstream_video_total_time_spent AS downstream_video_total_time_spent\n  ,\n              searcher_cube.ds,\n              searcher_cube.intent,\n              searcher_cube.days\n          FROM (\n              SELECT\n                  CAST(CAST(CAST(POWER(2, 6) AS INTEGER) - 1 - GROUPING(rpse.request_locale, rpse.search_subtype, rpse.interface, rpse.country, rpse.intent, rpse.userid) AS BIGINT) AS VARCHAR) AS aggregate_type,\n                  userid,\n                  CAST(IF(\n                      BITWISE_OR_AGG(rpse.datelist_int) <= 0,\n                      0,\n                      BIT_COUNT(BITWISE_AND(BITWISE_OR_AGG(rpse.datelist_int), 268435455), 64)\n                  ) AS INT) AS l_ness,\n                  rpse.interface,\n                  rpse.search_subtype AS search_subtype,\n                  CASE WHEN rpse.country IN ('VE', 'KR', 'JP', 'TW', 'EG', 'MY', 'AU', 'AR', 'VN', 'ES', 'PL', 'CO', 'TH', 'CA', 'DE', 'PH', 'FR', 'GB', 'ID', 'IN', 'IT', 'MX', 'TR', 'BR', 'US') THEN rpse.country ELSE NULL END AS country,\n                  CASE WHEN rpse.request_locale IN ('hr_HR', 'sv_SE', 'cs_CZ', 'sr_RS', 'ko_KR', 'nl_NL', 'th_TH', 'el_GR', 'hu_HU', 'ro_RO', 'pt_PT', 'zh_TW', 'vi_VN', 'ar_AR', 'de_DE', 'id_ID', 'it_IT', 'es_ES', 'pl_PL', 'fr_FR', 'tr_TR', 'en_GB', 'pt_BR', 'es_LA', 'en_US') THEN rpse.request_locale ELSE NULL END AS request_locale,\n\n          SUM(rpse.sessions_28day) AS sessions\n      ,\n\n          SUM(rpse.sessions_with_clicks_28day) AS sessions_with_clicks\n      ,\n\n          SUM(rpse.sessions_with_serp_good_clicks_28day) AS sessions_with_serp_good_clicks\n      ,\n\n          SUM(rpse.sessions_with_entity_clicks_28day) AS sessions_with_entity_clicks\n      ,\n\n          SUM(rpse.total_bootstrap_imps_28day) AS total_bootstrap_imps\n      ,\n\n          SUM(rpse.total_clicks_28day) AS total_clicks\n      ,\n\n          SUM(rpse.total_good_clicks_28day) AS total_good_clicks\n      ,\n\n          SUM(rpse.total_time_spent_28day) AS total_time_spent\n      ,\n\n          SUM(rpse.video_total_time_spent_28day) AS video_total_time_spent\n      ,\n\n          SUM(rpse.downstream_video_total_time_spent_28day) AS downstream_video_total_time_spent\n      ,\n                  '2018-04-27' AS ds,\n                  'COMMERCE_GROUP' AS intent,\n                  '28' AS days\n              FROM result_page_searchers_extended rpse\n              WHERE rpse.ds = '2018-04-27'\n                  AND rpse.entry_point_category = 'typed'\n                  AND rpse.is_classifier_post_search = 1\n                  AND rpse.is_post_search = 1\n                  AND rpse.intent = 'COMMERCE_GROUP'\n              GROUP BY GROUPING SETS (\n                ( -- 3\n  rpse.userid, rpse.intent\n),\n( -- 7\n  rpse.userid, rpse.intent, rpse.country\n),\n( -- 15\n  rpse.userid, rpse.intent, rpse.country, rpse.interface\n),\n( -- 31\n  rpse.userid, rpse.intent, rpse.country, rpse.interface, rpse.search_subtype\n),\n( -- 63\n  rpse.userid, rpse.intent, rpse.country, rpse.interface, rpse.search_subtype, rpse.request_locale\n),\n( -- 47\n  rpse.userid, rpse.intent, rpse.country, rpse.interface, rpse.request_locale\n),\n( -- 23\n  rpse.userid, rpse.intent, rpse.country, rpse.search_subtype\n),\n( -- 55\n  rpse.userid, rpse.intent, rpse.country, rpse.search_subtype, rpse.request_locale\n),\n( -- 39\n  rpse.userid, rpse.intent, rpse.country, rpse.request_locale\n),\n( -- 11\n  rpse.userid, rpse.intent, rpse.interface\n),\n( -- 27\n  rpse.userid, rpse.intent, rpse.interface, rpse.search_subtype\n),\n( -- 59\n  rpse.userid, rpse.intent, rpse.interface, rpse.search_subtype, rpse.request_locale\n),\n( -- 43\n  rpse.userid, rpse.intent, rpse.interface, rpse.request_locale\n),\n( -- 19\n  rpse.userid, rpse.intent, rpse.search_subtype\n),\n( -- 51\n  rpse.userid, rpse.intent, rpse.search_subtype, rpse.request_locale\n),\n( -- 35\n  rpse.userid, rpse.intent, rpse.request_locale\n)\n              )\n          ) searcher_cube\n          WHERE searcher_cube.l_ness > 0
